import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("4 ", '#', '#');
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setTrimmerMatcher(strMatcher3);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer11.setDelimiterMatcher(strMatcher19);
        int int21 = strTokenizer20.size();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8);
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher24);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer25.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher13, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher59);
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer60.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher68);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer71.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer7.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("4 ", '4', ' ');
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        java.lang.String str12 = strTokenizer11.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4 " + "'", str12, "4 ");
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.String str17 = strTokenizer16.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4 " + "'", str17, "4 ");
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoreEmptyTokens(true);
        java.lang.Class<?> wildcardClass11 = strTokenizer8.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer17.setTrimmerMatcher(strMatcher39);
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.setIgnoredMatcher(strMatcher72);
        char[] charArray79 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher86);
        char[] charArray90 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer93.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer87.setDelimiterMatcher(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher72, strMatcher95);
        int int98 = strTokenizer97.size();
        java.lang.Object obj99 = strTokenizer97.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer17.setTrimmerMatcher(strMatcher39);
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.setIgnoredMatcher(strMatcher72);
        char[] charArray79 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher86);
        char[] charArray90 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer93.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer87.setDelimiterMatcher(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher72, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = strTokenizer0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        boolean boolean17 = strTokenizer16.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "");
        java.lang.String str14 = strTokenizer13.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setTrimmerMatcher(strMatcher15);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", 'a', 'a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.add("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Class<?> wildcardClass1 = strTokenizer0.getClass();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        java.lang.Class<?> wildcardClass67 = strTokenizer66.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer26.getDelimiterMatcher();
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher51, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("StrTokenizer[4 ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        java.lang.Class<?> wildcardClass36 = strTokenizer35.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher12);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getQuoteMatcher();
        java.lang.Class<?> wildcardClass4 = strMatcher3.getClass();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setQuoteChar('4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = strTokenizer10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.set("4 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setQuoteChar('4');
        java.lang.String str13 = strTokenizer10.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer8.setDelimiterChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = strTokenizer8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer28.add("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList30);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "hi!");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer71.set("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.Class<?> wildcardClass33 = strMatcher30.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        java.lang.Class<?> wildcardClass35 = strTokenizer8.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(" ");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setTrimmerMatcher(strMatcher15);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        boolean boolean4 = strTokenizer2.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        java.lang.Class<?> wildcardClass11 = charArray2.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher18);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer19.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset(" ");
        boolean boolean20 = strTokenizer16.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        java.lang.String str21 = strTokenizer20.previousToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("StrTokenizer[4 ]");
        java.lang.String str6 = strTokenizer5.toString();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(" ");
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("4");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = strTokenizer34.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterChar('4');
        java.lang.String[] strArray21 = strTokenizer18.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        boolean boolean53 = strTokenizer8.isEmptyTokenAsNull();
        boolean boolean54 = strTokenizer8.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        int int34 = strTokenizer8.nextIndex();
        java.lang.String str35 = strTokenizer8.previousToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer32.setDelimiterChar('4');
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, 'a', ' ');
        char[] charArray77 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getTrimmerMatcher();
        char[] charArray87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, "");
        java.lang.String str90 = strTokenizer89.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer89.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher85, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer68.setQuoteMatcher(strMatcher85);
        java.lang.String str95 = strTokenizer68.previousToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        char[] charArray1 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.set("4 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[#]");
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        java.util.List<java.lang.String> strList53 = strTokenizer52.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer52.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strList53);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4 ", "");
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        char[] charArray2 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        java.lang.String str5 = strTokenizer3.previousToken();
        java.lang.String str6 = strTokenizer3.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[a#]" + "'", str6, "StrTokenizer[a#]");
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ', '#');
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher31);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer32.setTrimmerMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher42);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher63);
        java.lang.String str67 = strTokenizer66.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11);
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer12.setDelimiterMatcher(strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20, strMatcher29);
        java.lang.String str31 = strTokenizer30.nextToken();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", "");
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setQuoteChar('#');
        char[] charArray34 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer37.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer30.setIgnoredMatcher(strMatcher49);
        java.lang.Class<?> wildcardClass52 = strMatcher49.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.Object obj17 = strTokenizer5.clone();
        boolean boolean18 = strTokenizer5.hasNext();
        java.lang.String str19 = strTokenizer5.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4 " + "'", str19, "4 ");
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        boolean boolean3 = strTokenizer1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasPrevious();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.setDelimiterMatcher(strMatcher29);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setTrimmerMatcher(strMatcher38);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, "");
        java.lang.String str37 = strTokenizer36.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer8.setDelimiterMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        boolean boolean41 = strTokenizer39.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer5.setIgnoredMatcher(strMatcher14);
        java.lang.String str16 = strTokenizer5.toString();
        java.lang.String[] strArray17 = strTokenizer5.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[4 ]" + "'", str16, "StrTokenizer[4 ]");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        boolean boolean3 = strTokenizer1.hasPrevious();
        java.lang.String[] strArray4 = strTokenizer1.getTokenArray();
        char[] charArray7 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12);
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer1.setTrimmerMatcher(strMatcher23);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        java.lang.Class<?> wildcardClass31 = strList30.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        java.util.List<java.lang.String> strList74 = strTokenizer73.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer9.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer9.getDelimiterMatcher();
        boolean boolean35 = strTokenizer9.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer9.getQuoteMatcher();
        char[] charArray37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "");
        java.lang.String str40 = strTokenizer39.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher36, strMatcher41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = strTokenizer42.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8);
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher24);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer25.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher13, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher59);
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer60.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterString(" ");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = strTokenizer0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        boolean boolean3 = strTokenizer1.hasPrevious();
        java.lang.String[] strArray4 = strTokenizer1.getTokenArray();
        char[] charArray7 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12);
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer1.setTrimmerMatcher(strMatcher23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = strTokenizer1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        java.util.List<java.lang.String> strList53 = strTokenizer52.getTokenList();
        java.lang.Class<?> wildcardClass54 = strList53.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        int int17 = strTokenizer5.previousIndex();
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25);
        char[] charArray27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        char[] charArray34 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher41);
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer42.setDelimiterMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher30, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer5.setDelimiterMatcher(strMatcher30);
        boolean boolean54 = strTokenizer53.hasPrevious();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        java.lang.String str3 = strTokenizer2.getContent();
        int int4 = strTokenizer2.size();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer5.setIgnoredMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoreEmptyTokens(true);
        java.lang.Class<?> wildcardClass18 = strTokenizer17.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer8.setDelimiterChar(' ');
        boolean boolean38 = strTokenizer8.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        java.util.List<java.lang.String> strList12 = strTokenizer11.getTokenList();
        java.lang.String str13 = strTokenizer11.toString();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[]" + "'", str13, "StrTokenizer[]");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = strTokenizer52.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer11.setDelimiterMatcher(strMatcher19);
        java.lang.String str21 = strTokenizer20.getContent();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setTrimmerMatcher(strMatcher15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = strTokenizer16.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("4 ");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        java.lang.String str11 = strTokenizer10.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.set("4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        char[] charArray2 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "4 ");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.add("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a#]", '#', '#');
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("StrTokenizer[not tokenized yet]");
        java.lang.Class<?> wildcardClass6 = strTokenizer5.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        java.lang.String str21 = strTokenizer20.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer20.add(" ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4 " + "'", str21, "4 ");
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[4 ]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a');
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        java.lang.String str74 = strTokenizer71.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "4 " + "'", str74, "4 ");
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.reset();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer6.getQuoteMatcher();
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher8, strMatcher15);
        boolean boolean17 = strTokenizer16.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(" ");
        boolean boolean2 = strTokenizer1.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        boolean boolean10 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer17.setTrimmerMatcher(strMatcher39);
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.setIgnoredMatcher(strMatcher72);
        char[] charArray79 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher86);
        char[] charArray90 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer93.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer87.setDelimiterMatcher(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher72, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        int int99 = strTokenizer98.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("4 ");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        boolean boolean4 = strTokenizer2.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher73);
        char[] charArray77 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer74.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer62.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer62.getDelimiterMatcher();
        boolean boolean88 = strTokenizer62.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        java.lang.Object obj92 = strTokenizer91.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer17.setTrimmerMatcher(strMatcher39);
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.setIgnoredMatcher(strMatcher72);
        char[] charArray79 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher86);
        char[] charArray90 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer93.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer87.setDelimiterMatcher(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher72, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer97.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer98.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getQuoteMatcher();
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher23);
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer30.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setDelimiterMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ', '#');
        char[] charArray51 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher58);
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer59.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer35.setTrimmerMatcher(strMatcher69);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher54);
        boolean boolean57 = strTokenizer56.hasPrevious();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        boolean boolean11 = strTokenizer10.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setDelimiterString("hi!");
        int int14 = strTokenizer10.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        int int2 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.reset("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strTokenizer5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher1);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", "4 ");
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("4");
        int int6 = strTokenizer2.previousIndex();
        java.lang.String str7 = strTokenizer2.next();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterChar('4');
        int int21 = strTokenizer18.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher18);
        boolean boolean20 = strTokenizer19.hasPrevious();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("StrTokenizer[not tokenized yet]");
        int int6 = strTokenizer5.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        boolean boolean10 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setTrimmerMatcher(strMatcher12);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        int int17 = strTokenizer5.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        java.util.List<java.lang.String> strList3 = strTokenizer2.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        int int8 = strTokenizer7.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a#]", "StrTokenizer[StrTokenizer[4 ]]");
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, "");
        java.lang.String str37 = strTokenizer36.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer8.setDelimiterMatcher(strMatcher38);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer39.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4", '4');
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        java.lang.Class<?> wildcardClass18 = charArray9.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.String str17 = strTokenizer16.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4 " + "'", str17, "4 ");
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        char[] charArray2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        java.lang.String str5 = strTokenizer4.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer4.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(" ", strMatcher6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray12 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.reset(charArray12);
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher35);
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer36.setDelimiterMatcher(strMatcher44);
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher44, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer23.setTrimmerMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("4", strMatcher6, strMatcher53);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getDelimiterMatcher();
        java.lang.Object obj31 = strTokenizer28.clone();
        java.lang.String str32 = strTokenizer28.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setTrimmerMatcher(strMatcher11);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.set("StrTokenizer[4 ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        int int2 = strTokenizer0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer0.set("StrTokenizer[a#]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        java.util.List<java.lang.String> strList8 = strTokenizer7.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer36.set("StrTokenizer[StrTokenizer[4 ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        java.lang.String str23 = strTokenizer22.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = strTokenizer6.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        java.lang.String str52 = strTokenizer51.getContent();
        boolean boolean53 = strTokenizer51.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4 " + "'", str52, "4 ");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        java.lang.String str2 = strTokenizer0.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", "StrTokenizer[a#]");
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4", "StrTokenizer[StrTokenizer[4 ]]");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", "StrTokenizer[4 ]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getTrimmerMatcher();
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        java.lang.String str21 = strTokenizer20.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer20.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer24.reset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = strTokenizer24.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a#]", '#', '4');
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        java.lang.Class<?> wildcardClass18 = strTokenizer17.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        java.util.List<java.lang.String> strList53 = strTokenizer52.getTokenList();
        java.lang.String str54 = strTokenizer52.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int58 = strTokenizer57.size();
        char[] charArray59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "");
        java.lang.String str62 = strTokenizer61.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer57.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer52.setTrimmerMatcher(strMatcher63);
        boolean boolean66 = strTokenizer52.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[4 ]" + "'", str54, "StrTokenizer[4 ]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer32.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        boolean boolean17 = strTokenizer5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.set("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer56.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer44.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer44.getDelimiterMatcher();
        char[] charArray72 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer75.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher69, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher79);
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("StrTokenizer[4 ]");
        java.lang.String str55 = strTokenizer51.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4 " + "'", str52, "4 ");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "4 " + "'", str55, "4 ");
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        int int17 = strTokenizer5.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer5.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer5.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer5.setQuoteChar('#');
        boolean boolean19 = strTokenizer18.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[4 ]]", "StrTokenizer[StrTokenizer[4 ]]");
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a#]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher54);
        java.lang.String str57 = strTokenizer56.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4 " + "'", str57, "4 ");
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer11.setDelimiterMatcher(strMatcher19);
        boolean boolean21 = strTokenizer20.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a#]", "");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4", "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer28.add("StrTokenizer[4 ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "");
        java.lang.String str12 = strTokenizer11.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher13, strMatcher15);
        char[] charArray20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.String str23 = strTokenizer22.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer22.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher24, strMatcher26);
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "");
        java.lang.String str32 = strTokenizer31.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("4", strMatcher24, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher13, strMatcher24);
        java.lang.Class<?> wildcardClass37 = strMatcher13.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer17.setTrimmerMatcher(strMatcher39);
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.setIgnoredMatcher(strMatcher72);
        char[] charArray79 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher86);
        char[] charArray90 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer93.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer87.setDelimiterMatcher(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher72, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer97.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int3 = strTokenizer2.size();
        char[] charArray4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "");
        java.lang.String str7 = strTokenizer6.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer2.setIgnoredMatcher(strMatcher8);
        char[] charArray12 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer2.setIgnoredMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterChar('a');
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        java.lang.String str2 = strTokenizer1.getContent();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer0.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setIgnoreEmptyTokens(true);
        java.lang.String str5 = strTokenizer0.getContent();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8);
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher24);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer25.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher13, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher59);
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer60.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher68);
        boolean boolean72 = strTokenizer71.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer71.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strMatcher73);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.reset();
        java.util.List<java.lang.String> strList23 = strTokenizer18.getTokenList();
        java.lang.Object obj24 = strTokenizer18.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        char[] charArray2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        java.lang.String str5 = strTokenizer4.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer4.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher6, strMatcher8);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.lang.Object obj11 = strTokenizer9.clone();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a#]", '4');
        java.lang.String str3 = strTokenizer2.next();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[a#]" + "'", str3, "StrTokenizer[a#]");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = strTokenizer5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer0.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setIgnoreEmptyTokens(true);
        java.lang.String str5 = strTokenizer4.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[4 ]]", '#', '#');
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer10.getDelimiterMatcher();
        boolean boolean36 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer10.getQuoteMatcher();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "");
        java.lang.String str41 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher42);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer44.add("StrTokenizer[StrTokenizer[4 ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher42);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer17.setTrimmerMatcher(strMatcher39);
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.setIgnoredMatcher(strMatcher72);
        char[] charArray79 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher86);
        char[] charArray90 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer93.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer87.setDelimiterMatcher(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher72, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer22.setDelimiterMatcher(strMatcher30);
        char[] charArray34 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher30, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer9.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("");
        char[] charArray58 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher65);
        char[] charArray69 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer66.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer54.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer54.getDelimiterMatcher();
        boolean boolean80 = strTokenizer54.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer54.getQuoteMatcher();
        char[] charArray82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, "");
        java.lang.String str85 = strTokenizer84.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher81, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer44.setDelimiterMatcher(strMatcher81);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer44.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer41.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher89);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher92);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer5.reset();
        char[] charArray33 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer5.setTrimmerMatcher(strMatcher36);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.setDelimiterMatcher(strMatcher29);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setTrimmerMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher64);
        char[] charArray68 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer65.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer53.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer53.getDelimiterMatcher();
        boolean boolean79 = strTokenizer53.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer53.getQuoteMatcher();
        char[] charArray81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, "");
        java.lang.String str84 = strTokenizer83.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher80, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer43.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer40.setIgnoredMatcher(strMatcher88);
        java.lang.String str90 = strTokenizer89.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "4" + "'", str90, "4");
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        char[] charArray1 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        char[] charArray5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getQuoteMatcher();
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer26.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer20.setDelimiterMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher8, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[#]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getTrimmerMatcher();
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        java.lang.String str21 = strTokenizer20.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer20.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16, strMatcher22);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer24.set("4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMatcher22);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset(" ");
        int int20 = strTokenizer19.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer44.getTrimmerMatcher();
        char[] charArray48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "");
        java.lang.String str51 = strTokenizer50.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher46, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer28.reset(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer57.reset();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("StrTokenizer[4 ]");
        int int55 = strTokenizer54.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setEmptyTokenAsNull(true);
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        char[] charArray69 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer65.reset(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer65.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer59.setIgnoredMatcher(strMatcher77);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4 " + "'", str52, "4 ");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        java.lang.String str13 = strTokenizer12.previousToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        boolean boolean11 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getQuoteMatcher();
        java.lang.String str13 = strTokenizer10.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4 " + "'", str13, "4 ");
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        char[] charArray1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "");
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5);
        java.lang.Class<?> wildcardClass7 = strTokenizer6.getClass();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("4", 'a', 'a');
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.setDelimiterMatcher(strMatcher29);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setTrimmerMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher64);
        char[] charArray68 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer65.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer53.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer53.getDelimiterMatcher();
        boolean boolean79 = strTokenizer53.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer53.getQuoteMatcher();
        char[] charArray81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, "");
        java.lang.String str84 = strTokenizer83.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher80, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer43.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer40.setIgnoredMatcher(strMatcher88);
        boolean boolean90 = strTokenizer89.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int3 = strTokenizer2.size();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add(" ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, "");
        java.lang.String str37 = strTokenizer36.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer8.setDelimiterMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer8.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setQuoteChar(' ');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        char[] charArray2 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("StrTokenizer[4 ]");
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62);
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer54.setTrimmerMatcher(strMatcher73);
        java.lang.String str76 = strTokenizer54.toString();
        java.lang.Class<?> wildcardClass77 = strTokenizer54.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4 " + "'", str52, "4 ");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str76, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" ", " ");
        int int3 = strTokenizer2.nextIndex();
        boolean boolean4 = strTokenizer2.isIgnoreEmptyTokens();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strTokenizer9.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        java.lang.String str11 = strTokenizer10.toString();
        java.lang.Class<?> wildcardClass12 = strTokenizer10.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray0);
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer10.getDelimiterMatcher();
        boolean boolean36 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer10.getQuoteMatcher();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "");
        java.lang.String str41 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher42);
        char[] charArray46 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer49.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer52.setQuoteChar('4');
        char[] charArray59 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        char[] charArray63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getQuoteMatcher();
        char[] charArray70 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer73.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher77);
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer84.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer78.setDelimiterMatcher(strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher66, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer52.setDelimiterMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher66);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4 ", ' ');
        int int3 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer11.setTrimmerMatcher(strMatcher21);
        boolean boolean23 = strTokenizer22.hasNext();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("4");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher10, strMatcher21);
        boolean boolean24 = strTokenizer23.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        boolean boolean12 = strTokenizer11.hasPrevious();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        java.lang.String str3 = strTokenizer2.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getDelimiterMatcher();
        boolean boolean5 = strTokenizer2.isEmptyTokenAsNull();
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        java.lang.String str13 = strTokenizer11.nextToken();
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer22.getTrimmerMatcher();
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer22.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer11.reset(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getDelimiterMatcher();
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getTrimmerMatcher();
        char[] charArray54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "");
        java.lang.String str57 = strTokenizer56.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer56.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher52, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer34.reset(charArray38);
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setDelimiterString("");
        char[] charArray74 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer77.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher81);
        char[] charArray85 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer88.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer82.setTrimmerMatcher(strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer70.setTrimmerMatcher(strMatcher92);
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer70.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer61.setIgnoredMatcher(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer2.setDelimiterMatcher(strMatcher95);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4 " + "'", str13, "4 ");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", '#');
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.add("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher18);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer8.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer37.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer10.getDelimiterMatcher();
        boolean boolean36 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer10.getQuoteMatcher();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "");
        java.lang.String str41 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.reset(charArray47);
        boolean boolean68 = strTokenizer67.hasNext();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray20);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher29);
        java.lang.String str31 = strTokenizer30.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4 " + "'", str31, "4 ");
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getDelimiterMatcher();
        java.lang.Object obj31 = strTokenizer28.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.setQuoteChar(' ');
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ', '#');
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher56);
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer57.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher67);
        char[] charArray72 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77);
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer84.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer28.setIgnoredMatcher(strMatcher88);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer91);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "StrTokenizer[StrTokenizer[4 ]]");
        int int3 = strTokenizer2.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer8.getDelimiterMatcher();
        boolean boolean65 = strTokenizer8.hasNext();
        boolean boolean66 = strTokenizer8.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer32.setDelimiterChar('4');
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, 'a', ' ');
        char[] charArray77 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getTrimmerMatcher();
        char[] charArray87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, "");
        java.lang.String str90 = strTokenizer89.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer89.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher85, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer68.setQuoteMatcher(strMatcher85);
        boolean boolean95 = strTokenizer94.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = strTokenizer94.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        int int74 = strTokenizer73.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer73.add("StrTokenizer[a#]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        boolean boolean13 = strTokenizer12.hasPrevious();
        int int14 = strTokenizer12.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer44.getTrimmerMatcher();
        char[] charArray48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "");
        java.lang.String str51 = strTokenizer50.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher46, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer28.reset(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer57.set("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(false);
        boolean boolean5 = strTokenizer2.isEmptyTokenAsNull();
        java.lang.String str6 = strTokenizer2.toString();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        int int9 = strTokenizer5.size();
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        char[] charArray18 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getTrimmerMatcher();
        char[] charArray28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "");
        java.lang.String str31 = strTokenizer30.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher26, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer5.reset(charArray12);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer35);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.set("StrTokenizer[4]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer0.setQuoteChar('a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strTokenizer2);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer26.getDelimiterMatcher();
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher51, strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        char[] charArray74 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer71.setTrimmerMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher78, strMatcher80);
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer6.getQuoteMatcher();
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher8, strMatcher15);
        boolean boolean17 = strTokenizer16.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.set("4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        boolean boolean11 = strTokenizer10.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setDelimiterString("hi!");
        java.lang.String str14 = strTokenizer13.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('4');
        java.lang.String str5 = strTokenizer2.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("StrTokenizer[4 ]");
        int int55 = strTokenizer54.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = strTokenizer59.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4 " + "'", str52, "4 ");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        boolean boolean36 = strTokenizer8.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer8.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4 " + "'", str37, "4 ");
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoredMatcher(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset(" ");
        int int20 = strTokenizer16.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer9.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer9.getDelimiterMatcher();
        boolean boolean35 = strTokenizer9.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer9.getQuoteMatcher();
        char[] charArray37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "");
        java.lang.String str40 = strTokenizer39.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher36, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setQuoteChar('4');
        java.lang.Class<?> wildcardClass45 = strTokenizer44.getClass();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer45.getTrimmerMatcher();
        char[] charArray49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "");
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher47, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer28.setQuoteMatcher(strMatcher53);
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.reset(charArray66);
        java.lang.Object obj74 = strTokenizer62.clone();
        boolean boolean75 = strTokenizer62.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer28.setTrimmerMatcher(strMatcher76);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer28.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer8.getDelimiterMatcher();
        boolean boolean65 = strTokenizer8.hasNext();
        int int66 = strTokenizer8.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("StrTokenizer[4 ]");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer20.getTrimmerMatcher();
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer20.reset(charArray25);
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer45.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher49);
        char[] charArray53 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer50.setTrimmerMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer38.setTrimmerMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer20.setQuoteMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer9.setDelimiterMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a#]", strMatcher65);
        java.lang.String str67 = strTokenizer66.nextToken();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[a#]" + "'", str67, "StrTokenizer[a#]");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '#', ' ');
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getDelimiterMatcher();
        int int22 = strTokenizer20.size();
        java.lang.String str23 = strTokenizer20.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[ ]" + "'", str23, "StrTokenizer[ ]");
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11);
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer12.setDelimiterMatcher(strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20, strMatcher29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strTokenizer30.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[4 ]]", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer44.getTrimmerMatcher();
        char[] charArray48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "");
        java.lang.String str51 = strTokenizer50.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher46, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer28.reset(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer28.setDelimiterString("StrTokenizer[StrTokenizer[4 ]]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer28.set("StrTokenizer[4 ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4]", "StrTokenizer[ ]");
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setTrimmerMatcher(strMatcher15);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("StrTokenizer[a#]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        boolean boolean31 = strTokenizer28.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        int int31 = strTokenizer28.nextIndex();
        java.lang.Object obj32 = strTokenizer28.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        int int43 = strTokenizer42.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        char[] charArray18 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer14.reset(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26);
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35);
        char[] charArray37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher51);
        char[] charArray55 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer58.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer52.setDelimiterMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher40, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher26, strMatcher40);
        int int64 = strTokenizer63.previousIndex();
        java.lang.String[] strArray65 = strTokenizer63.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        boolean boolean53 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer8.setDelimiterString("hi!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4]", '#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        java.util.List<java.lang.String> strList53 = strTokenizer52.getTokenList();
        java.lang.String str54 = strTokenizer52.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int58 = strTokenizer57.size();
        char[] charArray59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "");
        java.lang.String str62 = strTokenizer61.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer57.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer52.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setIgnoreEmptyTokens(false);
        java.lang.String str68 = strTokenizer67.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[4 ]" + "'", str54, "StrTokenizer[4 ]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4 " + "'", str68, "4 ");
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        char[] charArray5 = new char[] { '#', ' ', ' ', 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.reset(" ");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#,  ,  , a, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("4 ");
        java.lang.String str2 = strTokenizer1.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str2, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        char[] charArray3 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strTokenizer6.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray4 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getDelimiterMatcher();
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher31);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer32.setTrimmerMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer20.setTrimmerMatcher(strMatcher42);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher64);
        char[] charArray68 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer65.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer53.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer44.setIgnoredMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher11, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer44.getTrimmerMatcher();
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer44.reset(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray49);
        int int55 = strTokenizer54.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher56);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strMatcher56);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        char[] charArray4 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer66.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher73);
        char[] charArray77 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer74.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer62.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer62.getDelimiterMatcher();
        boolean boolean88 = strTokenizer62.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher89);
        java.lang.String str91 = strTokenizer90.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "4" + "'", str91, "4");
        org.junit.Assert.assertNotNull(strMatcher92);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("4", ' ', ' ');
        char[] charArray5 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        boolean boolean7 = strTokenizer6.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getQuoteMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '4', 'a');
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ', '#');
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher42);
        char[] charArray46 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer49.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer43.setTrimmerMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher53);
        char[] charArray58 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63);
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer70.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int81 = strTokenizer80.size();
        char[] charArray82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, "");
        java.lang.String str85 = strTokenizer84.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setIgnoredMatcher(strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer9.setQuoteMatcher(strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer3.setTrimmerMatcher(strMatcher86);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer11.setTrimmerMatcher(strMatcher21);
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        java.lang.Object obj24 = strTokenizer22.clone();
        int int25 = strTokenizer22.previousIndex();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        int int33 = strTokenizer32.nextIndex();
        char[] charArray35 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "4 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer32.reset(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer32.setDelimiterChar('4');
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, 'a', ' ');
        char[] charArray77 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getTrimmerMatcher();
        char[] charArray87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, "");
        java.lang.String str90 = strTokenizer89.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer89.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher85, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer68.setQuoteMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer68.setDelimiterString("hi!");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        java.lang.String str3 = strTokenizer2.getContent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher4);
        boolean boolean6 = strTokenizer5.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer5.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer73.set("4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.reset("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer30.setTrimmerMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer18.setTrimmerMatcher(strMatcher40);
        java.lang.String str43 = strTokenizer18.getContent();
        char[] charArray44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, "");
        java.lang.String str47 = strTokenizer46.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer46.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer18.setDelimiterMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer9.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer9.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4 " + "'", str43, "4 ");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer32.setDelimiterChar('4');
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, 'a', ' ');
        char[] charArray77 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getTrimmerMatcher();
        char[] charArray87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, "");
        java.lang.String str90 = strTokenizer89.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer89.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher85, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer68.setQuoteMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer94.reset("StrTokenizer[4 ]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer94.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer71.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer71.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer71.add("4 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher13);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', 'a');
        java.lang.String str4 = strTokenizer3.nextToken();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        java.lang.Object obj7 = strTokenizer6.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer9.setTrimmerMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[4 ]]", strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getDelimiterMatcher();
        boolean boolean20 = strTokenizer18.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("StrTokenizer[4 ]");
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.reset(charArray8);
        boolean boolean17 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("4");
        int int6 = strTokenizer2.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("4 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        int int2 = strTokenizer0.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray5 = strTokenizer0.getTokenArray();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getDelimiterMatcher();
        java.lang.Object obj31 = strTokenizer28.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer28.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("");
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher38);
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer45.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer39.setTrimmerMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer27.setTrimmerMatcher(strMatcher49);
        java.lang.String str52 = strTokenizer27.getContent();
        char[] charArray55 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4', 'a');
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer67.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer27.reset(charArray55);
        java.util.List<java.lang.String> strList72 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer71.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer18.setIgnoredMatcher(strMatcher73);
        java.lang.String str75 = strTokenizer74.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4 " + "'", str52, "4 ");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str75, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer6.getQuoteMatcher();
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher8, strMatcher15);
        boolean boolean17 = strTokenizer16.hasPrevious();
        java.lang.String str18 = strTokenizer16.toString();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[StrTokenizer[4, ]]" + "'", str18, "StrTokenizer[StrTokenizer[4, ]]");
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4", "4");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = strTokenizer5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        int int74 = strTokenizer73.previousIndex();
        java.lang.String str75 = strTokenizer73.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4 " + "'", str75, "4 ");
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer8.reset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strTokenizer8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', 'a');
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        java.lang.String str24 = strTokenizer22.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4 " + "'", str24, "4 ");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("4 ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        int int17 = strTokenizer5.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer5.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer5.reset();
        int int21 = strTokenizer5.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer56.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer44.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer44.getDelimiterMatcher();
        char[] charArray72 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer75.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher69, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = strTokenizer83.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        int int3 = strTokenizer2.previousIndex();
        char[] charArray6 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer9.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        char[] charArray34 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher41);
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer42.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer30.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer30.getDelimiterMatcher();
        char[] charArray58 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher55, strMatcher65);
        char[] charArray69 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        char[] charArray78 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer75.setTrimmerMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer2.setTrimmerMatcher(strMatcher84);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("StrTokenizer[a#]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer86);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.setDelimiterMatcher(strMatcher29);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setTrimmerMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher64);
        char[] charArray68 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer65.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer53.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer53.getDelimiterMatcher();
        boolean boolean79 = strTokenizer53.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer53.getQuoteMatcher();
        char[] charArray81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, "");
        java.lang.String str84 = strTokenizer83.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher80, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer43.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer40.setIgnoredMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setDelimiterString("StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer89.set("StrTokenizer[ ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setQuoteChar('#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer30.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        boolean boolean36 = strTokenizer8.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", ' ', 'a');
        java.lang.Object obj4 = strTokenizer3.clone();
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", ' ', '#');
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        java.util.List<java.lang.String> strList64 = strTokenizer63.getTokenList();
        java.lang.Object obj65 = strTokenizer63.clone();
        java.lang.String str66 = strTokenizer63.previousToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        char[] charArray3 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher5, strMatcher6);
        java.lang.String str8 = strTokenizer7.toString();
        int int9 = strTokenizer7.size();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str8, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        boolean boolean10 = strTokenizer8.hasNext();
        boolean boolean11 = strTokenizer8.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        char[] charArray5 = new char[] { '#', ' ', ' ', 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "hi!");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#,  ,  , a, #]");
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[4]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        boolean boolean3 = strTokenizer1.hasPrevious();
        java.lang.String[] strArray4 = strTokenizer1.getTokenArray();
        char[] charArray7 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12);
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer1.setTrimmerMatcher(strMatcher23);
        java.lang.String str26 = strTokenizer25.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        boolean boolean10 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setIgnoredChar(' ');
        java.lang.String str13 = strTokenizer12.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.set(" ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4 " + "'", str13, "4 ");
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.Object obj17 = strTokenizer5.clone();
        boolean boolean18 = strTokenizer5.hasNext();
        java.lang.String str19 = strTokenizer5.next();
        java.lang.String str20 = strTokenizer5.previous();
        java.lang.Class<?> wildcardClass21 = strTokenizer5.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4 " + "'", str19, "4 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4 " + "'", str20, "4 ");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setTrimmerMatcher(strMatcher11);
        java.lang.String str13 = strTokenizer12.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4 " + "'", str13, "4 ");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.reset();
        boolean boolean24 = strTokenizer19.isEmptyTokenAsNull();
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        char[] charArray43 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer39.reset(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher71);
        char[] charArray75 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer78.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer72.setTrimmerMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer60.setTrimmerMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer60.getDelimiterMatcher();
        char[] charArray88 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer91.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer94.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher85, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher95);
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = strTokenizer97.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer19.setIgnoredMatcher(strMatcher98);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strMatcher98);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        boolean boolean12 = strTokenizer8.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '#');
        java.lang.String str3 = strTokenizer2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str3, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        int int17 = strTokenizer5.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer5.getTrimmerMatcher();
        boolean boolean19 = strTokenizer5.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray22 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer19.reset(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("");
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer45.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher49);
        char[] charArray53 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer50.setTrimmerMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer38.setTrimmerMatcher(strMatcher60);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        char[] charArray75 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer78.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher82);
        char[] charArray86 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer89.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer89.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer92.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer83.setTrimmerMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer71.setTrimmerMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer62.setIgnoredMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher29, strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer17.reset(charArray22);
        boolean boolean99 = strTokenizer98.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        java.lang.String str21 = strTokenizer20.next();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        boolean boolean32 = strTokenizer30.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer30.setIgnoredChar(' ');
        java.lang.String str35 = strTokenizer34.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer20.setTrimmerMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoreEmptyTokens(true);
        int int40 = strTokenizer39.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4 " + "'", str21, "4 ");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4 " + "'", str35, "4 ");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer32.setDelimiterChar('4');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        java.lang.Class<?> wildcardClass70 = strTokenizer68.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        boolean boolean10 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.reset();
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setQuoteChar('4');
        char[] charArray27 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getQuoteMatcher();
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer46.setDelimiterMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher34, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer20.setDelimiterMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer11.setQuoteMatcher(strMatcher34);
        java.lang.String str59 = strTokenizer11.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "4 " + "'", str59, "4 ");
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[StrTokenizer[4 ]]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray4 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset(charArray4);
        boolean boolean7 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.Object obj17 = strTokenizer5.clone();
        boolean boolean18 = strTokenizer5.hasNext();
        java.lang.String[] strArray19 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer5.setIgnoreEmptyTokens(true);
        char[] charArray22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "");
        java.lang.String str25 = strTokenizer24.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer21.setTrimmerMatcher(strMatcher26);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.Object obj17 = strTokenizer5.clone();
        boolean boolean18 = strTokenizer5.hasNext();
        java.lang.String str19 = strTokenizer5.next();
        java.lang.String[] strArray20 = strTokenizer5.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4 " + "'", str19, "4 ");
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer2.reset();
        char[] charArray7 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        java.lang.String str12 = strTokenizer10.nextToken();
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer21.getTrimmerMatcher();
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.reset(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer10.reset(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        char[] charArray40 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setDelimiterString("");
        char[] charArray50 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher57);
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer58.setTrimmerMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer46.setTrimmerMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer46.getDelimiterMatcher();
        boolean boolean72 = strTokenizer46.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer46.getQuoteMatcher();
        char[] charArray74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, "");
        java.lang.String str77 = strTokenizer76.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher73, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher36, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer3.setDelimiterMatcher(strMatcher73);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer81.add("StrTokenizer[4]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4 " + "'", str12, "4 ");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer26.getDelimiterMatcher();
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher51, strMatcher61);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        char[] charArray74 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer71.setTrimmerMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher78, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer81.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer81.setDelimiterString("StrTokenizer[a#]");
        int int85 = strTokenizer84.previousIndex();
        java.lang.Class<?> wildcardClass86 = strTokenizer84.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher10, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(true);
        int int28 = strTokenizer27.size();
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        char[] charArray37 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getTrimmerMatcher();
        char[] charArray47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "");
        java.lang.String str50 = strTokenizer49.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher45, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer27.setQuoteMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterChar('a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        java.lang.String str10 = strTokenizer9.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer5.setIgnoredMatcher(strMatcher14);
        java.lang.String str16 = strTokenizer5.toString();
        java.lang.String str17 = strTokenizer5.previousToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[4 ]" + "'", str16, "StrTokenizer[4 ]");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        java.util.List<java.lang.String> strList12 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        boolean boolean14 = strTokenizer13.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = strTokenizer13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#", strMatcher1);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("StrTokenizer[4 ]");
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', 'a');
        boolean boolean20 = strTokenizer19.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(" ", 'a', 'a');
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", 'a', 'a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.add("4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray4 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getDelimiterMatcher();
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher31);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer32.setTrimmerMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer20.setTrimmerMatcher(strMatcher42);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher64);
        char[] charArray68 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer65.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer53.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer44.setIgnoredMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher11, strMatcher75);
        char[] charArray82 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, 'a', ' ');
        boolean boolean86 = strTokenizer85.hasPrevious();
        char[] charArray89 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer92.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer92.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer85.setIgnoredMatcher(strMatcher94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher94);
        java.lang.Class<?> wildcardClass97 = strMatcher94.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer8.reset("hi!");
        boolean boolean37 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer8.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("4");
        int int2 = strTokenizer1.nextIndex();
        java.lang.String str3 = strTokenizer1.previousToken();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer52.reset();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer71.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer75.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer76.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher73);
        char[] charArray77 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer74.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer62.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer62.getDelimiterMatcher();
        boolean boolean88 = strTokenizer62.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ', 'a');
        java.util.List<java.lang.String> strList95 = strTokenizer94.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer94.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strMatcher96);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", 'a', 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        java.lang.String[] strArray72 = strTokenizer71.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strArray72);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher10, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', '#');
        java.lang.Class<?> wildcardClass12 = charArray2.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer6.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.reset("4");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = strTokenizer16.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray6 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray6);
        boolean boolean11 = strTokenizer10.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredMatcher(strMatcher12);
        java.lang.String str14 = strTokenizer10.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        boolean boolean8 = strTokenizer7.isEmptyTokenAsNull();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = strTokenizer7.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar('4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        char[] charArray18 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer14.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        char[] charArray29 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setDelimiterString("");
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher46);
        char[] charArray50 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer47.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer35.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer35.getDelimiterMatcher();
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher60, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setQuoteChar('a');
        java.lang.String str75 = strTokenizer72.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4 " + "'", str75, "4 ");
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        java.lang.Object obj21 = strTokenizer19.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray4 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset(charArray4);
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher27);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer28.setDelimiterMatcher(strMatcher36);
        char[] charArray40 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher36, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer15.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        java.lang.String str51 = strTokenizer50.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "a#" + "'", str51, "a#");
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#", ' ');
        boolean boolean3 = strTokenizer2.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '#', ' ');
        java.lang.String str4 = strTokenizer3.nextToken();
        java.lang.Object obj5 = strTokenizer3.clone();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        boolean boolean10 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.reset();
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setQuoteChar('4');
        char[] charArray27 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getQuoteMatcher();
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer46.setDelimiterMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher34, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer20.setDelimiterMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer11.setQuoteMatcher(strMatcher34);
        int int59 = strTokenizer58.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer58.add("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        char[] charArray5 = new char[] { '#', ' ', ' ', 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '#', ' ');
        boolean boolean9 = strTokenizer8.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#,  ,  , a, #]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', 'a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer11.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        java.lang.String str23 = strTokenizer22.toString();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4", "4 ");
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray6 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray6);
        boolean boolean11 = strTokenizer1.hasPrevious();
        java.lang.String str12 = strTokenizer1.previousToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.reset("");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.add("StrTokenizer[4 ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getDelimiterMatcher();
        java.lang.String str8 = strTokenizer6.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4 " + "'", str8, "4 ");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer8.reset();
        java.lang.String str10 = strTokenizer9.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4" + "'", str10, "4");
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher11);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        int int74 = strTokenizer73.previousIndex();
        java.lang.String str75 = strTokenizer73.previousToken();
        char[] charArray78 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray78);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        int int89 = strTokenizer88.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer73.setTrimmerMatcher(strMatcher90);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer91);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]");
        java.lang.String str2 = strTokenizer1.next();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[]" + "'", str2, "StrTokenizer[]");
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a');
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        boolean boolean30 = strTokenizer29.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        boolean boolean11 = strTokenizer10.isIgnoreEmptyTokens();
        java.lang.String str12 = strTokenizer10.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4 " + "'", str12, "4 ");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher4);
        int int6 = strTokenizer5.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        int int2 = strTokenizer0.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setDelimiterMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getDelimiterMatcher();
        java.lang.Class<?> wildcardClass8 = strMatcher7.getClass();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer9.setTrimmerMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[4 ]]", strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getDelimiterMatcher();
        boolean boolean20 = strTokenizer18.hasNext();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset();
        java.lang.String[] strArray53 = strTokenizer52.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer52.add("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strArray53);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer8.getTrimmerMatcher();
        java.lang.String str65 = strTokenizer8.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer5.setIgnoredMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoreEmptyTokens(true);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer62.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer52.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setQuoteChar('a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        int int17 = strTokenizer16.previousIndex();
        boolean boolean18 = strTokenizer16.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.set("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer5.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer5.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        java.lang.String str8 = strTokenizer6.nextToken();
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getTrimmerMatcher();
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer17.reset(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer6.reset(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getIgnoredMatcher();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setDelimiterString("");
        char[] charArray46 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer49.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer54.setTrimmerMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer42.setTrimmerMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer42.getDelimiterMatcher();
        boolean boolean68 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer42.getQuoteMatcher();
        char[] charArray70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "");
        java.lang.String str73 = strTokenizer72.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher69, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher32, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterString("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = strTokenizer78.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4 " + "'", str8, "4 ");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray10);
        int int18 = strTokenizer6.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("a#", strMatcher19);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("4 ");
        boolean boolean2 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setTrimmerMatcher(strMatcher15);
        java.lang.String str17 = strTokenizer16.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4" + "'", str17, "4");
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer5.setIgnoredMatcher(strMatcher14);
        java.lang.String str16 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer5.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer5.reset();
        java.lang.Class<?> wildcardClass22 = strTokenizer21.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[4 ]" + "'", str16, "StrTokenizer[4 ]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        int int33 = strTokenizer32.nextIndex();
        char[] charArray35 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "4 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer32.reset(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setQuoteChar(' ');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4 ", '4');
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer26.getDelimiterMatcher();
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher51, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        int int66 = strTokenizer65.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher7);
        java.lang.String str9 = strTokenizer8.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        java.lang.String str11 = strTokenizer8.getContent();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4 " + "'", str9, "4 ");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4 " + "'", str11, "4 ");
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", ' ');
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8);
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher24);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer25.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher13, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher59);
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer60.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher68);
        java.lang.Object obj72 = strTokenizer71.clone();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("StrTokenizer[4 ]");
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        java.lang.Class<?> wildcardClass19 = strTokenizer18.getClass();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        java.lang.String str3 = strTokenizer2.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getTrimmerMatcher();
        boolean boolean5 = strTokenizer2.hasNext();
        java.lang.String str6 = strTokenizer2.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[]" + "'", str6, "StrTokenizer[]");
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        java.lang.String str13 = strTokenizer12.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher14, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer5.setIgnoredMatcher(strMatcher18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = strTokenizer5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.reset("4");
        boolean boolean21 = strTokenizer20.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer20.set("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer8.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.reset("4 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer37.setDelimiterString("StrTokenizer[StrTokenizer[4, ]]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = strTokenizer17.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" ", " ");
        char[] charArray5 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10);
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer2.reset(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, 'a', '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer0.setIgnoredChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer52.reset(charArray56);
        java.lang.String str64 = strTokenizer52.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "4 " + "'", str64, "4 ");
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterString("");
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45);
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer34.getDelimiterMatcher();
        char[] charArray62 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher59, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer5.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer71.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer71.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer71.add("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" ", "StrTokenizer[4]");
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray4 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset(charArray4);
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher27);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer28.setDelimiterMatcher(strMatcher36);
        char[] charArray40 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher36, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer15.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        java.lang.Class<?> wildcardClass50 = strTokenizer49.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        java.util.List<java.lang.String> strList64 = strTokenizer63.getTokenList();
        int int65 = strTokenizer63.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11);
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer12.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher20, strMatcher23);
        boolean boolean25 = strTokenizer24.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer1.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer56.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer44.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer44.getDelimiterMatcher();
        char[] charArray72 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer75.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher69, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        java.lang.String str85 = strTokenizer84.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4 " + "'", str85, "4 ");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '4');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer10.getDelimiterMatcher();
        boolean boolean36 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer10.getQuoteMatcher();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "");
        java.lang.String str41 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.reset(charArray47);
        java.lang.String str68 = strTokenizer44.nextToken();
        java.lang.String str69 = strTokenizer44.getContent();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4 " + "'", str68, "4 ");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4 " + "'", str69, "4 ");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        boolean boolean11 = strTokenizer10.isIgnoreEmptyTokens();
        java.lang.Class<?> wildcardClass12 = strTokenizer10.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer5.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11);
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer12.setTrimmerMatcher(strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher43);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer32.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher22, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        char[] charArray18 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer14.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        char[] charArray29 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setDelimiterString("");
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher46);
        char[] charArray50 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer47.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer35.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer35.getDelimiterMatcher();
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher60, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setQuoteChar('a');
        java.lang.String[] strArray75 = strTokenizer74.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray20);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer33);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("StrTokenizer[4 ]");
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer21.getTrimmerMatcher();
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.reset(charArray26);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setDelimiterString("");
        char[] charArray43 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer46.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher50);
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer51.setTrimmerMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer39.setTrimmerMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer21.setQuoteMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer10.setDelimiterMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher61);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        java.util.List<java.lang.String> strList64 = strTokenizer63.getTokenList();
        java.lang.Object obj65 = strTokenizer63.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer63.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.reset();
        java.util.List<java.lang.String> strList23 = strTokenizer18.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer18.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        java.lang.String[] strArray12 = strTokenizer11.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        char[] charArray5 = new char[] { '#', ' ', ' ', 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "#  a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#,  ,  , a, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer5.setIgnoredMatcher(strMatcher14);
        java.lang.String str16 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer5.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer5.setEmptyTokenAsNull(false);
        java.lang.Class<?> wildcardClass21 = strTokenizer5.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[4 ]" + "'", str16, "StrTokenizer[4 ]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        java.lang.String str52 = strTokenizer51.previousToken();
        java.lang.Class<?> wildcardClass53 = strTokenizer51.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.setDelimiterMatcher(strMatcher29);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setTrimmerMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = strTokenizer40.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer8.setDelimiterChar('#');
        java.lang.String str66 = strTokenizer8.next();
        java.lang.String[] strArray67 = strTokenizer8.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("a#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[4 ]" + "'", str66, "StrTokenizer[4 ]");
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher18);
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        char[] charArray34 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher30, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer19.setTrimmerMatcher(strMatcher41);
        java.lang.String[] strArray45 = strTokenizer19.getTokenArray();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = strTokenizer32.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[ ]", strMatcher1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer45.getTrimmerMatcher();
        char[] charArray49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "");
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher47, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer28.setQuoteMatcher(strMatcher53);
        java.lang.String str57 = strTokenizer28.previousToken();
        java.util.List<java.lang.String> strList58 = strTokenizer28.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strList58);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoredChar('#');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", " ");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterChar('4');
        java.lang.String str31 = strTokenizer28.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[4 ]");
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray24);
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("");
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher48);
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer37.setTrimmerMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer19.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer8.setDelimiterMatcher(strMatcher59);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer63.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher10, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', ' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setEmptyTokenAsNull(true);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getQuoteMatcher();
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher23);
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer30.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setDelimiterMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('#');
        java.lang.Object obj40 = strTokenizer37.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer0.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.reset();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        java.lang.String str8 = strTokenizer6.nextToken();
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getTrimmerMatcher();
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer17.reset(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer6.reset(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getIgnoredMatcher();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setDelimiterString("");
        char[] charArray46 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer49.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer54.setTrimmerMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer42.setTrimmerMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer42.getDelimiterMatcher();
        boolean boolean68 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer42.getQuoteMatcher();
        char[] charArray70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "");
        java.lang.String str73 = strTokenizer72.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher69, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher32, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterChar(' ');
        char[] charArray80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "");
        java.lang.String str83 = strTokenizer82.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer82.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer78.setIgnoredMatcher(strMatcher84);
        java.lang.Class<?> wildcardClass87 = strTokenizer86.getClass();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4 " + "'", str8, "4 ");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        char[] charArray1 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        boolean boolean6 = strTokenizer5.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[#]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        boolean boolean3 = strTokenizer1.hasPrevious();
        java.lang.String[] strArray4 = strTokenizer1.getTokenArray();
        char[] charArray7 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12);
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer1.setTrimmerMatcher(strMatcher23);
        java.lang.String str26 = strTokenizer1.getContent();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        char[] charArray2 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer11.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer3.setTrimmerMatcher(strMatcher31);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("StrTokenizer[ ]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", " ");
        char[] charArray5 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterString("");
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer11.setTrimmerMatcher(strMatcher33);
        java.lang.String str36 = strTokenizer11.getContent();
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4', 'a');
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer11.reset(charArray39);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        java.lang.String str57 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", 'a');
        int int61 = strTokenizer60.size();
        char[] charArray62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, "");
        java.lang.String str65 = strTokenizer64.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer60.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer55.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer2.setQuoteMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        char[] charArray74 = new char[] { 'a', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.reset(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer69.setDelimiterMatcher(strMatcher78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = strTokenizer69.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4 " + "'", str36, "4 ");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[4 ]" + "'", str57, "StrTokenizer[4 ]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, #]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        int int33 = strTokenizer32.nextIndex();
        char[] charArray35 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "4 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer32.reset(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', '#');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#]");
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        java.lang.String str36 = strTokenizer8.next();
        int int37 = strTokenizer8.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4 " + "'", str36, "4 ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer10.getDelimiterMatcher();
        boolean boolean36 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer10.getQuoteMatcher();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "");
        java.lang.String str41 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher42);
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("");
        char[] charArray58 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher65);
        char[] charArray69 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer66.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer54.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer54.getDelimiterMatcher();
        boolean boolean80 = strTokenizer54.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer54.getQuoteMatcher();
        char[] charArray82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, "");
        java.lang.String str85 = strTokenizer84.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher81, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer44.setTrimmerMatcher(strMatcher81);
        boolean boolean89 = strTokenizer44.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer5.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer5.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "StrTokenizer[4 ]");
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        char[] charArray34 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer37.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher49);
        char[] charArray53 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58);
        char[] charArray60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer70.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher74);
        char[] charArray78 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer81.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer75.setDelimiterMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher63, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher49, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer22.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer19.setDelimiterMatcher(strMatcher63);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer8.getDelimiterMatcher();
        boolean boolean34 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer8.setDelimiterString("StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        java.lang.String str3 = strTokenizer2.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getTrimmerMatcher();
        java.lang.String str5 = strTokenizer2.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.setDelimiterChar('#');
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '4', ' ');
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(false);
        boolean boolean5 = strTokenizer2.isEmptyTokenAsNull();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.set(" ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        char[] charArray1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "");
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", strMatcher5);
        boolean boolean7 = strTokenizer6.hasNext();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        char[] charArray18 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer14.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        char[] charArray29 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setDelimiterString("");
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher46);
        char[] charArray50 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer47.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer35.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer35.getDelimiterMatcher();
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher60, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setQuoteChar('a');
        java.lang.String str75 = strTokenizer72.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4 " + "'", str75, "4 ");
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[]");
        int int42 = strTokenizer41.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList55 = strTokenizer54.getTokenList();
        boolean boolean56 = strTokenizer54.hasPrevious();
        java.lang.String[] strArray57 = strTokenizer54.getTokenArray();
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher65);
        char[] charArray69 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer54.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer8.setIgnoredMatcher(strMatcher76);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer79.add("StrTokenizer[StrTokenizer[4 ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer8.reset("StrTokenizer[4]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getQuoteMatcher();
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher23);
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer30.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setDelimiterMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('#');
        java.lang.String[] strArray40 = strTokenizer37.getTokenArray();
        java.util.List<java.lang.String> strList41 = strTokenizer37.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strList41);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setTrimmerMatcher(strMatcher11);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        java.lang.String str14 = strTokenizer12.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4 " + "'", str14, "4 ");
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        int int9 = strTokenizer5.size();
        java.lang.String str10 = strTokenizer5.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer5.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar('4');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4 " + "'", str10, "4 ");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        char[] charArray3 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8);
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        char[] charArray17 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher24);
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer25.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher13, strMatcher33);
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher59);
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer60.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(true);
        boolean boolean74 = strTokenizer71.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getIgnoredMatcher();
        java.lang.String str18 = strTokenizer16.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4 " + "'", str18, "4 ");
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer10.getDelimiterMatcher();
        boolean boolean36 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer10.getQuoteMatcher();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "");
        java.lang.String str41 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.reset(charArray47);
        int int68 = strTokenizer44.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer44.setDelimiterChar(' ');
        int int71 = strTokenizer70.nextIndex();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.reset("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        char[] charArray22 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29);
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer30.setTrimmerMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer18.setTrimmerMatcher(strMatcher40);
        java.lang.String str43 = strTokenizer18.getContent();
        char[] charArray44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, "");
        java.lang.String str47 = strTokenizer46.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer46.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer18.setDelimiterMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer9.setIgnoredMatcher(strMatcher48);
        int int51 = strTokenizer50.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4 " + "'", str43, "4 ");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        char[] charArray1 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        java.lang.String str6 = strTokenizer5.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[#]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "#" + "'", str6, "#");
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer5.setIgnoredMatcher(strMatcher14);
        java.lang.Class<?> wildcardClass16 = strTokenizer5.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setQuoteChar('4');
        char[] charArray15 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        char[] charArray19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getQuoteMatcher();
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher33);
        char[] charArray37 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer34.setDelimiterMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher22, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer8.setDelimiterMatcher(strMatcher22);
        boolean boolean46 = strTokenizer8.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", '4');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setTrimmerMatcher(strMatcher3);
        int int5 = strTokenizer4.nextIndex();
        boolean boolean6 = strTokenizer4.hasNext();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, '#');
        boolean boolean18 = strTokenizer17.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setQuoteMatcher(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        java.lang.String str7 = strTokenizer5.nextToken();
        char[] charArray10 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer5.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        char[] charArray32 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a', ' ');
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer44.getTrimmerMatcher();
        char[] charArray48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "");
        java.lang.String str51 = strTokenizer50.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher46, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer28.reset(charArray32);
        int int56 = strTokenizer55.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4 " + "'", str7, "4 ");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4 ", 'a');
        int int3 = strTokenizer2.previousIndex();
        char[] charArray6 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer9.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterString("");
        char[] charArray34 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher41);
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer42.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer30.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer30.getDelimiterMatcher();
        char[] charArray58 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher55, strMatcher65);
        char[] charArray69 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        char[] charArray78 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer75.setTrimmerMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer2.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer2.setEmptyTokenAsNull(false);
        java.lang.Object obj89 = strTokenizer2.clone();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        java.lang.Class<?> wildcardClass9 = charArray2.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        char[] charArray1 = new char[] { '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[#]");
        org.junit.Assert.assertNotNull(strMatcher8);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        java.util.List<java.lang.String> strList8 = strTokenizer7.getTokenList();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        java.lang.String str3 = strTokenizer2.getContent();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        java.lang.Class<?> wildcardClass5 = strArray4.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "");
        java.lang.String str3 = strTokenizer2.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getIgnoredMatcher();
        char[] charArray7 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        java.lang.String str12 = strTokenizer10.nextToken();
        char[] charArray15 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer21.getTrimmerMatcher();
        char[] charArray26 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.reset(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer10.reset(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getDelimiterMatcher();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', ' ');
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getTrimmerMatcher();
        char[] charArray54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "");
        java.lang.String str57 = strTokenizer56.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer56.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher52, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer33.setQuoteMatcher(strMatcher58);
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray71);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer67.reset(charArray71);
        java.lang.Object obj79 = strTokenizer67.clone();
        boolean boolean80 = strTokenizer67.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer33.setTrimmerMatcher(strMatcher81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer33.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer2.setTrimmerMatcher(strMatcher83);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4 " + "'", str12, "4 ");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        boolean boolean10 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setIgnoredChar(' ');
        java.lang.String str13 = strTokenizer12.nextToken();
        boolean boolean14 = strTokenizer12.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setQuoteChar('a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4 " + "'", str13, "4 ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher10, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer27.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getTrimmerMatcher();
        char[] charArray13 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.reset(charArray13);
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("");
        char[] charArray30 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        char[] charArray41 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer26.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer8.setQuoteMatcher(strMatcher48);
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setDelimiterString("StrTokenizer[4 ]");
        int int55 = strTokenizer54.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setTrimmerMatcher(strMatcher56);
        java.lang.String str58 = strTokenizer57.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4 " + "'", str52, "4 ");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4 " + "'", str58, "4 ");
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getQuoteMatcher();
        char[] charArray16 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher23);
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer30.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setDelimiterMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12, strMatcher32);
        java.lang.String str35 = strTokenizer34.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4 " + "'", str35, "4 ");
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        char[] charArray35 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setDelimiterString("");
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher63);
        java.lang.String str67 = strTokenizer32.nextToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4 " + "'", str67, "4 ");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[4 ]", '#', ' ');
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7);
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer19.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        int int3 = strTokenizer1.nextIndex();
        int int4 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        char[] charArray4 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setDelimiterString("");
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        char[] charArray25 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer10.getDelimiterMatcher();
        boolean boolean36 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer10.getQuoteMatcher();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "");
        java.lang.String str41 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher37, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42);
        char[] charArray47 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52);
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "StrTokenizer[4 ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.reset(charArray47);
        boolean boolean68 = strTokenizer67.isEmptyTokenAsNull();
        java.lang.String str69 = strTokenizer67.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer67.setEmptyTokenAsNull(true);
        java.lang.String str72 = strTokenizer71.nextToken();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4 " + "'", str69, "4 ");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "4 " + "'", str72, "4 ");
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        char[] charArray8 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getTrimmerMatcher();
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        java.lang.String str21 = strTokenizer20.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer20.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16, strMatcher22);
        char[] charArray27 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ', '#');
        char[] charArray40 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher47);
        char[] charArray51 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer48.setTrimmerMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset("StrTokenizer[4]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer68);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray12 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        java.lang.String str33 = strTokenizer8.getContent();
        char[] charArray36 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', 'a');
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.reset(charArray36);
        boolean boolean53 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer8.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setIgnoreEmptyTokens(false);
        java.lang.Object obj58 = strTokenizer55.clone();
        java.util.List<java.lang.String> strList59 = strTokenizer55.getTokenList();
        java.lang.Class<?> wildcardClass60 = strList59.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4 " + "'", str33, "4 ");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '4', '4');
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        char[] charArray2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        java.lang.String str5 = strTokenizer4.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer4.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        boolean boolean10 = strTokenizer8.hasPrevious();
        java.lang.String[] strArray11 = strTokenizer8.getTokenArray();
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19);
        char[] charArray23 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer8.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher6, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher30);
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setDelimiterString("");
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher56);
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer57.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer45.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer45.getDelimiterMatcher();
        boolean boolean71 = strTokenizer45.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer45.getQuoteMatcher();
        char[] charArray73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "");
        java.lang.String str76 = strTokenizer75.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("4 ", strMatcher72, strMatcher77);
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, 'a', ' ');
        boolean boolean85 = strTokenizer84.hasPrevious();
        char[] charArray88 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer91.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer84.setIgnoredMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher77, strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer34.setDelimiterMatcher(strMatcher77);
        int int97 = strTokenizer96.previousIndex();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray9 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray9);
        java.lang.String str17 = strTokenizer16.next();
        boolean boolean18 = strTokenizer16.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setEmptyTokenAsNull(false);
        int int21 = strTokenizer20.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4 " + "'", str17, "4 ");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        char[] charArray14 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher10, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(true);
        int int28 = strTokenizer27.size();
        char[] charArray31 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', ' ');
        char[] charArray37 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getTrimmerMatcher();
        char[] charArray47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "");
        java.lang.String str50 = strTokenizer49.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher45, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer27.setQuoteMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer27.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', 'a');
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', 'a');
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        java.lang.String str24 = strTokenizer22.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4" + "'", str24, "4");
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        char[] charArray2 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterString("");
        char[] charArray11 = new char[] { '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "4 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer5.reset(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher23);
    }
}

