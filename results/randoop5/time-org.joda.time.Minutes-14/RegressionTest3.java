import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-4M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        java.lang.String str5 = minutes2.toString();
        int int6 = minutes2.size();
        org.joda.time.Minutes minutes7 = minutes2.negated();
        org.joda.time.Minutes minutes8 = null;
        org.joda.time.Minutes minutes9 = minutes2.minus(minutes8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes10.getFieldType();
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = minutes14.negated();
        java.lang.String str17 = minutes14.toString();
        int int18 = minutes14.size();
        org.joda.time.Minutes minutes20 = minutes14.minus(0);
        org.joda.time.Minutes minutes22 = minutes14.plus((int) (short) 0);
        boolean boolean23 = minutes10.isLessThan(minutes14);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes24.negated();
        boolean boolean27 = minutes14.isGreaterThan(minutes24);
        org.joda.time.Minutes minutes28 = minutes9.minus(minutes24);
        boolean boolean29 = minutes1.equals((java.lang.Object) minutes28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration31 = minutes30.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod32 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        int int34 = minutes33.size();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) (byte) -1);
        boolean boolean39 = minutes33.isLessThan(minutes36);
        boolean boolean40 = minutes30.isLessThan(minutes33);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.MutablePeriod mutablePeriod44 = minutes41.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType45 = minutes41.getFieldType();
        org.joda.time.Minutes minutes47 = minutes41.dividedBy((-1));
        org.joda.time.Minutes minutes49 = minutes41.dividedBy(2147483646);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes50.minus((int) (short) 1);
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy(0);
        org.joda.time.Duration duration55 = minutes52.toStandardDuration();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.DurationFieldType durationFieldType58 = minutes56.getFieldType();
        int int59 = minutes52.get(durationFieldType58);
        boolean boolean60 = minutes41.isSupported(durationFieldType58);
        int int61 = minutes33.get(durationFieldType58);
        boolean boolean62 = minutes1.isSupported(durationFieldType58);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2M" + "'", str5, "PT2M");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2147483647M" + "'", str17, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2147483646 + "'", int59 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2147483647 + "'", int61 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.Minutes minutes16 = minutes10.minus(34);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        int int21 = minutes20.size();
        int int23 = minutes20.getValue(0);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        int int32 = minutes27.get(durationFieldType31);
        org.joda.time.Minutes minutes34 = minutes27.plus((-1));
        org.joda.time.Minutes minutes36 = minutes27.minus((int) (short) 10);
        org.joda.time.Duration duration37 = minutes27.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes39 = minutes38.negated();
        org.joda.time.Minutes minutes40 = minutes38.negated();
        java.lang.String str41 = minutes38.toString();
        org.joda.time.Minutes minutes43 = minutes38.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (byte) 0);
        boolean boolean48 = minutes43.equals((java.lang.Object) minutes45);
        boolean boolean49 = minutes27.isGreaterThan(minutes45);
        boolean boolean50 = minutes24.equals((java.lang.Object) boolean49);
        org.joda.time.Minutes minutes51 = minutes17.minus(minutes24);
        org.joda.time.Minutes minutes52 = minutes16.minus(minutes51);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = minutes53.get(durationFieldType54);
        org.joda.time.MutablePeriod mutablePeriod56 = minutes53.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType57 = minutes53.getFieldType();
        org.joda.time.Minutes minutes59 = minutes53.dividedBy((-1));
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MAX_VALUE;
        int int61 = minutes60.size();
        org.joda.time.Minutes minutes62 = minutes53.plus(minutes60);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes65 = minutes63.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = minutes66.get(durationFieldType67);
        org.joda.time.DurationFieldType durationFieldType69 = minutes66.getFieldType();
        int int70 = minutes65.get(durationFieldType69);
        int int71 = minutes53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes65);
        org.joda.time.DurationFieldType durationFieldType72 = minutes53.getFieldType();
        boolean boolean73 = minutes51.equals((java.lang.Object) minutes53);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2147483647M" + "'", str41, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes3 = minutes0.negated();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes29 = minutes11.dividedBy((-12));
        int int30 = minutes29.size();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod33 = minutes31.toMutablePeriod();
        java.lang.String str34 = minutes31.toString();
        org.joda.time.PeriodType periodType35 = minutes31.getPeriodType();
        org.joda.time.Period period36 = minutes31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = minutes31.getFieldType(0);
        org.joda.time.Minutes minutes39 = minutes29.plus(minutes31);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2M" + "'", str34, "PT2M");
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes39);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod14 = minutes12.toMutablePeriod();
        int int15 = minutes12.size();
        boolean boolean16 = minutes0.isGreaterThan(minutes12);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        int int25 = minutes20.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        boolean boolean28 = minutes17.isGreaterThan(minutes20);
        org.joda.time.DurationFieldType durationFieldType29 = minutes20.getFieldType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType32 = minutes31.getPeriodType();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        java.lang.String str37 = minutes33.toString();
        boolean boolean38 = minutes31.isGreaterThan(minutes33);
        boolean boolean39 = minutes30.equals((java.lang.Object) minutes31);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes30);
        int int41 = minutes20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Period period42 = minutes30.toPeriod();
        boolean boolean43 = minutes12.equals((java.lang.Object) period42);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2147483647M" + "'", str37, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes12.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = minutes12.getPeriodType();
        org.joda.time.Minutes minutes32 = minutes12.multipliedBy((-1));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(minutes32);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Duration duration14 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        java.lang.String str18 = minutes15.toString();
        org.joda.time.Minutes minutes20 = minutes15.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (byte) 0);
        boolean boolean25 = minutes20.equals((java.lang.Object) minutes22);
        boolean boolean26 = minutes4.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes27 = minutes0.plus(minutes4);
        int int28 = minutes27.size();
        org.joda.time.Duration duration29 = minutes27.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483647M" + "'", str18, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(duration29);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.Class<?> wildcardClass10 = minutes9.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        boolean boolean12 = minutes2.isGreaterThan(minutes10);
        int int13 = minutes10.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = minutes10.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        java.lang.String str2 = minutes0.toString();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = minutes6.get(durationFieldType7);
        org.joda.time.MutablePeriod mutablePeriod9 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        boolean boolean11 = minutes5.isLessThan(minutes10);
        int int12 = minutes5.getMinutes();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean15 = minutes5.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        boolean boolean17 = minutes0.isGreaterThan(minutes16);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0M" + "'", str2, "PT0M");
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int2 = minutes1.size();
        int int3 = minutes1.getMinutes();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes11 = minutes8.plus(minutes10);
        boolean boolean12 = minutes7.isLessThan(minutes8);
        java.lang.String str13 = minutes7.toString();
        boolean boolean14 = minutes1.equals((java.lang.Object) minutes7);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        boolean boolean23 = minutes17.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes36.plus(0);
        int int41 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes36);
        org.joda.time.Minutes minutes43 = minutes36.plus((int) ' ');
        java.lang.String str44 = minutes36.toString();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean47 = minutes36.isLessThan(minutes46);
        boolean boolean48 = minutes33.isLessThan(minutes36);
        org.joda.time.Minutes minutes49 = minutes17.minus(minutes33);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType53 = minutes52.getFieldType();
        org.joda.time.Minutes minutes54 = minutes52.negated();
        org.joda.time.Minutes minutes55 = minutes49.minus(minutes54);
        org.joda.time.Minutes minutes56 = minutes1.plus(minutes49);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes61 = minutes57.plus(0);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean63 = minutes57.isGreaterThan(minutes62);
        org.joda.time.PeriodType periodType64 = minutes57.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType65 = minutes57.getFieldType();
        org.joda.time.Minutes minutes66 = minutes49.plus(minutes57);
        org.joda.time.MutablePeriod mutablePeriod67 = minutes49.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2147483645M" + "'", str13, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2M" + "'", str44, "PT2M");
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = minutes7.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean39 = minutes28.isLessThan(minutes38);
        boolean boolean40 = minutes25.isLessThan(minutes28);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes25);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes44 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = minutes48.getFieldType();
        int int52 = minutes47.get(durationFieldType51);
        org.joda.time.Minutes minutes54 = minutes47.plus((-1));
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes44.plus(minutes55);
        org.joda.time.Minutes minutes58 = minutes44.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType59 = minutes58.getFieldType();
        boolean boolean60 = minutes2.isLessThan(minutes58);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes61.minus((int) (short) 1);
        org.joda.time.Minutes minutes65 = minutes63.multipliedBy(0);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes68 = minutes66.dividedBy((int) 'a');
        org.joda.time.Minutes minutes70 = minutes66.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType71 = minutes70.getFieldType();
        boolean boolean72 = minutes63.isSupported(durationFieldType71);
        int int73 = minutes58.get(durationFieldType71);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-2) + "'", int73 == (-2));
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(36);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = minutes2.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes2.minus(minutes7);
        org.joda.time.Minutes minutes10 = minutes7.plus(4);
        boolean boolean11 = minutes1.isGreaterThan(minutes7);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.THREE;
        int int16 = minutes15.size();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        int int24 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.Minutes minutes26 = minutes19.plus((int) ' ');
        int int27 = minutes15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Minutes minutes29 = minutes26.minus((int) (byte) 0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT0M");
        boolean boolean32 = minutes29.isLessThan(minutes31);
        org.joda.time.DurationFieldType durationFieldType33 = minutes29.getFieldType();
        boolean boolean34 = minutes12.isSupported(durationFieldType33);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = minutes7.getFieldType();
        org.joda.time.Minutes minutes13 = minutes7.dividedBy((-1));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes7.plus(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        int int25 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        int int26 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.PeriodType periodType27 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutes((-2147483645));
        org.joda.time.Minutes minutes30 = minutes6.plus(minutes29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.DurationFieldType durationFieldType33 = minutes31.getFieldType();
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        boolean boolean35 = minutes6.isSupported(durationFieldType34);
        int int36 = minutes6.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) 'a');
        org.joda.time.Minutes minutes8 = minutes4.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType9 = minutes8.getFieldType();
        boolean boolean10 = minutes1.isSupported(durationFieldType9);
        org.joda.time.Period period11 = minutes1.toPeriod();
        org.joda.time.Minutes minutes13 = minutes1.minus(0);
        org.joda.time.DurationFieldType durationFieldType14 = minutes1.getFieldType();
        org.joda.time.Period period15 = minutes1.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod10 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes18 = minutes11.plus((int) ' ');
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = minutes19.getFieldType();
        int int21 = minutes11.get(durationFieldType20);
        boolean boolean22 = minutes8.isSupported(durationFieldType20);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration24 = minutes23.toStandardDuration();
        org.joda.time.Duration duration25 = minutes23.toStandardDuration();
        org.joda.time.Minutes minutes27 = minutes23.minus(2);
        org.joda.time.DurationFieldType durationFieldType28 = minutes23.getFieldType();
        boolean boolean29 = minutes8.isSupported(durationFieldType28);
        boolean boolean30 = minutes0.isGreaterThan(minutes8);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Duration duration43 = minutes33.toStandardDuration();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes33);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutes((int) '4');
        org.joda.time.Minutes minutes47 = minutes33.minus(minutes46);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes48 = minutes0.plus(minutes46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 52");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) 100);
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) '4');
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy(0);
        java.lang.Class<?> wildcardClass6 = minutes5.getClass();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((-12));
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes22 = minutes19.plus(minutes21);
        org.joda.time.Minutes minutes23 = minutes16.minus(minutes21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes24.plus(0);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        int int36 = minutes31.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes31.plus((-1));
        org.joda.time.Minutes minutes40 = minutes31.minus((int) (short) 10);
        org.joda.time.Minutes minutes42 = minutes40.dividedBy((-2147483648));
        org.joda.time.Minutes minutes43 = minutes28.plus(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.MutablePeriod mutablePeriod50 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes47);
        boolean boolean52 = minutes46.isLessThan(minutes51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes51.getFieldType();
        boolean boolean54 = minutes43.isSupported(durationFieldType53);
        int int55 = minutes16.get(durationFieldType53);
        boolean boolean56 = minutes2.isSupported(durationFieldType53);
        org.joda.time.MutablePeriod mutablePeriod57 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod59 = minutes58.toMutablePeriod();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes61 = minutes58.plus(minutes60);
        int int62 = minutes60.getMinutes();
        int int63 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes60);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes65 = minutes64.negated();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = minutes70.get(durationFieldType71);
        org.joda.time.DurationFieldType durationFieldType73 = minutes70.getFieldType();
        int int74 = minutes69.get(durationFieldType73);
        org.joda.time.Minutes minutes76 = minutes69.plus((-1));
        org.joda.time.Minutes minutes78 = minutes69.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType80 = minutes69.getFieldType((int) (short) 0);
        boolean boolean81 = minutes64.isSupported(durationFieldType80);
        int int82 = minutes64.size();
        boolean boolean83 = minutes2.equals((java.lang.Object) minutes64);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-12) + "'", int55 == (-12));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-2) + "'", int74 == (-2));
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.minus((int) (short) 0);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        java.lang.String str16 = minutes14.toString();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes22 = minutes19.plus(minutes21);
        int int23 = minutes18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        boolean boolean30 = minutes24.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.Minutes minutes35 = minutes33.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) 'a');
        org.joda.time.Minutes minutes40 = minutes36.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType41 = minutes40.getFieldType();
        boolean boolean42 = minutes33.isSupported(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = minutes33.getFieldType();
        boolean boolean44 = minutes24.isSupported(durationFieldType43);
        boolean boolean45 = minutes21.isSupported(durationFieldType43);
        int int46 = minutes14.get(durationFieldType43);
        org.joda.time.Duration duration47 = minutes14.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT-2147483648M" + "'", str16, "PT-2147483648M");
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2147483648) + "'", int46 == (-2147483648));
        org.junit.Assert.assertNotNull(duration47);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType15 = minutes13.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes17 = minutes13.negated();
        org.joda.time.Minutes minutes19 = minutes17.minus((-41297760));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes1.plus(0);
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int8 = minutes7.size();
        int int9 = minutes7.getMinutes();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod11 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes13 = minutes10.plus(minutes12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        boolean boolean18 = minutes13.isLessThan(minutes14);
        java.lang.String str19 = minutes13.toString();
        boolean boolean20 = minutes7.equals((java.lang.Object) minutes13);
        boolean boolean21 = minutes3.equals((java.lang.Object) boolean20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes3.getFieldType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT-2147483645M" + "'", str19, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType22);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Duration duration9 = minutes1.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Duration duration3 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        int int8 = minutes6.getMinutes();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        org.joda.time.Minutes minutes19 = minutes12.plus((-1));
        boolean boolean20 = minutes9.isGreaterThan(minutes12);
        org.joda.time.DurationFieldType durationFieldType21 = minutes12.getFieldType();
        org.joda.time.PeriodType periodType22 = minutes12.getPeriodType();
        boolean boolean23 = minutes6.equals((java.lang.Object) minutes12);
        int int24 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = minutes0.getValue((-2147483634));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483634");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        int int2 = minutes0.size();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        boolean boolean11 = minutes7.isGreaterThan(minutes10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes10.getFieldType();
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        boolean boolean14 = minutes0.isSupported(durationFieldType13);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        int int19 = minutes16.getMinutes();
        org.joda.time.PeriodType periodType20 = minutes16.getPeriodType();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        java.lang.String str24 = minutes21.toString();
        int int25 = minutes21.size();
        org.joda.time.Minutes minutes27 = minutes21.minus(0);
        org.joda.time.Minutes minutes29 = minutes21.plus((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes21.toMutablePeriod();
        boolean boolean31 = minutes16.equals((java.lang.Object) minutes21);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483645) + "'", int19 == (-2147483645));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483647M" + "'", str24, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes39 = minutes2.multipliedBy((int) (byte) 1);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes41 = minutes40.negated();
        org.joda.time.Minutes minutes42 = minutes40.negated();
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((int) '4');
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration46 = minutes45.toStandardDuration();
        org.joda.time.Duration duration47 = minutes45.toStandardDuration();
        org.joda.time.Minutes minutes49 = minutes45.minus(2);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.minutes((-2147483548));
        org.joda.time.Period period52 = minutes51.toPeriod();
        org.joda.time.Minutes minutes54 = minutes51.minus(0);
        boolean boolean55 = minutes49.isGreaterThan(minutes54);
        boolean boolean56 = minutes44.isGreaterThan(minutes54);
        boolean boolean57 = minutes2.equals((java.lang.Object) minutes44);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        boolean boolean25 = minutes16.isSupported(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes16.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Period period21 = minutes3.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = minutes3.getFieldType();
        org.joda.time.Minutes minutes24 = minutes3.plus(214748366);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.PeriodType periodType14 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        boolean boolean17 = minutes9.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.THREE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = minutes9.plus(minutes18);
        java.lang.String str21 = minutes20.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT-2147483645M" + "'", str21, "PT-2147483645M");
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy(2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Minutes minutes13 = minutes6.plus((int) ' ');
        int int14 = minutes13.size();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        org.joda.time.Minutes minutes17 = minutes0.plus(minutes13);
        org.joda.time.Minutes minutes19 = minutes17.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = minutes17.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) '4');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) 'a');
        org.joda.time.Minutes minutes8 = minutes4.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType9 = minutes8.getFieldType();
        boolean boolean10 = minutes1.isSupported(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes1.getFieldType();
        java.lang.Class<?> wildcardClass12 = durationFieldType11.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.minutes((int) ' ');
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        boolean boolean15 = minutes4.isSupported(durationFieldType13);
        int int16 = minutes4.getMinutes();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes18.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType22 = minutes18.getFieldType();
        org.joda.time.Minutes minutes24 = minutes18.dividedBy((-1));
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        int int26 = minutes25.size();
        org.joda.time.Minutes minutes27 = minutes18.plus(minutes25);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        boolean boolean36 = minutes30.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = minutes40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = minutes40.getFieldType();
        int int44 = minutes39.get(durationFieldType43);
        org.joda.time.Minutes minutes46 = minutes39.plus((-1));
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod48 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes53 = minutes49.plus(0);
        int int54 = minutes47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes49);
        org.joda.time.Minutes minutes56 = minutes49.plus((int) ' ');
        java.lang.String str57 = minutes49.toString();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean60 = minutes49.isLessThan(minutes59);
        boolean boolean61 = minutes46.isLessThan(minutes49);
        org.joda.time.Minutes minutes62 = minutes30.minus(minutes46);
        org.joda.time.MutablePeriod mutablePeriod63 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod65 = minutes64.toMutablePeriod();
        boolean boolean66 = minutes30.isLessThan(minutes64);
        org.joda.time.Minutes minutes68 = minutes30.plus((int) ' ');
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes71 = minutes69.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = minutes72.get(durationFieldType73);
        org.joda.time.DurationFieldType durationFieldType75 = minutes72.getFieldType();
        int int76 = minutes71.get(durationFieldType75);
        boolean boolean77 = minutes30.isSupported(durationFieldType75);
        int int78 = minutes27.get(durationFieldType75);
        int int79 = minutes0.get(durationFieldType75);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-2) + "'", int44 == (-2));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-2) + "'", int76 == (-2));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-2147483648) + "'", int79 == (-2147483648));
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean15 = minutes4.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes4.toMutablePeriod();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        boolean boolean20 = minutes4.equals((java.lang.Object) minutes18);
        org.joda.time.Minutes minutes22 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration24 = minutes23.toStandardDuration();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes25.toMutablePeriod();
        boolean boolean27 = minutes22.equals((java.lang.Object) mutablePeriod26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = minutes28.negated();
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes33 = minutes28.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (byte) 0);
        boolean boolean38 = minutes33.equals((java.lang.Object) minutes35);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes47.getFieldType();
        int int51 = minutes46.get(durationFieldType50);
        org.joda.time.Minutes minutes53 = minutes46.plus((-1));
        org.joda.time.Minutes minutes55 = minutes46.minus((int) (short) 10);
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((-2147483648));
        org.joda.time.Minutes minutes58 = minutes43.plus(minutes57);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = minutes62.get(durationFieldType63);
        org.joda.time.MutablePeriod mutablePeriod65 = minutes62.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes62);
        boolean boolean67 = minutes61.isLessThan(minutes66);
        org.joda.time.DurationFieldType durationFieldType68 = minutes66.getFieldType();
        boolean boolean69 = minutes58.isSupported(durationFieldType68);
        org.joda.time.Minutes minutes71 = minutes58.plus((int) (short) -1);
        org.joda.time.Minutes minutes72 = minutes33.plus(minutes58);
        int int73 = minutes33.size();
        org.joda.time.MutablePeriod mutablePeriod74 = minutes33.toMutablePeriod();
        boolean boolean75 = minutes22.isLessThan(minutes33);
        org.joda.time.Minutes minutes76 = minutes33.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(minutes76);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = minutes6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        int int10 = minutes5.get(durationFieldType9);
        org.joda.time.Minutes minutes12 = minutes5.plus((-1));
        org.joda.time.Minutes minutes14 = minutes5.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType16 = minutes5.getFieldType((int) (short) 0);
        boolean boolean17 = minutes0.isSupported(durationFieldType16);
        int int18 = minutes0.size();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = minutes0.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-2) + "'", int10 == (-2));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        int int5 = minutes3.getMinutes();
        java.lang.String str6 = minutes3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = minutes3.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483645) + "'", int5 == (-2147483645));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483645M" + "'", str6, "PT-2147483645M");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        int int6 = minutes5.getMinutes();
        org.joda.time.PeriodType periodType7 = minutes5.getPeriodType();
        org.joda.time.Minutes minutes8 = null;
        org.joda.time.Minutes minutes9 = minutes5.plus(minutes8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes12 = minutes9.multipliedBy((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.ZERO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        boolean boolean15 = minutes12.equals((java.lang.Object) minutes13);
        org.joda.time.Period period16 = minutes12.toPeriod();
        org.joda.time.Duration duration17 = minutes12.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        java.lang.Object obj11 = null;
        boolean boolean12 = minutes2.equals(obj11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes15 = minutes13.minus((int) (short) 0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        org.joda.time.Minutes minutes26 = minutes19.plus((-1));
        boolean boolean27 = minutes16.isGreaterThan(minutes19);
        org.joda.time.DurationFieldType durationFieldType28 = minutes19.getFieldType();
        org.joda.time.PeriodType periodType29 = minutes19.getPeriodType();
        boolean boolean30 = minutes13.isLessThan(minutes19);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod36 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes38 = minutes35.plus(minutes37);
        boolean boolean39 = minutes34.isLessThan(minutes35);
        java.lang.String str40 = minutes34.toString();
        org.joda.time.MutablePeriod mutablePeriod41 = minutes34.toMutablePeriod();
        org.joda.time.Duration duration42 = minutes34.toStandardDuration();
        int int43 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes34);
        org.joda.time.Minutes minutes44 = minutes2.plus(minutes19);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration46 = minutes45.toStandardDuration();
        org.joda.time.Duration duration47 = minutes45.toStandardDuration();
        org.joda.time.Minutes minutes49 = minutes45.minus(2);
        org.joda.time.Minutes minutes51 = minutes45.plus((-4));
        int int52 = minutes45.getMinutes();
        boolean boolean53 = minutes44.isGreaterThan(minutes45);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-2147483645M" + "'", str40, "PT-2147483645M");
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType15 = minutes11.getFieldType();
        org.joda.time.Minutes minutes17 = minutes11.dividedBy((-1));
        org.joda.time.Minutes minutes19 = minutes11.dividedBy(2147483646);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes20.minus((int) (short) 1);
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy(0);
        org.joda.time.Duration duration25 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        int int29 = minutes22.get(durationFieldType28);
        boolean boolean30 = minutes11.isSupported(durationFieldType28);
        int int31 = minutes3.get(durationFieldType28);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.Minutes minutes34 = minutes32.negated();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.THREE;
        int int36 = minutes35.size();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        int int44 = minutes37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        org.joda.time.Minutes minutes46 = minutes39.plus((int) ' ');
        int int47 = minutes35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes46);
        boolean boolean48 = minutes32.isLessThan(minutes35);
        org.joda.time.Period period49 = minutes32.toPeriod();
        org.joda.time.PeriodType periodType50 = minutes32.getPeriodType();
        boolean boolean51 = minutes3.isLessThan(minutes32);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483646 + "'", int29 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2147483647 + "'", int31 == 2147483647);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 1);
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy(0);
        org.joda.time.Duration duration20 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes21.getFieldType();
        int int24 = minutes17.get(durationFieldType23);
        boolean boolean25 = minutes8.isSupported(durationFieldType23);
        int int26 = minutes0.get(durationFieldType23);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.PeriodType periodType29 = minutes28.getPeriodType();
        org.joda.time.Minutes minutes30 = minutes28.negated();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes32.plus(0);
        org.joda.time.DurationFieldType durationFieldType35 = minutes34.getFieldType();
        int int36 = minutes30.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes30.dividedBy((int) ' ');
        org.joda.time.Minutes minutes39 = minutes0.plus(minutes30);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.ZERO;
        org.joda.time.Duration duration41 = minutes40.toStandardDuration();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.DurationFieldType durationFieldType49 = minutes46.getFieldType();
        int int50 = minutes45.get(durationFieldType49);
        org.joda.time.Minutes minutes52 = minutes45.plus((-1));
        boolean boolean53 = minutes42.isGreaterThan(minutes45);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = minutes57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        int int61 = minutes56.get(durationFieldType60);
        boolean boolean62 = minutes45.isSupported(durationFieldType60);
        org.joda.time.Minutes minutes64 = minutes45.dividedBy((-2));
        int int65 = minutes40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes45);
        org.joda.time.Minutes minutes66 = minutes39.plus(minutes40);
        int int67 = minutes66.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483646 + "'", int24 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2147483648) + "'", int26 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-2) + "'", int50 == (-2));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = null;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        int int16 = minutes15.size();
        int int18 = minutes15.getValue(0);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        java.lang.String str23 = minutes20.toString();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = minutes24.getFieldType();
        boolean boolean26 = minutes20.isSupported(durationFieldType25);
        int int27 = minutes19.get(durationFieldType25);
        boolean boolean28 = minutes14.isGreaterThan(minutes19);
        int int30 = minutes19.getValue(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483647M" + "'", str23, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Period period21 = minutes3.toPeriod();
        org.joda.time.Minutes minutes23 = minutes3.plus((int) 'a');
        int int25 = minutes3.getValue(0);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = minutes30.get(durationFieldType31);
        org.joda.time.MutablePeriod mutablePeriod33 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes30);
        boolean boolean35 = minutes29.isLessThan(minutes34);
        int int36 = minutes29.getMinutes();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean39 = minutes29.isLessThan(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration41 = minutes40.toStandardDuration();
        org.joda.time.Duration duration42 = minutes40.toStandardDuration();
        org.joda.time.Minutes minutes44 = minutes40.minus(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes45.negated();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes50 = minutes49.negated();
        org.joda.time.Minutes minutes51 = minutes49.negated();
        boolean boolean52 = minutes45.equals((java.lang.Object) minutes51);
        boolean boolean53 = minutes44.isLessThan(minutes45);
        org.joda.time.Minutes minutes54 = minutes38.minus(minutes45);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes56 = minutes55.negated();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes55);
        java.lang.String str58 = minutes55.toString();
        org.joda.time.Minutes minutes59 = minutes54.plus(minutes55);
        org.joda.time.Minutes minutes60 = minutes54.negated();
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = minutes61.get(durationFieldType62);
        org.joda.time.MutablePeriod mutablePeriod64 = minutes61.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType65 = minutes61.getFieldType();
        org.joda.time.Minutes minutes67 = minutes61.dividedBy((-1));
        org.joda.time.Minutes minutes69 = minutes61.dividedBy(2147483646);
        org.joda.time.DurationFieldType durationFieldType70 = minutes61.getFieldType();
        boolean boolean71 = minutes54.isSupported(durationFieldType70);
        int int72 = minutes26.get(durationFieldType70);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT2147483647M" + "'", str58, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-2) + "'", int72 == (-2));
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        int int20 = minutes19.size();
        int int22 = minutes19.getValue(0);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        boolean boolean30 = minutes24.isSupported(durationFieldType29);
        int int31 = minutes23.get(durationFieldType29);
        boolean boolean32 = minutes16.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes34 = minutes16.plus((-2147483648));
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes37 = minutes35.minus((int) (short) 1);
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy(0);
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.Minutes minutes42 = minutes39.dividedBy((-2147483648));
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.DurationFieldType durationFieldType49 = minutes46.getFieldType();
        int int50 = minutes45.get(durationFieldType49);
        org.joda.time.Minutes minutes52 = minutes45.plus((-1));
        org.joda.time.Minutes minutes54 = minutes45.minus((int) (short) 10);
        org.joda.time.Minutes minutes56 = minutes54.dividedBy((-2147483648));
        org.joda.time.Minutes minutes58 = minutes54.plus(100);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes61 = minutes59.minus((int) (short) 1);
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy(0);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes66 = minutes64.dividedBy((int) 'a');
        org.joda.time.Minutes minutes68 = minutes64.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType69 = minutes68.getFieldType();
        boolean boolean70 = minutes61.isSupported(durationFieldType69);
        boolean boolean71 = minutes54.isSupported(durationFieldType69);
        int int72 = minutes42.get(durationFieldType69);
        java.lang.String str73 = minutes42.toString();
        org.joda.time.PeriodType periodType74 = minutes42.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType75 = minutes42.getFieldType();
        boolean boolean76 = minutes16.isGreaterThan(minutes42);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2147483647 + "'", int31 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-2) + "'", int50 == (-2));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT0M" + "'", str73, "PT0M");
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType16 = minutes0.getFieldType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        boolean boolean26 = minutes17.isLessThan(minutes22);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.Minutes minutes29 = minutes27.negated();
        int int30 = minutes29.getMinutes();
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType34 = minutes33.getPeriodType();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.Minutes minutes37 = minutes35.negated();
        org.joda.time.DurationFieldType durationFieldType38 = minutes35.getFieldType();
        java.lang.String str39 = minutes35.toString();
        boolean boolean40 = minutes33.isGreaterThan(minutes35);
        boolean boolean41 = minutes32.equals((java.lang.Object) minutes33);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes32);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes44 = minutes43.negated();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        org.joda.time.Minutes minutes46 = minutes42.minus(minutes45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes42.getFieldType();
        int int48 = minutes29.get(durationFieldType47);
        int int49 = minutes22.get(durationFieldType47);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        boolean boolean51 = minutes0.equals((java.lang.Object) minutes50);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2147483647) + "'", int30 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2147483647M" + "'", str39, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2147483647) + "'", int48 == (-2147483647));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2147483648) + "'", int49 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.MutablePeriod mutablePeriod22 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        boolean boolean24 = minutes18.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        int int32 = minutes27.get(durationFieldType31);
        org.joda.time.Minutes minutes34 = minutes27.plus((-1));
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod36 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        int int42 = minutes35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        org.joda.time.Minutes minutes44 = minutes37.plus((int) ' ');
        java.lang.String str45 = minutes37.toString();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean48 = minutes37.isLessThan(minutes47);
        boolean boolean49 = minutes34.isLessThan(minutes37);
        org.joda.time.Minutes minutes50 = minutes18.minus(minutes34);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes53 = minutes18.dividedBy(2);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = minutes57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        int int61 = minutes56.get(durationFieldType60);
        org.joda.time.Minutes minutes63 = minutes56.plus((-1));
        org.joda.time.Minutes minutes64 = minutes63.negated();
        org.joda.time.Minutes minutes65 = minutes53.plus(minutes64);
        org.joda.time.Minutes minutes67 = minutes53.minus((int) (short) 1);
        org.joda.time.Minutes minutes69 = minutes53.dividedBy((int) (short) 10);
        boolean boolean70 = minutes4.isLessThan(minutes69);
        java.lang.Class<?> wildcardClass71 = minutes4.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT2M" + "'", str45, "PT2M");
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        java.lang.String str2 = minutes0.toString();
        org.joda.time.Period period3 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0M" + "'", str2, "PT0M");
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes29 = minutes11.dividedBy((-12));
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = minutes30.get(durationFieldType31);
        org.joda.time.MutablePeriod mutablePeriod33 = minutes30.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = minutes30.getFieldType();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes35.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType39 = minutes35.getFieldType();
        boolean boolean40 = minutes30.isSupported(durationFieldType39);
        boolean boolean41 = minutes29.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((int) 'a');
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((-12));
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = minutes50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        int int54 = minutes49.get(durationFieldType53);
        org.joda.time.Minutes minutes56 = minutes49.plus((-1));
        org.joda.time.Minutes minutes58 = minutes49.minus((int) (short) 10);
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((-2147483648));
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod62 = minutes61.toMutablePeriod();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes64 = minutes61.plus(minutes63);
        org.joda.time.Minutes minutes65 = minutes58.minus(minutes63);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes68 = minutes66.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes70 = minutes66.plus(0);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes73 = minutes71.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = minutes74.get(durationFieldType75);
        org.joda.time.DurationFieldType durationFieldType77 = minutes74.getFieldType();
        int int78 = minutes73.get(durationFieldType77);
        org.joda.time.Minutes minutes80 = minutes73.plus((-1));
        org.joda.time.Minutes minutes82 = minutes73.minus((int) (short) 10);
        org.joda.time.Minutes minutes84 = minutes82.dividedBy((-2147483648));
        org.joda.time.Minutes minutes85 = minutes70.plus(minutes84);
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = minutes89.get(durationFieldType90);
        org.joda.time.MutablePeriod mutablePeriod92 = minutes89.toMutablePeriod();
        org.joda.time.Minutes minutes93 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes89);
        boolean boolean94 = minutes88.isLessThan(minutes93);
        org.joda.time.DurationFieldType durationFieldType95 = minutes93.getFieldType();
        boolean boolean96 = minutes85.isSupported(durationFieldType95);
        int int97 = minutes58.get(durationFieldType95);
        boolean boolean98 = minutes44.isSupported(durationFieldType95);
        boolean boolean99 = minutes30.isSupported(durationFieldType95);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-2) + "'", int78 == (-2));
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod92);
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(durationFieldType95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-12) + "'", int97 == (-12));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        org.joda.time.Minutes minutes7 = minutes5.negated();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        int int15 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.Minutes minutes17 = minutes10.plus((int) ' ');
        java.lang.String str18 = minutes10.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        org.joda.time.Minutes minutes33 = minutes10.minus(minutes21);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes34.getFieldType();
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        boolean boolean38 = minutes10.isSupported(durationFieldType37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = minutes39.get(durationFieldType40);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes39.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType43 = minutes39.getFieldType();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration45 = minutes44.toStandardDuration();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes44);
        boolean boolean47 = minutes39.isGreaterThan(minutes44);
        org.joda.time.Minutes minutes48 = minutes10.plus(minutes44);
        org.joda.time.Minutes minutes49 = minutes44.negated();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType52 = minutes51.getPeriodType();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes54 = minutes53.negated();
        org.joda.time.Minutes minutes55 = minutes53.negated();
        org.joda.time.DurationFieldType durationFieldType56 = minutes53.getFieldType();
        java.lang.String str57 = minutes53.toString();
        boolean boolean58 = minutes51.isGreaterThan(minutes53);
        boolean boolean59 = minutes50.equals((java.lang.Object) minutes51);
        org.joda.time.Minutes minutes61 = minutes51.minus(1);
        org.joda.time.PeriodType periodType62 = minutes61.getPeriodType();
        org.joda.time.Minutes minutes63 = minutes49.plus(minutes61);
        org.joda.time.MutablePeriod mutablePeriod64 = minutes61.toMutablePeriod();
        boolean boolean65 = minutes7.isGreaterThan(minutes61);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2M" + "'", str18, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2147483647M" + "'", str57, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        boolean boolean9 = minutes0.isLessThan(minutes5);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        boolean boolean18 = minutes12.isLessThan(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes38 = minutes31.plus((int) ' ');
        java.lang.String str39 = minutes31.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean42 = minutes31.isLessThan(minutes41);
        boolean boolean43 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes44 = minutes12.minus(minutes28);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes47 = minutes12.dividedBy(2);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        int int55 = minutes50.get(durationFieldType54);
        org.joda.time.Minutes minutes57 = minutes50.plus((-1));
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes47.plus(minutes58);
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((-12));
        boolean boolean62 = minutes5.isLessThan(minutes59);
        org.joda.time.Minutes minutes64 = minutes59.minus(1);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes67 = minutes65.minus((int) (short) 1);
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy(0);
        org.joda.time.Duration duration70 = minutes69.toStandardDuration();
        org.joda.time.Minutes minutes72 = minutes69.dividedBy((-2147483648));
        org.joda.time.Minutes minutes73 = minutes59.plus(minutes72);
        org.joda.time.PeriodType periodType74 = minutes59.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2M" + "'", str39, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-2) + "'", int55 == (-2));
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(periodType74);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes36 = minutes34.minus(36);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        org.joda.time.Minutes minutes24 = null;
        boolean boolean25 = minutes3.isLessThan(minutes24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes3.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(durationFieldType26);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes19.negated();
        org.joda.time.Minutes minutes53 = minutes19.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes62 = minutes61.negated();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes61);
        java.lang.String str64 = minutes61.toString();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = minutes65.getFieldType();
        boolean boolean67 = minutes61.isSupported(durationFieldType66);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes61);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes70 = minutes69.negated();
        org.joda.time.Minutes minutes72 = minutes70.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes75 = minutes73.dividedBy((int) 'a');
        org.joda.time.Minutes minutes77 = minutes73.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType78 = minutes77.getFieldType();
        boolean boolean79 = minutes70.isSupported(durationFieldType78);
        org.joda.time.DurationFieldType durationFieldType80 = minutes70.getFieldType();
        boolean boolean81 = minutes61.isSupported(durationFieldType80);
        boolean boolean82 = minutes58.isSupported(durationFieldType80);
        boolean boolean83 = minutes53.equals((java.lang.Object) minutes58);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes86 = minutes84.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes87 = minutes84.negated();
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes90 = minutes84.minus(minutes89);
        int int91 = minutes84.size();
        int int92 = minutes84.size();
        org.joda.time.Minutes minutes93 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes84);
        org.joda.time.DurationFieldType durationFieldType94 = minutes93.getFieldType();
        boolean boolean95 = minutes58.equals((java.lang.Object) minutes93);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT2147483647M" + "'", str64, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        org.joda.time.Duration duration61 = minutes60.toStandardDuration();
        org.joda.time.Minutes minutes63 = minutes60.plus((int) (byte) 10);
        org.joda.time.Minutes minutes64 = null;
        boolean boolean65 = minutes60.isGreaterThan(minutes64);
        org.joda.time.Duration duration66 = minutes60.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(duration66);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = minutes10.getFieldType();
        int int12 = minutes2.get(durationFieldType11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes13.negated();
        org.joda.time.Minutes minutes17 = minutes2.plus(minutes13);
        java.lang.String str18 = minutes17.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT4M" + "'", str18, "PT4M");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = null;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod17 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = minutes18.plus(0);
        int int23 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes18);
        org.joda.time.Minutes minutes25 = minutes18.plus((int) ' ');
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes30.plus((-1));
        boolean boolean38 = minutes27.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod41 = minutes39.toMutablePeriod();
        int int42 = minutes39.size();
        boolean boolean43 = minutes27.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes44 = minutes25.minus(minutes27);
        boolean boolean45 = minutes14.isGreaterThan(minutes44);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        int int26 = minutes25.size();
        org.joda.time.MutablePeriod mutablePeriod27 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes30 = minutes28.dividedBy((int) 'a');
        int int31 = minutes30.getMinutes();
        org.joda.time.DurationFieldType durationFieldType32 = minutes30.getFieldType();
        int int33 = minutes25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes35 = minutes25.dividedBy((-2147483645));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-22139006) + "'", int31 == (-22139006));
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(minutes35);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes15 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes17 = minutes13.plus((int) (short) 10);
        org.joda.time.Duration duration18 = minutes13.toStandardDuration();
        java.lang.Class<?> wildcardClass19 = minutes13.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        java.lang.String str3 = minutes2.toString();
        int int4 = minutes2.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483646M" + "'", str3, "PT2147483646M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483646 + "'", int4 == 2147483646);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        boolean boolean7 = minutes0.isSupported(durationFieldType6);
        java.lang.String str8 = minutes0.toString();
        int int9 = minutes0.getMinutes();
        org.joda.time.Minutes minutes11 = minutes0.minus((-41297760));
        org.joda.time.Minutes minutes13 = minutes0.minus((-2147483634));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT-2147483648M" + "'", str8, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2147483648) + "'", int9 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        int int28 = minutes18.getMinutes();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod31 = minutes29.toMutablePeriod();
        java.lang.String str32 = minutes29.toString();
        org.joda.time.PeriodType periodType33 = minutes29.getPeriodType();
        boolean boolean34 = minutes18.isGreaterThan(minutes29);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes38.plus(0);
        int int43 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        org.joda.time.Minutes minutes45 = minutes38.plus((int) ' ');
        java.lang.String str46 = minutes38.toString();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean49 = minutes38.isLessThan(minutes48);
        org.joda.time.Period period50 = minutes48.toPeriod();
        org.joda.time.PeriodType periodType51 = minutes48.getPeriodType();
        boolean boolean52 = minutes18.isLessThan(minutes48);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2M" + "'", str32, "PT2M");
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2M" + "'", str46, "PT2M");
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = minutes10.getFieldType();
        int int12 = minutes2.get(durationFieldType11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes13.negated();
        org.joda.time.Minutes minutes17 = minutes2.plus(minutes13);
        org.joda.time.DurationFieldType durationFieldType18 = minutes2.getFieldType();
        org.joda.time.PeriodType periodType19 = minutes2.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes6 = minutes3.minus(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int6 = minutes3.getValue(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Duration duration20 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        java.lang.String str24 = minutes21.toString();
        org.joda.time.Minutes minutes26 = minutes21.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (byte) 0);
        boolean boolean31 = minutes26.equals((java.lang.Object) minutes28);
        boolean boolean32 = minutes10.isGreaterThan(minutes28);
        boolean boolean33 = minutes7.equals((java.lang.Object) boolean32);
        org.joda.time.Minutes minutes34 = minutes0.minus(minutes7);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes38 = minutes35.negated();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes35.minus(minutes40);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod43);
        boolean boolean45 = minutes35.isLessThan(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = minutes50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        int int54 = minutes49.get(durationFieldType53);
        org.joda.time.Minutes minutes56 = minutes49.plus((-1));
        boolean boolean57 = minutes46.isGreaterThan(minutes49);
        org.joda.time.Minutes minutes59 = minutes49.multipliedBy(2);
        org.joda.time.Minutes minutes60 = minutes59.negated();
        org.joda.time.Minutes minutes61 = minutes60.negated();
        boolean boolean62 = minutes35.isLessThan(minutes60);
        org.joda.time.Minutes minutes64 = minutes60.dividedBy((int) (short) 1);
        org.joda.time.Duration duration65 = minutes60.toStandardDuration();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod67 = minutes66.toMutablePeriod();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes72 = minutes68.plus(0);
        int int73 = minutes66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes68);
        org.joda.time.Minutes minutes75 = minutes68.plus((int) ' ');
        java.lang.String str76 = minutes68.toString();
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod78 = minutes77.toMutablePeriod();
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes81 = minutes79.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes83 = minutes79.plus(0);
        int int84 = minutes77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes79);
        org.joda.time.Minutes minutes86 = minutes79.plus((int) ' ');
        java.lang.String str87 = minutes79.toString();
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean90 = minutes79.isLessThan(minutes89);
        org.joda.time.Minutes minutes91 = minutes68.minus(minutes79);
        java.lang.String str92 = minutes79.toString();
        org.joda.time.Minutes minutes93 = minutes60.plus(minutes79);
        boolean boolean94 = minutes34.isGreaterThan(minutes93);
        org.joda.time.Minutes minutes95 = minutes93.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483647M" + "'", str24, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PT2M" + "'", str76, "PT2M");
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PT2M" + "'", str87, "PT2M");
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "PT2M" + "'", str92, "PT2M");
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(minutes95);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes1.plus(0);
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = minutes5.minus((int) ' ');
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Duration duration12 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes0.plus(minutes4);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Duration duration22 = minutes16.toStandardDuration();
        int int23 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod25 = minutes24.toMutablePeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        int int31 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Minutes minutes33 = minutes26.plus((int) ' ');
        java.lang.String str34 = minutes26.toString();
        java.lang.Object obj35 = null;
        boolean boolean36 = minutes26.equals(obj35);
        org.joda.time.PeriodType periodType37 = minutes26.getPeriodType();
        org.joda.time.Minutes minutes38 = minutes4.plus(minutes26);
        org.joda.time.MutablePeriod mutablePeriod39 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2M" + "'", str34, "PT2M");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-4M");
        org.joda.time.Minutes minutes2 = minutes1.negated();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        org.joda.time.Minutes minutes25 = minutes18.minus(minutes23);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((-2147483648));
        org.joda.time.Minutes minutes45 = minutes30.plus(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.MutablePeriod mutablePeriod52 = minutes49.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        boolean boolean54 = minutes48.isLessThan(minutes53);
        org.joda.time.DurationFieldType durationFieldType55 = minutes53.getFieldType();
        boolean boolean56 = minutes45.isSupported(durationFieldType55);
        int int57 = minutes18.get(durationFieldType55);
        int int58 = minutes6.get(durationFieldType55);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration60 = minutes59.toStandardDuration();
        org.joda.time.Duration duration61 = minutes59.toStandardDuration();
        org.joda.time.Minutes minutes63 = minutes59.minus(2);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes66 = minutes64.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = minutes67.get(durationFieldType68);
        org.joda.time.MutablePeriod mutablePeriod70 = minutes67.toMutablePeriod();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes67);
        boolean boolean72 = minutes66.isLessThan(minutes71);
        int int73 = minutes66.getMinutes();
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean76 = minutes66.isLessThan(minutes75);
        org.joda.time.Minutes minutes77 = minutes63.minus(minutes75);
        int int78 = minutes75.getMinutes();
        org.joda.time.Minutes minutes79 = minutes6.plus(minutes75);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-12) + "'", int57 == (-12));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-2) + "'", int73 == (-2));
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-2147483645) + "'", int78 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes79);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        boolean boolean49 = minutes38.isGreaterThan(minutes41);
        org.joda.time.DurationFieldType durationFieldType50 = minutes41.getFieldType();
        int int52 = minutes41.getValue((int) (short) 0);
        org.joda.time.Period period53 = minutes41.toPeriod();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = minutes41.minus(minutes55);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = minutes62.negated();
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes62.minus(minutes67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod70 = minutes69.toMutablePeriod();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod70);
        boolean boolean72 = minutes62.isLessThan(minutes71);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes71);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        boolean boolean75 = minutes41.isSupported(durationFieldType74);
        int int76 = minutes2.get(durationFieldType74);
        org.joda.time.DurationFieldType durationFieldType77 = minutes2.getFieldType();
        org.joda.time.Minutes minutes79 = minutes2.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483646 + "'", int76 == 2147483646);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(minutes79);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType16 = minutes15.getPeriodType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        java.lang.String str21 = minutes17.toString();
        boolean boolean22 = minutes15.isGreaterThan(minutes17);
        boolean boolean23 = minutes14.equals((java.lang.Object) minutes15);
        org.joda.time.Minutes minutes25 = minutes15.minus(1);
        boolean boolean26 = minutes2.isGreaterThan(minutes15);
        org.joda.time.DurationFieldType durationFieldType27 = minutes2.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutesIn(readableInterval0);
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds4 = minutes0.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean15 = minutes4.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes4.toMutablePeriod();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        boolean boolean20 = minutes4.equals((java.lang.Object) minutes18);
        org.joda.time.Minutes minutes22 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes23.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes23.minus(minutes28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod31);
        boolean boolean33 = minutes23.isLessThan(minutes32);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes37 = minutes34.plus(minutes36);
        org.joda.time.Period period38 = minutes37.toPeriod();
        int int39 = minutes32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        boolean boolean40 = minutes4.isLessThan(minutes32);
        org.joda.time.Minutes minutes42 = minutes4.plus((int) (byte) 1);
        int int43 = minutes42.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration5 = minutes4.toStandardDuration();
        org.joda.time.Duration duration6 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes4.minus(2);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes9.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        boolean boolean16 = minutes9.equals((java.lang.Object) minutes15);
        boolean boolean17 = minutes8.isLessThan(minutes9);
        org.joda.time.Minutes minutes18 = minutes0.plus(minutes8);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes23.plus(0);
        int int28 = minutes21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes23);
        org.joda.time.Minutes minutes30 = minutes23.plus((int) ' ');
        java.lang.String str31 = minutes23.toString();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean34 = minutes23.isLessThan(minutes33);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes23.toMutablePeriod();
        boolean boolean36 = minutes19.isLessThan(minutes23);
        org.joda.time.DurationFieldType durationFieldType37 = minutes19.getFieldType();
        int int38 = minutes8.get(durationFieldType37);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2M" + "'", str31, "PT2M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.dividedBy((int) '4');
        int int7 = minutes6.getMinutes();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(214748366);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes3.dividedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds12 = minutes11.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 67108863 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        int int2 = minutes0.size();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        int int4 = minutes3.getMinutes();
        org.joda.time.PeriodType periodType5 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes7 = minutes3.multipliedBy(1);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.MutablePeriod mutablePeriod12 = minutes9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType13 = minutes9.getFieldType();
        org.joda.time.Minutes minutes15 = minutes9.dividedBy((-1));
        org.joda.time.Minutes minutes17 = minutes9.dividedBy(2147483646);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes18.minus((int) (short) 1);
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy(0);
        org.joda.time.Duration duration23 = minutes20.toStandardDuration();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.DurationFieldType durationFieldType26 = minutes24.getFieldType();
        int int27 = minutes20.get(durationFieldType26);
        boolean boolean28 = minutes9.isSupported(durationFieldType26);
        boolean boolean29 = minutes7.isSupported(durationFieldType26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes30 = minutes0.minus(minutes7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-2147483648) + "'", int4 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483646 + "'", int27 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes4.get(durationFieldType13);
        boolean boolean15 = minutes1.isSupported(durationFieldType13);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod17 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes19 = minutes16.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod21 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes23 = minutes20.plus(minutes22);
        boolean boolean24 = minutes19.isLessThan(minutes20);
        org.joda.time.PeriodType periodType25 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes27 = minutes19.dividedBy(3);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy(10);
        boolean boolean30 = minutes1.isGreaterThan(minutes29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes32 = minutes1.plus((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes18 = minutes6.negated();
        org.joda.time.Minutes minutes20 = minutes18.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod23 = minutes21.toMutablePeriod();
        java.lang.String str24 = minutes21.toString();
        int int25 = minutes21.size();
        org.joda.time.Minutes minutes26 = minutes21.negated();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes28 = minutes26.negated();
        org.joda.time.Minutes minutes29 = minutes20.minus(minutes26);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        int int31 = minutes30.size();
        int int33 = minutes30.getValue(0);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes30);
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((-1));
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        int int44 = minutes37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        org.joda.time.Minutes minutes46 = minutes39.plus((int) ' ');
        java.lang.String str47 = minutes39.toString();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean50 = minutes39.isLessThan(minutes49);
        boolean boolean51 = minutes34.equals((java.lang.Object) minutes39);
        org.joda.time.Minutes minutes53 = minutes39.minus(3);
        org.joda.time.Minutes minutes54 = minutes20.minus(minutes39);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2M" + "'", str24, "PT2M");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2M" + "'", str47, "PT2M");
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Minutes minutes12 = minutes4.plus((int) (short) 0);
        boolean boolean13 = minutes0.isLessThan(minutes4);
        org.joda.time.Duration duration14 = minutes0.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes4 = minutes2.dividedBy((int) (short) 10);
        int int5 = minutes4.getMinutes();
        java.lang.String str6 = minutes4.toString();
        org.joda.time.Minutes minutes8 = minutes4.minus(10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-214748364) + "'", int5 == (-214748364));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-214748364M" + "'", str6, "PT-214748364M");
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        org.joda.time.Duration duration61 = minutes60.toStandardDuration();
        org.joda.time.Minutes minutes63 = minutes60.plus((int) (byte) 10);
        org.joda.time.Minutes minutes64 = minutes60.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT0M");
        boolean boolean17 = minutes14.isLessThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes14.getFieldType();
        org.joda.time.PeriodType periodType19 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        int int29 = minutes22.getMinutes();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean32 = minutes22.isLessThan(minutes31);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes34.negated();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes34.minus(minutes39);
        boolean boolean41 = minutes22.isLessThan(minutes34);
        org.joda.time.DurationFieldType durationFieldType42 = minutes34.getFieldType();
        org.joda.time.Minutes minutes43 = minutes14.minus(minutes34);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(minutes43);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        int int3 = minutes2.getMinutes();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        org.joda.time.Minutes minutes9 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes13.minus((int) (short) 1);
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy(0);
        org.joda.time.Minutes minutes19 = minutes17.plus((-2147483648));
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = minutes20.negated();
        boolean boolean23 = minutes19.isGreaterThan(minutes22);
        int int24 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.MutablePeriod mutablePeriod25 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration27 = minutes26.toStandardDuration();
        org.joda.time.Duration duration28 = minutes26.toStandardDuration();
        org.joda.time.Minutes minutes30 = minutes26.minus(2);
        boolean boolean31 = minutes19.isGreaterThan(minutes30);
        int int32 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.PeriodType periodType33 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType36 = minutes35.getPeriodType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes38 = minutes37.negated();
        org.joda.time.Minutes minutes39 = minutes37.negated();
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        java.lang.String str41 = minutes37.toString();
        boolean boolean42 = minutes35.isGreaterThan(minutes37);
        boolean boolean43 = minutes34.equals((java.lang.Object) minutes35);
        int int44 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes34);
        int int45 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes34);
        int int46 = minutes2.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-22139006) + "'", int3 == (-22139006));
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2147483647M" + "'", str41, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-22139006) + "'", int46 == (-22139006));
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        int int5 = minutes3.getMinutes();
        java.lang.String str6 = minutes3.toString();
        org.joda.time.Period period7 = minutes3.toPeriod();
        org.joda.time.Duration duration8 = minutes3.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        int int13 = minutes10.size();
        org.joda.time.MutablePeriod mutablePeriod14 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 1);
        int int18 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        int int19 = minutes3.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483645) + "'", int5 == (-2147483645));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483645M" + "'", str6, "PT-2147483645M");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483645) + "'", int19 == (-2147483645));
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes3.plus(0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean9 = minutes3.isGreaterThan(minutes8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        int int11 = minutes10.getMinutes();
        org.joda.time.Minutes minutes12 = minutes0.plus(minutes10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        boolean boolean49 = minutes38.isGreaterThan(minutes41);
        org.joda.time.DurationFieldType durationFieldType50 = minutes41.getFieldType();
        int int52 = minutes41.getValue((int) (short) 0);
        org.joda.time.Period period53 = minutes41.toPeriod();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = minutes41.minus(minutes55);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = minutes62.negated();
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes62.minus(minutes67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod70 = minutes69.toMutablePeriod();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod70);
        boolean boolean72 = minutes62.isLessThan(minutes71);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes71);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        boolean boolean75 = minutes41.isSupported(durationFieldType74);
        int int76 = minutes2.get(durationFieldType74);
        org.joda.time.DurationFieldType durationFieldType77 = minutes2.getFieldType();
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes80 = minutes78.minus((int) (short) 1);
        org.joda.time.Minutes minutes82 = minutes80.multipliedBy(0);
        org.joda.time.Period period83 = minutes80.toPeriod();
        org.joda.time.PeriodType periodType84 = minutes80.getPeriodType();
        org.joda.time.Minutes minutes85 = minutes2.minus(minutes80);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483646 + "'", int76 == 2147483646);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(minutes85);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Period period4 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        int int31 = minutes19.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType33 = minutes19.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.Minutes minutes42 = minutes2.plus(100);
        org.joda.time.Duration duration43 = minutes42.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483633M");
        org.joda.time.Weeks weeks2 = minutes1.toStandardWeeks();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        int int11 = minutes3.size();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod23 = minutes22.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes24.plus(0);
        int int29 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes24);
        org.joda.time.Minutes minutes31 = minutes24.plus((int) ' ');
        java.lang.String str32 = minutes24.toString();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean35 = minutes24.isLessThan(minutes34);
        boolean boolean36 = minutes21.isLessThan(minutes24);
        int int37 = minutes21.getMinutes();
        org.joda.time.DurationFieldType durationFieldType38 = minutes21.getFieldType();
        boolean boolean39 = minutes3.equals((java.lang.Object) minutes21);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes42 = minutes40.minus((int) (short) 1);
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy(0);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.dividedBy((int) 'a');
        org.joda.time.Minutes minutes49 = minutes45.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType50 = minutes49.getFieldType();
        boolean boolean51 = minutes42.isSupported(durationFieldType50);
        boolean boolean52 = minutes3.isSupported(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType53 = minutes3.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2M" + "'", str32, "PT2M");
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(durationFieldType53);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        int int7 = minutes0.getMinutes();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Duration duration10 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes12 = minutes8.minus(2);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        boolean boolean21 = minutes15.isLessThan(minutes20);
        int int22 = minutes15.getMinutes();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean25 = minutes15.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = minutes12.minus(minutes24);
        int int28 = minutes12.getValue(0);
        org.joda.time.Minutes minutes29 = minutes0.minus(minutes12);
        int int30 = minutes29.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2147483648) + "'", int7 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2147483648) + "'", int30 == (-2147483648));
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((-12));
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes22 = minutes19.plus(minutes21);
        org.joda.time.Minutes minutes23 = minutes16.minus(minutes21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes24.plus(0);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        int int36 = minutes31.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes31.plus((-1));
        org.joda.time.Minutes minutes40 = minutes31.minus((int) (short) 10);
        org.joda.time.Minutes minutes42 = minutes40.dividedBy((-2147483648));
        org.joda.time.Minutes minutes43 = minutes28.plus(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.MutablePeriod mutablePeriod50 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes47);
        boolean boolean52 = minutes46.isLessThan(minutes51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes51.getFieldType();
        boolean boolean54 = minutes43.isSupported(durationFieldType53);
        int int55 = minutes16.get(durationFieldType53);
        boolean boolean56 = minutes2.isSupported(durationFieldType53);
        org.joda.time.MutablePeriod mutablePeriod57 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod59 = minutes58.toMutablePeriod();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes61 = minutes58.plus(minutes60);
        int int62 = minutes60.getMinutes();
        int int63 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes60);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.PeriodType periodType65 = minutes64.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-12) + "'", int55 == (-12));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(periodType65);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod7 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        int int13 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes8);
        org.joda.time.Minutes minutes15 = minutes8.plus((int) ' ');
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = minutes16.getFieldType();
        int int18 = minutes8.get(durationFieldType17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = minutes19.negated();
        org.joda.time.Minutes minutes23 = minutes8.plus(minutes19);
        org.joda.time.DurationFieldType durationFieldType24 = minutes8.getFieldType();
        int int25 = minutes3.get(durationFieldType24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.DurationFieldType durationFieldType27 = minutes3.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2147483645) + "'", int25 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483648M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean10 = minutes4.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType();
        int int18 = minutes13.get(durationFieldType17);
        org.joda.time.Minutes minutes20 = minutes13.plus((-1));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes23.plus(0);
        int int28 = minutes21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes23);
        org.joda.time.Minutes minutes30 = minutes23.plus((int) ' ');
        java.lang.String str31 = minutes23.toString();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean34 = minutes23.isLessThan(minutes33);
        boolean boolean35 = minutes20.isLessThan(minutes23);
        org.joda.time.Minutes minutes36 = minutes4.minus(minutes20);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes39 = minutes4.dividedBy(2);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = minutes43.getFieldType();
        int int47 = minutes42.get(durationFieldType46);
        org.joda.time.Minutes minutes49 = minutes42.plus((-1));
        org.joda.time.Minutes minutes50 = minutes49.negated();
        org.joda.time.Minutes minutes51 = minutes39.plus(minutes50);
        org.joda.time.Minutes minutes53 = minutes39.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType54 = minutes53.getFieldType();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes57 = minutes55.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = minutes55.plus(0);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = minutes63.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType66 = minutes63.getFieldType();
        int int67 = minutes62.get(durationFieldType66);
        org.joda.time.Minutes minutes69 = minutes62.plus((-1));
        org.joda.time.Minutes minutes71 = minutes62.minus((int) (short) 10);
        org.joda.time.Minutes minutes73 = minutes71.dividedBy((-2147483648));
        org.joda.time.Minutes minutes74 = minutes59.plus(minutes73);
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes77 = minutes75.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = minutes78.get(durationFieldType79);
        org.joda.time.MutablePeriod mutablePeriod81 = minutes78.toMutablePeriod();
        org.joda.time.Minutes minutes82 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes78);
        boolean boolean83 = minutes77.isLessThan(minutes82);
        org.joda.time.DurationFieldType durationFieldType84 = minutes82.getFieldType();
        boolean boolean85 = minutes74.isSupported(durationFieldType84);
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((int) (short) -1);
        org.joda.time.Period period89 = minutes88.toPeriod();
        org.joda.time.Minutes minutes90 = minutes74.plus(minutes88);
        boolean boolean91 = minutes53.equals((java.lang.Object) minutes74);
        boolean boolean92 = minutes1.equals((java.lang.Object) minutes53);
        int int93 = minutes1.getMinutes();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int95 = minutes1.compareTo(baseSingleFieldPeriod94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2) + "'", int18 == (-2));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2M" + "'", str31, "PT2M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2) + "'", int47 == (-2));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-2) + "'", int67 == (-2));
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-2147483648) + "'", int93 == (-2147483648));
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod4 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes5.plus(0);
        int int10 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Minutes minutes12 = minutes5.plus((int) ' ');
        org.joda.time.Period period13 = minutes5.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod14 = minutes5.toMutablePeriod();
        int int15 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        int int16 = minutes5.getMinutes();
        org.joda.time.DurationFieldType durationFieldType17 = minutes5.getFieldType();
        java.lang.String str18 = minutes5.toString();
        org.joda.time.Minutes minutes20 = minutes5.minus((-71582788));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2M" + "'", str18, "PT2M");
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.PeriodType periodType14 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        boolean boolean17 = minutes9.equals((java.lang.Object) 0);
        org.joda.time.Period period18 = minutes9.toPeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period18);
        java.lang.String str20 = minutes19.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT-2147483648M" + "'", str20, "PT-2147483648M");
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.PeriodType periodType14 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        boolean boolean17 = minutes9.equals((java.lang.Object) 0);
        org.joda.time.Period period18 = minutes9.toPeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period18);
        java.lang.Class<?> wildcardClass20 = period18.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes27 = minutes13.plus(3);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((int) '#');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 1);
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy(0);
        org.joda.time.Duration duration20 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes21.getFieldType();
        int int24 = minutes17.get(durationFieldType23);
        boolean boolean25 = minutes8.isSupported(durationFieldType23);
        int int26 = minutes0.get(durationFieldType23);
        org.joda.time.Minutes minutes28 = minutes0.minus((-2147483645));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483646 + "'", int24 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2147483648) + "'", int26 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes28);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.Minutes minutes11 = minutes9.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.dividedBy((int) 'a');
        org.joda.time.Minutes minutes16 = minutes12.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType17 = minutes16.getFieldType();
        boolean boolean18 = minutes9.isSupported(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes9.getFieldType();
        boolean boolean20 = minutes0.isSupported(durationFieldType19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes4 = minutes2.dividedBy((int) (short) 10);
        org.joda.time.Minutes minutes6 = minutes4.minus(32);
        org.joda.time.Minutes minutes7 = minutes6.negated();
        java.lang.String str8 = minutes6.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT-214748396M" + "'", str8, "PT-214748396M");
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes20 = minutes11.minus((int) (short) 10);
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((-2147483648));
        org.joda.time.Minutes minutes23 = minutes8.plus(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType25 = minutes24.getPeriodType();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        java.lang.String str30 = minutes26.toString();
        boolean boolean31 = minutes24.isGreaterThan(minutes26);
        boolean boolean32 = minutes8.isLessThan(minutes26);
        org.joda.time.PeriodType periodType33 = minutes26.getPeriodType();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes35.plus(0);
        org.joda.time.DurationFieldType durationFieldType38 = minutes37.getFieldType();
        boolean boolean39 = minutes26.isSupported(durationFieldType38);
        org.joda.time.Duration duration40 = minutes26.toStandardDuration();
        boolean boolean41 = minutes0.equals((java.lang.Object) minutes26);
        org.joda.time.PeriodType periodType42 = minutes26.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483647M" + "'", str30, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.minus((int) (short) 0);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Period period16 = minutes14.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Duration duration12 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes0.plus(minutes4);
        org.joda.time.Minutes minutes15 = minutes4.dividedBy(2147483646);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutes((-12));
        int int18 = minutes17.getMinutes();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutes(1);
        int int21 = minutes20.size();
        org.joda.time.Minutes minutes22 = minutes17.plus(minutes20);
        java.lang.Class<?> wildcardClass23 = minutes22.getClass();
        boolean boolean24 = minutes15.equals((java.lang.Object) minutes22);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-12) + "'", int18 == (-12));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Period period9 = minutes0.toPeriod();
        java.lang.String str10 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT-2147483648M" + "'", str10, "PT-2147483648M");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2084322364M");
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        int int14 = minutes2.size();
        int int15 = minutes2.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod16 = minutes2.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483646 + "'", int15 == 2147483646);
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-2147483648) + "'", int3 == (-2147483648));
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = minutes2.multipliedBy(2);
        int int12 = minutes2.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.PeriodType periodType5 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType9 = minutes8.getFieldType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        java.lang.String str13 = minutes10.toString();
        int int14 = minutes10.size();
        org.joda.time.Minutes minutes16 = minutes10.minus(0);
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        boolean boolean18 = minutes8.isGreaterThan(minutes16);
        org.joda.time.Period period19 = minutes16.toPeriod();
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes16);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.minutes(3);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        int int30 = minutes25.get(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes25.plus((-1));
        org.joda.time.Minutes minutes34 = minutes25.minus((int) (short) 10);
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((-2147483648));
        org.joda.time.Minutes minutes38 = minutes34.plus(100);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes41 = minutes39.minus((int) (short) 1);
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy(0);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes46 = minutes44.dividedBy((int) 'a');
        org.joda.time.Minutes minutes48 = minutes44.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType49 = minutes48.getFieldType();
        boolean boolean50 = minutes41.isSupported(durationFieldType49);
        boolean boolean51 = minutes34.isSupported(durationFieldType49);
        java.lang.String str52 = minutes34.toString();
        int int53 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes34);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = minutes57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        int int61 = minutes56.get(durationFieldType60);
        org.joda.time.Minutes minutes63 = minutes56.plus((-1));
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod65 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes68 = minutes66.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes70 = minutes66.plus(0);
        int int71 = minutes64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes66);
        org.joda.time.Minutes minutes73 = minutes66.plus((int) ' ');
        java.lang.String str74 = minutes66.toString();
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean77 = minutes66.isLessThan(minutes76);
        boolean boolean78 = minutes63.isLessThan(minutes66);
        int int79 = minutes63.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod80 = minutes63.toMutablePeriod();
        org.joda.time.Minutes minutes82 = minutes63.dividedBy((-2147483548));
        org.joda.time.Minutes minutes83 = minutes22.plus(minutes63);
        boolean boolean84 = minutes16.isLessThan(minutes83);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2) + "'", int30 == (-2));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT-12M" + "'", str52, "PT-12M");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "PT2M" + "'", str74, "PT2M");
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType41 = minutes40.getPeriodType();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes43 = minutes42.negated();
        org.joda.time.Minutes minutes44 = minutes42.negated();
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        java.lang.String str46 = minutes42.toString();
        boolean boolean47 = minutes40.isGreaterThan(minutes42);
        boolean boolean48 = minutes39.equals((java.lang.Object) minutes40);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        org.joda.time.Minutes minutes50 = minutes39.negated();
        boolean boolean51 = minutes2.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod55 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = minutes56.plus(0);
        int int61 = minutes54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes56);
        org.joda.time.Minutes minutes63 = minutes56.plus((int) ' ');
        java.lang.String str64 = minutes56.toString();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean67 = minutes56.isLessThan(minutes66);
        org.joda.time.MutablePeriod mutablePeriod68 = minutes56.toMutablePeriod();
        boolean boolean69 = minutes52.isLessThan(minutes56);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MIN_VALUE;
        int int71 = minutes70.getMinutes();
        boolean boolean72 = minutes56.equals((java.lang.Object) minutes70);
        org.joda.time.Duration duration73 = minutes56.toStandardDuration();
        org.joda.time.Minutes minutes74 = minutes50.plus(minutes56);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT2M" + "'", str64, "PT2M");
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-2147483648) + "'", int71 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(minutes74);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes4 = minutes1.minus(0);
        org.joda.time.Minutes minutes6 = minutes1.minus((-1));
        org.joda.time.Minutes minutes7 = minutes1.negated();
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds10 = minutes9.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.DurationFieldType durationFieldType42 = minutes2.getFieldType(0);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.THREE;
        int int44 = minutes43.size();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod46 = minutes45.toMutablePeriod();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = minutes47.plus(0);
        int int52 = minutes45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes47);
        org.joda.time.Minutes minutes54 = minutes47.plus((int) ' ');
        int int55 = minutes43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes54);
        org.joda.time.MutablePeriod mutablePeriod56 = minutes54.toMutablePeriod();
        int int58 = minutes54.getValue(0);
        boolean boolean59 = minutes2.equals((java.lang.Object) int58);
        org.joda.time.Duration duration60 = minutes2.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 34 + "'", int58 == 34);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration60);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = minutes1.get(durationFieldType2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes4);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes6.toMutablePeriod();
        org.joda.time.PeriodType periodType8 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes9 = minutes1.minus(minutes6);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes9.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        org.joda.time.DurationFieldType durationFieldType15 = minutes11.getFieldType();
        java.lang.String str16 = minutes11.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT-12M" + "'", str16, "PT-12M");
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes22 = minutes3.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        boolean boolean11 = minutes4.isGreaterThan(minutes6);
        boolean boolean12 = minutes3.equals((java.lang.Object) minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        org.joda.time.Minutes minutes17 = minutes13.minus(minutes16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes16.getFieldType();
        boolean boolean19 = minutes0.equals((java.lang.Object) minutes16);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        int int21 = minutes20.size();
        org.joda.time.Duration duration22 = minutes20.toStandardDuration();
        boolean boolean23 = minutes16.equals((java.lang.Object) duration22);
        org.joda.time.Minutes minutes25 = minutes16.plus((-2147483648));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes26.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes26.minus(minutes31);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod34 = minutes33.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod34);
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        boolean boolean48 = minutes37.isGreaterThan(minutes40);
        org.joda.time.Minutes minutes50 = minutes40.multipliedBy(2);
        org.joda.time.Minutes minutes51 = minutes50.negated();
        org.joda.time.Minutes minutes52 = minutes51.negated();
        boolean boolean53 = minutes26.isLessThan(minutes51);
        org.joda.time.Minutes minutes55 = minutes51.dividedBy((int) (short) 1);
        org.joda.time.Duration duration56 = minutes51.toStandardDuration();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod58 = minutes57.toMutablePeriod();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes63 = minutes59.plus(0);
        int int64 = minutes57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes59);
        org.joda.time.Minutes minutes66 = minutes59.plus((int) ' ');
        java.lang.String str67 = minutes59.toString();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod69 = minutes68.toMutablePeriod();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes72 = minutes70.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes74 = minutes70.plus(0);
        int int75 = minutes68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes70);
        org.joda.time.Minutes minutes77 = minutes70.plus((int) ' ');
        java.lang.String str78 = minutes70.toString();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean81 = minutes70.isLessThan(minutes80);
        org.joda.time.Minutes minutes82 = minutes59.minus(minutes70);
        java.lang.String str83 = minutes70.toString();
        org.joda.time.Minutes minutes84 = minutes51.plus(minutes70);
        org.joda.time.Minutes minutes86 = minutes84.dividedBy((-2147483548));
        org.joda.time.Minutes minutes88 = minutes86.minus((-2147483548));
        int int89 = minutes25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes88);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT2M" + "'", str67, "PT2M");
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT2M" + "'", str78, "PT2M");
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT2M" + "'", str83, "PT2M");
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes6.negated();
        boolean boolean10 = minutes5.equals((java.lang.Object) minutes9);
        java.lang.String str11 = minutes9.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes12.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        org.joda.time.Minutes minutes26 = minutes19.plus((-1));
        boolean boolean27 = minutes16.isGreaterThan(minutes19);
        org.joda.time.DurationFieldType durationFieldType28 = minutes19.getFieldType();
        boolean boolean29 = minutes15.isSupported(durationFieldType28);
        int int30 = minutes9.get(durationFieldType28);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes47.getFieldType();
        int int51 = minutes46.get(durationFieldType50);
        org.joda.time.Minutes minutes53 = minutes46.plus((-1));
        org.joda.time.Minutes minutes55 = minutes46.minus((int) (short) 10);
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((-2147483648));
        org.joda.time.Minutes minutes58 = minutes43.plus(minutes57);
        org.joda.time.Minutes minutes59 = minutes33.minus(minutes43);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = minutes60.plus(0);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes67 = minutes65.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = minutes68.get(durationFieldType69);
        org.joda.time.DurationFieldType durationFieldType71 = minutes68.getFieldType();
        int int72 = minutes67.get(durationFieldType71);
        org.joda.time.Minutes minutes74 = minutes67.plus((-1));
        org.joda.time.Minutes minutes76 = minutes67.minus((int) (short) 10);
        org.joda.time.Minutes minutes78 = minutes76.dividedBy((-2147483648));
        org.joda.time.Minutes minutes79 = minutes64.plus(minutes78);
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType81 = minutes80.getPeriodType();
        org.joda.time.Minutes minutes82 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes83 = minutes82.negated();
        org.joda.time.Minutes minutes84 = minutes82.negated();
        org.joda.time.DurationFieldType durationFieldType85 = minutes82.getFieldType();
        java.lang.String str86 = minutes82.toString();
        boolean boolean87 = minutes80.isGreaterThan(minutes82);
        boolean boolean88 = minutes64.isLessThan(minutes82);
        int int89 = minutes43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes82);
        org.joda.time.Minutes minutes91 = minutes82.dividedBy((-2147483647));
        boolean boolean92 = minutes9.isLessThan(minutes82);
        org.joda.time.Minutes minutes93 = minutes2.plus(minutes82);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT-2M" + "'", str11, "PT-2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2) + "'", int30 == (-2));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-2) + "'", int72 == (-2));
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PT2147483647M" + "'", str86, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(minutes93);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean11 = minutes0.isLessThan(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.MutablePeriod mutablePeriod18 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        boolean boolean20 = minutes14.isLessThan(minutes19);
        org.joda.time.Minutes minutes21 = minutes10.plus(minutes14);
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        boolean boolean34 = minutes23.isGreaterThan(minutes26);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.dividedBy(2);
        int int38 = minutes35.size();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes41.plus(0);
        int int46 = minutes39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes48 = minutes41.plus((int) ' ');
        int int49 = minutes48.size();
        org.joda.time.Minutes minutes51 = minutes48.minus(0);
        org.joda.time.Minutes minutes52 = minutes35.plus(minutes48);
        org.joda.time.Minutes minutes54 = minutes52.dividedBy((-2147483648));
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes56 = minutes55.negated();
        org.joda.time.Minutes minutes57 = minutes55.negated();
        java.lang.String str58 = minutes55.toString();
        org.joda.time.Minutes minutes60 = minutes55.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (byte) 0);
        boolean boolean65 = minutes60.equals((java.lang.Object) minutes62);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes67 = minutes66.negated();
        org.joda.time.DurationFieldType durationFieldType68 = minutes66.getFieldType();
        boolean boolean69 = minutes60.isSupported(durationFieldType68);
        int int70 = minutes52.get(durationFieldType68);
        boolean boolean71 = minutes26.equals((java.lang.Object) minutes52);
        org.joda.time.Minutes minutes72 = minutes21.minus(minutes26);
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.minutesIn(readableInterval73);
        org.joda.time.Minutes minutes75 = minutes26.minus(minutes74);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT2147483647M" + "'", str58, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 36 + "'", int70 == 36);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes10 = minutes8.minus(1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT-2147483648M");
        org.joda.time.Weeks weeks13 = minutes12.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Minutes cannot be compared to class org.joda.time.Weeks");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes4);
        boolean boolean9 = minutes3.isLessThan(minutes8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        org.joda.time.Minutes minutes19 = minutes12.plus((-1));
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod21 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes22.plus(0);
        int int27 = minutes20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes22);
        org.joda.time.Minutes minutes29 = minutes22.plus((int) ' ');
        java.lang.String str30 = minutes22.toString();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean33 = minutes22.isLessThan(minutes32);
        boolean boolean34 = minutes19.isLessThan(minutes22);
        org.joda.time.Minutes minutes35 = minutes3.minus(minutes19);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.ZERO;
        int int37 = minutes35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes36);
        org.joda.time.Minutes minutes39 = minutes35.minus(2147483647);
        org.joda.time.Minutes minutes40 = null;
        boolean boolean41 = minutes35.isGreaterThan(minutes40);
        boolean boolean42 = minutes0.isGreaterThan(minutes40);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2M" + "'", str30, "PT2M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes0.plus((int) (short) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        boolean boolean11 = minutes7.isGreaterThan(minutes10);
        org.joda.time.MutablePeriod mutablePeriod12 = minutes10.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes10.get(durationFieldType13);
        int int15 = minutes10.size();
        boolean boolean16 = minutes2.isGreaterThan(minutes10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod4 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes5.plus(0);
        int int10 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Minutes minutes12 = minutes5.plus((int) ' ');
        org.joda.time.Period period13 = minutes5.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod14 = minutes5.toMutablePeriod();
        int int15 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Period period16 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = minutes28.plus(minutes31);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes35.plus(0);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = minutes43.getFieldType();
        int int47 = minutes42.get(durationFieldType46);
        org.joda.time.Minutes minutes49 = minutes42.plus((-1));
        org.joda.time.Minutes minutes51 = minutes42.minus((int) (short) 10);
        org.joda.time.Minutes minutes53 = minutes51.dividedBy((-2147483648));
        org.joda.time.Minutes minutes54 = minutes39.plus(minutes53);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType56 = minutes55.getPeriodType();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes57.negated();
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        java.lang.String str61 = minutes57.toString();
        boolean boolean62 = minutes55.isGreaterThan(minutes57);
        boolean boolean63 = minutes39.isLessThan(minutes57);
        org.joda.time.PeriodType periodType64 = minutes57.getPeriodType();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes66.plus(0);
        org.joda.time.DurationFieldType durationFieldType69 = minutes68.getFieldType();
        boolean boolean70 = minutes57.isSupported(durationFieldType69);
        org.joda.time.Duration duration71 = minutes57.toStandardDuration();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType73 = minutes72.getPeriodType();
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes75 = minutes74.negated();
        org.joda.time.Minutes minutes76 = minutes74.negated();
        org.joda.time.DurationFieldType durationFieldType77 = minutes74.getFieldType();
        java.lang.String str78 = minutes74.toString();
        boolean boolean79 = minutes72.isGreaterThan(minutes74);
        org.joda.time.Minutes minutes80 = minutes74.negated();
        boolean boolean81 = minutes57.isGreaterThan(minutes80);
        org.joda.time.Minutes minutes83 = minutes80.plus((int) (short) -1);
        java.lang.String str84 = minutes83.toString();
        boolean boolean85 = minutes28.isGreaterThan(minutes83);
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes88 = minutes86.dividedBy((int) 'a');
        org.joda.time.Minutes minutes90 = minutes88.multipliedBy((-12));
        org.joda.time.Minutes minutes91 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes92 = minutes91.negated();
        org.joda.time.Minutes minutes93 = minutes91.negated();
        org.joda.time.DurationFieldType durationFieldType94 = minutes91.getFieldType();
        boolean boolean95 = minutes90.isSupported(durationFieldType94);
        boolean boolean96 = minutes28.isGreaterThan(minutes90);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2) + "'", int47 == (-2));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT2147483647M" + "'", str61, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT2147483647M" + "'", str78, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "PT-2147483648M" + "'", str84, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertNotNull(minutes92);
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes15 = minutes13.plus((int) (short) 10);
        org.joda.time.Period period16 = minutes13.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = minutes13.getFieldType(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.minutes((int) ' ');
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        boolean boolean15 = minutes4.isSupported(durationFieldType13);
        int int16 = minutes4.getMinutes();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        java.lang.String str25 = minutes21.toString();
        boolean boolean26 = minutes19.isGreaterThan(minutes21);
        boolean boolean27 = minutes18.equals((java.lang.Object) minutes19);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        org.joda.time.Minutes minutes32 = minutes28.minus(minutes31);
        org.joda.time.DurationFieldType durationFieldType33 = minutes31.getFieldType();
        org.joda.time.PeriodType periodType34 = minutes31.getPeriodType();
        boolean boolean35 = minutes0.isLessThan(minutes31);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds36 = minutes0.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483647M" + "'", str25, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes0.plus(minutes10);
        org.joda.time.Period period21 = minutes20.toPeriod();
        org.joda.time.Minutes minutes23 = minutes20.dividedBy(4);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes15 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes17 = minutes13.plus((int) (short) 10);
        int int18 = minutes13.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        java.lang.Class<?> wildcardClass2 = mutablePeriod1.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.Duration duration14 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        boolean boolean23 = minutes17.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes36.plus(0);
        int int41 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes36);
        org.joda.time.Minutes minutes43 = minutes36.plus((int) ' ');
        java.lang.String str44 = minutes36.toString();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean47 = minutes36.isLessThan(minutes46);
        boolean boolean48 = minutes33.isLessThan(minutes36);
        org.joda.time.Minutes minutes49 = minutes17.minus(minutes33);
        org.joda.time.MutablePeriod mutablePeriod50 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod52 = minutes51.toMutablePeriod();
        boolean boolean53 = minutes17.isLessThan(minutes51);
        org.joda.time.Minutes minutes55 = minutes17.plus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType56 = minutes55.getFieldType();
        org.joda.time.Minutes minutes57 = minutes2.plus(minutes55);
        org.joda.time.Period period58 = minutes55.toPeriod();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = minutes62.get(durationFieldType63);
        org.joda.time.MutablePeriod mutablePeriod65 = minutes62.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes62);
        boolean boolean67 = minutes61.isLessThan(minutes66);
        int int68 = minutes61.getMinutes();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean71 = minutes61.isLessThan(minutes70);
        boolean boolean72 = minutes55.isGreaterThan(minutes61);
        org.joda.time.PeriodType periodType73 = minutes61.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2M" + "'", str44, "PT2M");
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-2) + "'", int68 == (-2));
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(periodType73);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        int int26 = minutes11.getMinutes();
        org.joda.time.Minutes minutes27 = minutes11.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes29.minus((int) (short) 1);
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy(0);
        org.joda.time.Duration duration34 = minutes31.toStandardDuration();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.DurationFieldType durationFieldType37 = minutes35.getFieldType();
        int int38 = minutes31.get(durationFieldType37);
        boolean boolean39 = minutes28.isSupported(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType41 = minutes28.getFieldType((int) (short) 0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483646 + "'", int38 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(durationFieldType41);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        boolean boolean8 = minutes4.isGreaterThan(minutes7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes14 = minutes12.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) 'a');
        org.joda.time.Minutes minutes19 = minutes15.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType20 = minutes19.getFieldType();
        boolean boolean21 = minutes12.isSupported(durationFieldType20);
        org.joda.time.Period period22 = minutes12.toPeriod();
        org.joda.time.Minutes minutes24 = minutes12.minus(0);
        java.lang.String str25 = minutes24.toString();
        int int26 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes24);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT-2147483647M" + "'", str25, "PT-2147483647M");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        int int4 = minutes2.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.dividedBy(2);
        int int10 = minutes7.size();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        int int21 = minutes20.size();
        org.joda.time.Minutes minutes23 = minutes20.minus(0);
        org.joda.time.Minutes minutes24 = minutes7.plus(minutes20);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.joda.time.Minutes minutes28 = minutes26.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes31 = minutes29.dividedBy((int) 'a');
        org.joda.time.Minutes minutes33 = minutes29.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes26.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes26.getFieldType();
        boolean boolean37 = minutes20.equals((java.lang.Object) minutes26);
        org.joda.time.Minutes minutes38 = minutes6.plus(minutes26);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes42 = minutes39.plus(minutes41);
        org.joda.time.Minutes minutes44 = minutes42.plus((int) 'a');
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.Minutes minutes47 = minutes45.negated();
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        java.lang.String str49 = minutes45.toString();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes51 = minutes50.negated();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes50);
        int int53 = minutes50.size();
        org.joda.time.MutablePeriod mutablePeriod54 = minutes50.toMutablePeriod();
        boolean boolean55 = minutes45.equals((java.lang.Object) minutes50);
        org.joda.time.DurationFieldType durationFieldType57 = minutes50.getFieldType((int) (short) 0);
        int int58 = minutes44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes50);
        boolean boolean59 = minutes38.equals((java.lang.Object) int58);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT2147483647M" + "'", str49, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.THREE;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes11.plus(minutes15);
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes17.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes19.negated();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = minutes53.plus(0);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes60 = minutes58.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = minutes61.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = minutes61.getFieldType();
        int int65 = minutes60.get(durationFieldType64);
        org.joda.time.Minutes minutes67 = minutes60.plus((-1));
        org.joda.time.Minutes minutes69 = minutes60.minus((int) (short) 10);
        org.joda.time.Minutes minutes71 = minutes69.dividedBy((-2147483648));
        org.joda.time.Minutes minutes72 = minutes57.plus(minutes71);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes75 = minutes73.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = minutes76.get(durationFieldType77);
        org.joda.time.MutablePeriod mutablePeriod79 = minutes76.toMutablePeriod();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes76);
        boolean boolean81 = minutes75.isLessThan(minutes80);
        org.joda.time.DurationFieldType durationFieldType82 = minutes80.getFieldType();
        boolean boolean83 = minutes72.isSupported(durationFieldType82);
        boolean boolean84 = minutes19.isSupported(durationFieldType82);
        org.joda.time.Minutes minutes85 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-2) + "'", int65 == (-2));
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(minutes85);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes7.getFieldType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        int int13 = minutes12.getMinutes();
        org.joda.time.DurationFieldType durationFieldType14 = minutes12.getFieldType();
        boolean boolean15 = minutes7.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2147483647) + "'", int13 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        org.joda.time.PeriodType periodType29 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes31.plus(0);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes22.isSupported(durationFieldType34);
        org.joda.time.Duration duration36 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType38 = minutes37.getPeriodType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = minutes39.negated();
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        java.lang.String str43 = minutes39.toString();
        boolean boolean44 = minutes37.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes45 = minutes39.negated();
        boolean boolean46 = minutes22.isGreaterThan(minutes45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2147483647M" + "'", str43, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes10 = minutes5.multipliedBy(100);
        org.joda.time.Minutes minutes12 = minutes5.dividedBy((int) (short) 1);
        int int13 = minutes5.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = minutes0.negated();
        org.joda.time.Minutes minutes6 = minutes4.minus(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Minutes minutes12 = minutes4.plus((int) (short) 0);
        boolean boolean13 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = minutes14.negated();
        boolean boolean17 = minutes4.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes19 = minutes14.dividedBy((int) (short) 1);
        org.joda.time.Minutes minutes21 = minutes19.dividedBy((int) (short) 10);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Weeks weeks24 = minutes22.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Minutes cannot be compared to class org.joda.time.Weeks");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes8 = minutes6.minus((int) (byte) 0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        java.lang.String str12 = minutes9.toString();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = minutes13.getFieldType();
        boolean boolean15 = minutes9.isSupported(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes9.getFieldType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        org.joda.time.Minutes minutes26 = minutes19.plus((-1));
        org.joda.time.Minutes minutes28 = minutes19.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes9.plus(minutes19);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((-12));
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes32.minus((int) (short) 1);
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy(0);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes39 = minutes37.dividedBy((int) 'a');
        org.joda.time.Minutes minutes41 = minutes37.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType42 = minutes41.getFieldType();
        boolean boolean43 = minutes34.isSupported(durationFieldType42);
        boolean boolean44 = minutes31.isSupported(durationFieldType42);
        int int45 = minutes19.get(durationFieldType42);
        int int46 = minutes6.get(durationFieldType42);
        java.lang.String str47 = minutes6.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2147483647M" + "'", str12, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2147483648) + "'", int46 == (-2147483648));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT-2147483648M" + "'", str47, "PT-2147483648M");
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        int int26 = minutes11.getMinutes();
        int int27 = minutes11.size();
        org.joda.time.Period period28 = minutes11.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes30 = minutes11.minus((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 4");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes13.getFieldType();
        int int16 = minutes13.getMinutes();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes17.minus((int) (short) 1);
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy(0);
        org.joda.time.Minutes minutes23 = minutes21.plus((-2147483648));
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        boolean boolean25 = minutes21.isGreaterThan(minutes24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes24.getFieldType();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutes((int) 'a');
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType32 = minutes31.getFieldType();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        java.lang.String str36 = minutes33.toString();
        int int37 = minutes33.size();
        org.joda.time.Minutes minutes39 = minutes33.minus(0);
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        boolean boolean41 = minutes31.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        org.joda.time.DurationFieldType durationFieldType43 = minutes31.getFieldType();
        boolean boolean44 = minutes28.isSupported(durationFieldType43);
        org.joda.time.Minutes minutes45 = minutes24.minus(minutes28);
        boolean boolean46 = minutes13.equals((java.lang.Object) minutes45);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2147483647M" + "'", str36, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) '4');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.THREE;
        int int6 = minutes5.size();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        int int14 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes9.plus((int) ' ');
        int int17 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes19 = minutes16.minus((int) (byte) 0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.parseMinutes("PT0M");
        boolean boolean22 = minutes19.isLessThan(minutes21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes19.getFieldType();
        boolean boolean24 = minutes0.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.PeriodType periodType5 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType9 = minutes8.getFieldType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        java.lang.String str13 = minutes10.toString();
        int int14 = minutes10.size();
        org.joda.time.Minutes minutes16 = minutes10.minus(0);
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        boolean boolean18 = minutes8.isGreaterThan(minutes16);
        org.joda.time.Period period19 = minutes16.toPeriod();
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes16);
        org.joda.time.PeriodType periodType21 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Duration duration3 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        int int8 = minutes6.getMinutes();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        org.joda.time.Minutes minutes19 = minutes12.plus((-1));
        boolean boolean20 = minutes9.isGreaterThan(minutes12);
        org.joda.time.DurationFieldType durationFieldType21 = minutes12.getFieldType();
        org.joda.time.PeriodType periodType22 = minutes12.getPeriodType();
        boolean boolean23 = minutes6.equals((java.lang.Object) minutes12);
        int int24 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType26 = minutes0.getFieldType((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }
}

