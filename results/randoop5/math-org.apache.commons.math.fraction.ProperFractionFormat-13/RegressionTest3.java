import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat10.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        fractionFormat22.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        fractionFormat22.setDenominatorFormat(numberFormat32);
        java.lang.Object obj35 = numberFormat32.parseObject("1 / 1");
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = properFractionFormat39.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj44 = properFractionFormat39.clone();
        java.lang.Object obj45 = properFractionFormat39.clone();
        java.text.NumberFormat numberFormat46 = properFractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat36, numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat21, numberFormat46);
        properFractionFormat2.setWholeFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getWholeFormat();
        properFractionFormat2.setWholeFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        properFractionFormat2.setWholeFormat(numberFormat15);
        java.lang.Object obj17 = numberFormat15.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction50 = properFractionFormat48.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat53.getWholeFormat();
        properFractionFormat48.setNumeratorFormat(numberFormat58);
        java.text.ParsePosition parsePosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = properFractionFormat48.parseObject("-1", parsePosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.lang.Object obj18 = numberFormat16.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.lang.String str33 = numberFormat31.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        properFractionFormat36.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat51);
        properFractionFormat36.setWholeFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        fractionFormat54.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        fractionFormat54.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat54.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat73.getWholeFormat();
        properFractionFormat70.setDenominatorFormat(numberFormat79);
        properFractionFormat36.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat31, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        properFractionFormat84.setWholeFormat(numberFormat86);
        fractionFormat0.setDenominatorFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.Fraction fraction95 = properFractionFormat93.parse("10");
        java.text.NumberFormat numberFormat96 = properFractionFormat93.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1" + "'", str33, "1");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction5 = properFractionFormat2.parse("-1 0 / 1");
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1 / 1" + "'", str6, "-1 / 1");
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat3.parseObject("100 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat3.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat43.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat62.getWholeFormat();
        properFractionFormat59.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat42, numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction79 = properFractionFormat76.parse("10 / 1");
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3, numberFormat72, numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getWholeFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        properFractionFormat21.setWholeFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        properFractionFormat34.setWholeFormat(numberFormat36);
        properFractionFormat21.setWholeFormat(numberFormat36);
        java.lang.String str40 = numberFormat36.format((java.lang.Object) (short) 10);
        properFractionFormat16.setNumeratorFormat(numberFormat36);
        java.lang.Object obj42 = properFractionFormat16.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "10" + "'", str40, "10");
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        fractionFormat31.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        fractionFormat37.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        fractionFormat37.setDenominatorFormat(numberFormat47);
        java.lang.Object obj50 = numberFormat47.parseObject("1 / 1");
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = properFractionFormat54.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj59 = properFractionFormat54.clone();
        java.lang.Object obj60 = properFractionFormat54.clone();
        java.text.NumberFormat numberFormat61 = properFractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat51, numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat34, numberFormat47);
        properFractionFormat0.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat65 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat19.getNumeratorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat41.getNumeratorFormat();
        properFractionFormat38.setDenominatorFormat(numberFormat47);
        properFractionFormat16.setNumeratorFormat(numberFormat47);
        java.text.NumberFormat numberFormat50 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properFractionFormat16.setWholeFormat(numberFormat52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: whole format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        fractionFormat5.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        fractionFormat5.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat5.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat24.getWholeFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat0.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat0.parse("-1 / 1");
        java.lang.String str37 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction36);
        java.lang.Class<?> wildcardClass38 = fraction36.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 / 1" + "'", str37, "-1 / 1");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat0.parse("1");
        java.lang.Object obj15 = fractionFormat0.parseObject("-1");
        java.lang.Object obj17 = fractionFormat0.parseObject("1");
        java.text.NumberFormat numberFormat18 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat0.parse("1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction20);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat19.getNumeratorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat41.getNumeratorFormat();
        properFractionFormat38.setDenominatorFormat(numberFormat47);
        properFractionFormat16.setNumeratorFormat(numberFormat47);
        java.text.NumberFormat numberFormat50 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        properFractionFormat61.setWholeFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat68.getDenominatorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57, numberFormat63, numberFormat72);
        java.lang.Object obj76 = numberFormat63.clone();
        properFractionFormat16.setDenominatorFormat(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.lang.Object obj18 = numberFormat16.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.lang.String str33 = numberFormat31.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        properFractionFormat36.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat51);
        properFractionFormat36.setWholeFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        fractionFormat54.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        fractionFormat54.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat54.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat73.getWholeFormat();
        properFractionFormat70.setDenominatorFormat(numberFormat79);
        properFractionFormat36.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat31, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        properFractionFormat84.setWholeFormat(numberFormat86);
        fractionFormat0.setDenominatorFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.text.NumberFormat numberFormat94 = properFractionFormat93.getWholeFormat();
        java.lang.Object obj95 = properFractionFormat93.clone();
        java.text.ParsePosition parsePosition97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction98 = properFractionFormat93.parse("10", parsePosition97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1" + "'", str33, "1");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat19.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat2.parse("-1 / 1");
        java.lang.String str30 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 / 1" + "'", str30, "-1 / 1");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.String str8 = properFractionFormat6.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat9 = properFractionFormat6.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat10.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        fractionFormat13.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        fractionFormat13.setDenominatorFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat13.getNumeratorFormat();
        java.lang.String str27 = numberFormat25.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        properFractionFormat30.setWholeFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        properFractionFormat43.setWholeFormat(numberFormat45);
        properFractionFormat30.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat67.getWholeFormat();
        properFractionFormat64.setDenominatorFormat(numberFormat73);
        properFractionFormat30.setWholeFormat(numberFormat73);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat25, numberFormat73);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.Object obj84 = numberFormat80.clone();
        properFractionFormat78.setWholeFormat(numberFormat80);
        properFractionFormat3.setDenominatorFormat(numberFormat80);
        java.text.NumberFormat numberFormat87 = properFractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1 0 / 1" + "'", str8, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        properFractionFormat24.setWholeFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat2.parse("-1 / 1");
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction10);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        fractionFormat65.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        fractionFormat65.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat79, numberFormat81);
        java.lang.Object obj87 = numberFormat79.parseObject("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10L + "'", obj87, 10L);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getDenominatorFormat();
        properFractionFormat31.setNumeratorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat31.getDenominatorFormat();
        properFractionFormat28.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat47.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction66 = properFractionFormat63.parse("1 / 1");
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat45, numberFormat67);
        java.lang.StringBuffer stringBuffer69 = null;
        java.text.FieldPosition fieldPosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer71 = properFractionFormat2.format((java.lang.Object) numberFormat45, stringBuffer69, fieldPosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        fractionFormat5.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        fractionFormat5.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat5.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.text.NumberFormat numberFormat27 = properFractionFormat26.getNumeratorFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.lang.Object obj46 = numberFormat44.parseObject("1 / 1");
        properFractionFormat34.setWholeFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        properFractionFormat50.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        fractionFormat62.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        fractionFormat62.setDenominatorFormat(numberFormat72);
        java.lang.Object obj75 = numberFormat72.parseObject("1 / 1");
        java.text.NumberFormat numberFormat76 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.lang.String str81 = properFractionFormat79.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = properFractionFormat79.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj84 = properFractionFormat79.clone();
        java.lang.Object obj85 = properFractionFormat79.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72, numberFormat76, numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat61, numberFormat86);
        properFractionFormat34.setWholeFormat(numberFormat61);
        java.text.NumberFormat numberFormat90 = properFractionFormat34.getWholeFormat();
        properFractionFormat2.setDenominatorFormat(numberFormat90);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat90);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1L + "'", obj46, 1L);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1L + "'", obj75, 1L);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "-1 0 / 1" + "'", str81, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.lang.Object obj10 = properFractionFormat2.parseObject("1");
        java.lang.Object obj12 = properFractionFormat2.parseObject("10 / 1");
        java.text.NumberFormat numberFormat13 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        fractionFormat31.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        fractionFormat37.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        fractionFormat37.setDenominatorFormat(numberFormat47);
        java.lang.Object obj50 = numberFormat47.parseObject("1 / 1");
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = properFractionFormat54.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj59 = properFractionFormat54.clone();
        java.lang.Object obj60 = properFractionFormat54.clone();
        java.text.NumberFormat numberFormat61 = properFractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat51, numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat34, numberFormat47);
        properFractionFormat0.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction66 = properFractionFormat0.parse("-1");
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fraction66);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        properFractionFormat18.setWholeFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        java.lang.Object obj43 = numberFormat40.parseObject("1 / 1");
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = properFractionFormat47.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj52 = properFractionFormat47.clone();
        java.lang.Object obj53 = properFractionFormat47.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat44, numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat29, numberFormat54);
        properFractionFormat2.setWholeFormat(numberFormat29);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        org.apache.commons.math.fraction.Fraction fraction60 = properFractionFormat58.parse("-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1L + "'", obj43, 1L);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        fractionFormat65.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        fractionFormat65.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat79, numberFormat81);
        java.lang.Object obj87 = properFractionFormat85.parseObject("10 / 1");
        java.lang.Object obj88 = properFractionFormat85.clone();
        java.lang.Class<?> wildcardClass89 = properFractionFormat85.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        java.text.NumberFormat numberFormat49 = properFractionFormat48.getNumeratorFormat();
        java.lang.Object obj50 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction54 = properFractionFormat48.parse("1 0 / 1", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = numberFormat1.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat4.parse("100", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 10L + "'", obj3, 10L);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("-1 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj13 = fractionFormat0.parseObject("100 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction50 = null;
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = properFractionFormat49.format(fraction50, stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str15 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str16 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 / 1" + "'", str13, "10 / 1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10 / 1" + "'", str14, "10 / 1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10 / 1" + "'", str15, "10 / 1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10 / 1" + "'", str16, "10 / 1");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        properFractionFormat32.setWholeFormat(numberFormat34);
        fractionFormat28.setNumeratorFormat(numberFormat34);
        properFractionFormat27.setWholeFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        org.apache.commons.math.fraction.Fraction fraction48 = properFractionFormat40.parse("-1 0 / 1");
        java.lang.String str49 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str50 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str51 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str52 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str53 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str54 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str55 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str56 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.StringBuffer stringBuffer57 = null;
        java.text.FieldPosition fieldPosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer59 = properFractionFormat27.format(fraction48, stringBuffer57, fieldPosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 / 1" + "'", str49, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 / 1" + "'", str50, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 / 1" + "'", str51, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 / 1" + "'", str52, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 / 1" + "'", str53, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 / 1" + "'", str54, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 / 1" + "'", str55, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 / 1" + "'", str56, "-1 / 1");
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat40.getWholeFormat();
        java.lang.Object obj44 = numberFormat42.parseObject("-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (-1L) + "'", obj44, (-1L));
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        java.lang.String str5 = properFractionFormat2.format((java.lang.Object) (-1.0f));
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = properFractionFormat2.parse("-1", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat3.parse("-1 0 / 1");
        java.lang.String str53 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction52);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 / 1" + "'", str53, "-1 / 1");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat9.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        properFractionFormat38.setWholeFormat(numberFormat40);
        fractionFormat34.setNumeratorFormat(numberFormat40);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator43 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) fractionFormat34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        properFractionFormat33.setWholeFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.lang.Object obj58 = numberFormat55.parseObject("1 / 1");
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.lang.Object obj68 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat69 = properFractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55, numberFormat59, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat44, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat80);
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat81.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getNumeratorFormat();
        properFractionFormat25.setWholeFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat25.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("-1 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat25.setNumeratorFormat(numberFormat37);
        properFractionFormat16.setDenominatorFormat(numberFormat37);
        properFractionFormat13.setNumeratorFormat(numberFormat37);
        java.text.ParsePosition parsePosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction43 = properFractionFormat13.parse("10", parsePosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat28.parse("1");
        java.lang.String str42 = numberFormat26.format((java.lang.Object) fraction41);
        java.lang.String str43 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1" + "'", str42, "1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1 / 1" + "'", str43, "1 / 1");
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.Object obj18 = properFractionFormat16.parseObject("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat16.formatToCharacterIterator((java.lang.Object) numberFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        fractionFormat12.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = properFractionFormat35.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj40 = properFractionFormat35.clone();
        java.lang.Object obj41 = properFractionFormat35.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction46 = properFractionFormat44.parse("10 0 / 1");
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.Object obj49 = properFractionFormat48.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1L + "'", obj31, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction32 = properFractionFormat9.parse("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat33.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.text.NumberFormat numberFormat55 = properFractionFormat54.getNumeratorFormat();
        properFractionFormat49.setDenominatorFormat(numberFormat55);
        java.text.NumberFormat numberFormat57 = properFractionFormat49.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat49.getNumeratorFormat();
        java.lang.Object obj60 = numberFormat58.parseObject("1 / 1");
        properFractionFormat9.setWholeFormat(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1L + "'", obj60, 1L);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat9.parse("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction11);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getWholeFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = properFractionFormat2.parseObject("1 0 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getDenominatorFormat();
        java.lang.Class<?> wildcardClass14 = properFractionFormat10.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("1 / 1");
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = properFractionFormat33.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj38 = properFractionFormat33.clone();
        java.lang.Object obj39 = properFractionFormat33.clone();
        java.text.NumberFormat numberFormat40 = properFractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26, numberFormat30, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getWholeFormat();
        java.lang.Object obj52 = numberFormat50.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        java.lang.Object obj63 = numberFormat61.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat50, numberFormat61);
        org.apache.commons.math.fraction.Fraction fraction66 = properFractionFormat64.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        properFractionFormat64.setNumeratorFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        properFractionFormat2.setWholeFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (-1L) + "'", obj52, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1L) + "'", obj63, (-1L));
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getNumeratorFormat();
        java.lang.Object obj44 = numberFormat42.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getWholeFormat();
        properFractionFormat33.setWholeFormat(numberFormat48);
        java.text.NumberFormat numberFormat50 = properFractionFormat33.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat33.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1L + "'", obj44, 1L);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.Fraction fraction4 = properFractionFormat2.parse("10 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        properFractionFormat20.setWholeFormat(numberFormat22);
        properFractionFormat7.setWholeFormat(numberFormat22);
        properFractionFormat2.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat26 = properFractionFormat2.getWholeFormat();
        java.lang.Class<?> wildcardClass27 = numberFormat26.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = properFractionFormat35.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj40 = properFractionFormat35.clone();
        java.lang.Object obj41 = properFractionFormat35.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat46.getWholeFormat();
        java.lang.Object obj54 = numberFormat52.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat57.getWholeFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat57.getWholeFormat();
        java.lang.Object obj65 = numberFormat63.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat52, numberFormat63);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.Fraction fraction69 = properFractionFormat67.parse("10");
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat78.getDenominatorFormat();
        java.text.NumberFormat numberFormat83 = properFractionFormat78.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat78.getNumeratorFormat();
        properFractionFormat75.setDenominatorFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat88 = fractionFormat87.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        java.lang.String str91 = properFractionFormat89.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat92 = properFractionFormat89.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70, numberFormat86, numberFormat92);
        properFractionFormat0.setWholeFormat(numberFormat70);
        java.text.NumberFormat numberFormat95 = properFractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat96 = properFractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat97 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat96);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1L + "'", obj31, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1L) + "'", obj54, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1L) + "'", obj65, (-1L));
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-1 0 / 1" + "'", str91, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat9.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = properFractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction38 = properFractionFormat25.parse("-1");
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = properFractionFormat2.format(fraction38, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fraction38);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = properFractionFormat12.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj17 = properFractionFormat12.clone();
        java.lang.Object obj18 = properFractionFormat12.clone();
        java.text.NumberFormat numberFormat19 = properFractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getDenominatorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.lang.Object obj42 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        fractionFormat57.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        fractionFormat57.setDenominatorFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat57.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat39, numberFormat75);
        fractionFormat0.setDenominatorFormat(numberFormat75);
        org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat0.parse("-1 / 1");
        java.text.ParsePosition parsePosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = fractionFormat0.parseObject("1 0 / 1", parsePosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1L + "'", obj42, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fraction79);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        java.text.NumberFormat numberFormat91 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = properFractionFormat2.parse("1 / 1");
        java.text.NumberFormat numberFormat94 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getNumeratorFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("1 / 1");
        properFractionFormat35.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat49 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat54.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = properFractionFormat63.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj68 = properFractionFormat63.clone();
        java.lang.Object obj69 = properFractionFormat63.clone();
        java.text.NumberFormat numberFormat70 = properFractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getWholeFormat();
        properFractionFormat60.setWholeFormat(numberFormat72);
        properFractionFormat51.setNumeratorFormat(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10L + "'", obj32, 10L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1L + "'", obj47, 1L);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.lang.Object obj41 = numberFormat40.clone();
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat40, numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        java.lang.Object obj47 = properFractionFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat48.getNumeratorFormat();
        properFractionFormat45.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat44.clone();
        properFractionFormat16.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.text.NumberFormat numberFormat67 = properFractionFormat66.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction69 = properFractionFormat66.parse("100 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fraction69);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat16.parse("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        java.lang.Object obj43 = numberFormat41.parseObject("1 / 1");
        properFractionFormat31.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = properFractionFormat47.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat52 = properFractionFormat47.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat41, numberFormat52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = properFractionFormat16.format((java.lang.Object) properFractionFormat53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1L + "'", obj43, 1L);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        java.lang.Object obj26 = numberFormat11.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        fractionFormat27.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        fractionFormat27.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat27.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = properFractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat48.clone();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getDenominatorFormat();
        properFractionFormat46.setWholeFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat50, numberFormat52);
        java.text.NumberFormat numberFormat54 = properFractionFormat53.getDenominatorFormat();
        java.text.ParsePosition parsePosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat53.parse("100 / 1", parsePosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat54);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = properFractionFormat2.parseObject("1 0 / 1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        properFractionFormat31.setWholeFormat(numberFormat33);
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        properFractionFormat26.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        properFractionFormat26.setWholeFormat(numberFormat47);
        java.text.NumberFormat numberFormat49 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat26.parse("1");
        java.lang.String str52 = numberFormat15.format((java.lang.Object) fraction51);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1L + "'", obj25, 1L);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1" + "'", str52, "1");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.lang.Object obj2 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.Object obj5 = properFractionFormat4.clone();
        java.lang.Object obj6 = properFractionFormat4.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat65.getDenominatorFormat();
        properFractionFormat57.setNumeratorFormat(numberFormat69);
        java.text.NumberFormat numberFormat71 = properFractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat54, numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj92 = properFractionFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = properFractionFormat12.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj17 = properFractionFormat12.clone();
        java.lang.Object obj18 = properFractionFormat12.clone();
        java.text.NumberFormat numberFormat19 = properFractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getDenominatorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.lang.Object obj42 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        fractionFormat57.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        fractionFormat57.setDenominatorFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat57.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat39, numberFormat75);
        fractionFormat0.setDenominatorFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1L + "'", obj42, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.lang.Object obj9 = fractionFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat38);
        fractionFormat7.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        properFractionFormat6.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat58 = properFractionFormat6.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.Fraction fraction6 = properFractionFormat4.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj14 = properFractionFormat9.clone();
        java.lang.Object obj15 = properFractionFormat9.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = properFractionFormat9.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat18 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat4.setNumeratorFormat(numberFormat18);
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat4.parse("10", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat9.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        properFractionFormat12.setWholeFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        fractionFormat24.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        fractionFormat24.setDenominatorFormat(numberFormat34);
        java.lang.Object obj37 = numberFormat34.parseObject("1 / 1");
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = properFractionFormat41.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj46 = properFractionFormat41.clone();
        java.lang.Object obj47 = properFractionFormat41.clone();
        java.text.NumberFormat numberFormat48 = properFractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat38, numberFormat48);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat23, numberFormat48);
        java.lang.Object obj51 = properFractionFormat50.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat52.getNumeratorFormat();
        java.lang.Object obj54 = properFractionFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        fractionFormat55.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        fractionFormat55.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat55.getNumeratorFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat52.getNumeratorFormat();
        properFractionFormat50.setDenominatorFormat(numberFormat70);
        fractionFormat8.setNumeratorFormat(numberFormat70);
        properFractionFormat2.setNumeratorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        fractionFormat74.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getWholeFormat();
        fractionFormat74.setDenominatorFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction88 = fractionFormat74.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat89);
        java.text.NumberFormat numberFormat91 = properFractionFormat90.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = properFractionFormat90.parse("1 / 1");
        java.lang.Class<?> wildcardClass94 = properFractionFormat90.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator95 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) wildcardClass94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1L + "'", obj37, 1L);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat57 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat56.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        properFractionFormat10.setWholeFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getDenominatorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat12, numberFormat21);
        java.lang.Object obj25 = numberFormat12.clone();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat27.getNumeratorFormat();
        java.lang.Object obj29 = properFractionFormat27.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat0.setNumeratorFormat(numberFormat30);
        java.lang.Object obj32 = numberFormat30.clone();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        properFractionFormat40.setWholeFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        fractionFormat52.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        fractionFormat52.setDenominatorFormat(numberFormat62);
        java.lang.Object obj65 = numberFormat62.parseObject("1 / 1");
        java.text.NumberFormat numberFormat66 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = properFractionFormat69.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj74 = properFractionFormat69.clone();
        java.lang.Object obj75 = properFractionFormat69.clone();
        java.text.NumberFormat numberFormat76 = properFractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62, numberFormat66, numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46, numberFormat51, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = properFractionFormat81.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj86 = properFractionFormat81.clone();
        java.text.NumberFormat numberFormat87 = properFractionFormat81.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat46, numberFormat87);
        org.apache.commons.math.fraction.Fraction fraction90 = properFractionFormat88.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat91 = properFractionFormat88.getWholeFormat();
        properFractionFormat9.setNumeratorFormat(numberFormat91);
        org.apache.commons.math.fraction.Fraction fraction94 = properFractionFormat9.parse("1");
        java.text.NumberFormat numberFormat95 = properFractionFormat9.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1L + "'", obj65, 1L);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj10 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getDenominatorFormat();
        java.lang.Object obj13 = properFractionFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat18 = properFractionFormat17.getWholeFormat();
        properFractionFormat11.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat11.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = properFractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        fractionFormat26.setDenominatorFormat(numberFormat36);
        java.lang.Object obj39 = numberFormat36.parseObject("1 / 1");
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = properFractionFormat43.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj48 = properFractionFormat43.clone();
        java.lang.Object obj49 = properFractionFormat43.clone();
        java.text.NumberFormat numberFormat50 = properFractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat40, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat54.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat54.getWholeFormat();
        java.lang.Object obj62 = numberFormat60.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat65.getWholeFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat65.getWholeFormat();
        java.lang.Object obj73 = numberFormat71.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat60, numberFormat71);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        properFractionFormat24.setWholeFormat(numberFormat60);
        fractionFormat0.setDenominatorFormat(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1L + "'", obj39, 1L);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (-1L) + "'", obj62, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1L) + "'", obj73, (-1L));
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        properFractionFormat33.setWholeFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.lang.Object obj58 = numberFormat55.parseObject("1 / 1");
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.lang.Object obj68 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat69 = properFractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55, numberFormat59, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat44, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat80);
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat81.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getNumeratorFormat();
        properFractionFormat25.setWholeFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat25.getWholeFormat();
        java.text.NumberFormat numberFormat88 = properFractionFormat25.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat2.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getDenominatorFormat();
        properFractionFormat2.setWholeFormat(numberFormat19);
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat2.parse("1");
        java.lang.Object obj24 = properFractionFormat2.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        properFractionFormat24.setWholeFormat(numberFormat26);
        properFractionFormat11.setWholeFormat(numberFormat26);
        java.lang.Object obj30 = properFractionFormat11.parseObject("10");
        java.text.NumberFormat numberFormat31 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        fractionFormat32.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        fractionFormat32.setDenominatorFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat32.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat32.getNumeratorFormat();
        properFractionFormat11.setDenominatorFormat(numberFormat47);
        properFractionFormat2.setWholeFormat(numberFormat47);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat2.parse("1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction51);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        properFractionFormat73.setNumeratorFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.Fraction fraction80 = properFractionFormat78.parse("-1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        java.lang.String str86 = properFractionFormat84.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat87 = properFractionFormat84.getWholeFormat();
        java.text.NumberFormat numberFormat88 = properFractionFormat84.getDenominatorFormat();
        fractionFormat81.setDenominatorFormat(numberFormat88);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        java.lang.Object obj92 = properFractionFormat90.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction94 = properFractionFormat90.parse("10 0 / 1");
        java.text.NumberFormat numberFormat95 = properFractionFormat90.getDenominatorFormat();
        properFractionFormat78.setDenominatorFormat(numberFormat95);
        java.text.NumberFormat numberFormat97 = properFractionFormat78.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1 0 / 1" + "'", str86, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat97);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        java.lang.Object obj13 = null;
        java.lang.StringBuffer stringBuffer14 = null;
        java.text.FieldPosition fieldPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer16 = properFractionFormat9.format(obj13, stringBuffer14, fieldPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = properFractionFormat25.clone();
        java.lang.Object obj28 = properFractionFormat25.clone();
        java.text.NumberFormat numberFormat29 = properFractionFormat25.getWholeFormat();
        java.lang.Object obj30 = properFractionFormat25.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat9.getNumeratorFormat();
        properFractionFormat6.setDenominatorFormat(numberFormat15);
        java.lang.Class<?> wildcardClass17 = properFractionFormat6.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.lang.Object obj2 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.Object obj5 = properFractionFormat4.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getNumeratorFormat();
        java.lang.Object obj29 = numberFormat27.parseObject("1 / 1");
        properFractionFormat17.setWholeFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = properFractionFormat33.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat38 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14, numberFormat27, numberFormat38);
        java.text.NumberFormat numberFormat40 = properFractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = properFractionFormat4.format((java.lang.Object) numberFormat42, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat74 = properFractionFormat73.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat78.getDenominatorFormat();
        fractionFormat75.setDenominatorFormat(numberFormat82);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.text.NumberFormat numberFormat85 = properFractionFormat84.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = numberFormat74.format((java.lang.Object) properFractionFormat84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat0.setDenominatorFormat(numberFormat11);
        java.lang.Object obj15 = fractionFormat0.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat19.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        fractionFormat35.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        fractionFormat35.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        fractionFormat47.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        fractionFormat53.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        fractionFormat53.setDenominatorFormat(numberFormat63);
        java.lang.Object obj66 = numberFormat63.parseObject("1 / 1");
        java.text.NumberFormat numberFormat67 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        java.lang.String str72 = properFractionFormat70.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = properFractionFormat70.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj75 = properFractionFormat70.clone();
        java.lang.Object obj76 = properFractionFormat70.clone();
        java.text.NumberFormat numberFormat77 = properFractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63, numberFormat67, numberFormat77);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat50, numberFormat63);
        properFractionFormat16.setDenominatorFormat(numberFormat50);
        fractionFormat0.setDenominatorFormat(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1L + "'", obj66, 1L);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1 0 / 1" + "'", str72, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = properFractionFormat9.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = properFractionFormat37.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat42 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat46.getWholeFormat();
        properFractionFormat37.setNumeratorFormat(numberFormat52);
        properFractionFormat9.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.Object obj56 = properFractionFormat55.clone();
        java.text.ParsePosition parsePosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction59 = properFractionFormat55.parse("1", parsePosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getNumeratorFormat();
        java.lang.Object obj16 = numberFormat14.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction20 = properFractionFormat17.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getNumeratorFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = properFractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        properFractionFormat17.setWholeFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        properFractionFormat43.setWholeFormat(numberFormat45);
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.text.NumberFormat numberFormat51 = properFractionFormat50.getDenominatorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat51);
        properFractionFormat3.setNumeratorFormat(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1L + "'", obj16, 1L);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.lang.Object obj10 = properFractionFormat2.parseObject("1");
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = properFractionFormat2.parseObject("1 0 / 1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getDenominatorFormat();
        properFractionFormat10.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.Fraction fraction16 = properFractionFormat10.parse("-1 / 1");
        java.text.NumberFormat numberFormat17 = properFractionFormat10.getWholeFormat();
        java.lang.Object obj18 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat19.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        properFractionFormat35.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = properFractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        java.lang.Object obj50 = numberFormat47.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat44, numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = numberFormat26.clone();
        fractionFormat23.setDenominatorFormat(numberFormat26);
        properFractionFormat21.setWholeFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.lang.Object obj38 = numberFormat37.clone();
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat37, numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat26, numberFormat41);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        properFractionFormat2.setDenominatorFormat(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.String str6 = properFractionFormat4.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat7 = properFractionFormat4.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        properFractionFormat4.setWholeFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("1 / 1");
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = properFractionFormat33.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj38 = properFractionFormat33.clone();
        java.lang.Object obj39 = properFractionFormat33.clone();
        java.text.NumberFormat numberFormat40 = properFractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26, numberFormat30, numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getNumeratorFormat();
        properFractionFormat49.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        fractionFormat60.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        fractionFormat60.setDenominatorFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction74 = fractionFormat60.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat58, numberFormat78);
        java.text.NumberFormat numberFormat80 = properFractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.text.NumberFormat numberFormat82 = properFractionFormat81.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = fractionFormat0.format((java.lang.Object) numberFormat82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1 0 / 1" + "'", str6, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        java.lang.Object obj11 = properFractionFormat9.clone();
        java.lang.Object obj13 = properFractionFormat9.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = properFractionFormat16.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat21 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat34.getDenominatorFormat();
        properFractionFormat26.setNumeratorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = properFractionFormat26.getDenominatorFormat();
        properFractionFormat23.setWholeFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = properFractionFormat23.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator43 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) numberFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj11 = properFractionFormat2.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat2.parse("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction15 = properFractionFormat2.parse("10");
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator17 = properFractionFormat2.formatToCharacterIterator(obj16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("1 / 1");
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj32 = properFractionFormat27.clone();
        java.lang.Object obj33 = properFractionFormat27.clone();
        java.text.NumberFormat numberFormat34 = properFractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat24, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat38.getWholeFormat();
        java.lang.Object obj46 = numberFormat44.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.lang.String str51 = properFractionFormat49.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat49.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat49.getWholeFormat();
        java.lang.Object obj57 = numberFormat55.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat44, numberFormat55);
        org.apache.commons.math.fraction.Fraction fraction60 = properFractionFormat58.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getDenominatorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        properFractionFormat58.setNumeratorFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        properFractionFormat2.setNumeratorFormat(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1L) + "'", obj46, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 0 / 1" + "'", str51, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1L) + "'", obj57, (-1L));
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        fractionFormat11.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        fractionFormat11.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        fractionFormat24.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        fractionFormat24.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat24.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        properFractionFormat42.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        fractionFormat54.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        fractionFormat54.setDenominatorFormat(numberFormat64);
        java.lang.Object obj67 = numberFormat64.parseObject("1 / 1");
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = properFractionFormat71.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj76 = properFractionFormat71.clone();
        java.lang.Object obj77 = properFractionFormat71.clone();
        java.text.NumberFormat numberFormat78 = properFractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64, numberFormat68, numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48, numberFormat53, numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23, numberFormat39, numberFormat78);
        fractionFormat0.setDenominatorFormat(numberFormat23);
        java.lang.Object obj83 = numberFormat23.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1L + "'", obj67, 1L);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        fractionFormat25.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        fractionFormat25.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat25.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getWholeFormat();
        properFractionFormat41.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        properFractionFormat61.setWholeFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat68.getDenominatorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57, numberFormat63, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        java.lang.Object obj84 = numberFormat83.clone();
        java.text.NumberFormat numberFormat85 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81, numberFormat83, numberFormat85);
        properFractionFormat75.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat50, numberFormat81);
        java.text.NumberFormat numberFormat89 = properFractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat89);
        java.text.NumberFormat numberFormat91 = properFractionFormat90.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getNumeratorFormat();
        java.lang.Object obj28 = numberFormat26.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.text.NumberFormat numberFormat30 = properFractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction32 = properFractionFormat29.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat40.getNumeratorFormat();
        properFractionFormat37.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        properFractionFormat29.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        properFractionFormat60.setWholeFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat67.getDenominatorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat62, numberFormat71);
        properFractionFormat29.setDenominatorFormat(numberFormat71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = numberFormat17.format((java.lang.Object) numberFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1L + "'", obj28, 1L);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        fractionFormat39.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        fractionFormat39.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = numberFormat54.clone();
        fractionFormat51.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        fractionFormat57.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        fractionFormat57.setDenominatorFormat(numberFormat67);
        java.lang.Object obj70 = numberFormat67.parseObject("1 / 1");
        java.text.NumberFormat numberFormat71 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.lang.Object obj80 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat81 = properFractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67, numberFormat71, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49, numberFormat54, numberFormat67);
        properFractionFormat31.setWholeFormat(numberFormat67);
        java.lang.Object obj85 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat31.getDenominatorFormat();
        properFractionFormat28.setDenominatorFormat(numberFormat86);
        java.text.NumberFormat numberFormat88 = properFractionFormat28.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1L + "'", obj70, 1L);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat49.getNumeratorFormat();
        java.lang.Object obj51 = properFractionFormat49.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        fractionFormat52.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        fractionFormat52.setDenominatorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat52.getNumeratorFormat();
        properFractionFormat49.setDenominatorFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        properFractionFormat2.setWholeFormat(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        properFractionFormat46.setWholeFormat(numberFormat48);
        fractionFormat42.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.Fraction fraction52 = fractionFormat42.parse("-1 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        properFractionFormat38.setNumeratorFormat(numberFormat53);
        java.text.ParsePosition parsePosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction58 = properFractionFormat38.parse("100", parsePosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj10 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getDenominatorFormat();
        java.lang.Object obj13 = properFractionFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat18 = properFractionFormat17.getWholeFormat();
        properFractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.Fraction fraction24 = properFractionFormat22.parse("10 0 / 1");
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat40.getWholeFormat();
        properFractionFormat29.setNumeratorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat26.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat26.parse("-1");
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = properFractionFormat11.format(fraction51, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction51);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj27 = numberFormat25.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat30.getNumeratorFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.lang.Object obj59 = numberFormat56.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        fractionFormat60.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        fractionFormat60.setDenominatorFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44, numberFormat56, numberFormat72);
        java.lang.Object obj74 = numberFormat72.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat34, numberFormat72);
        java.lang.Object obj77 = numberFormat72.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1L + "'", obj59, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        fractionFormat12.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = properFractionFormat35.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj40 = properFractionFormat35.clone();
        java.lang.Object obj41 = properFractionFormat35.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction46 = properFractionFormat44.parse("10 0 / 1");
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat55.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.text.NumberFormat numberFormat59 = properFractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        properFractionFormat48.setWholeFormat(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1L + "'", obj31, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1L + "'", obj57, 1L);
        org.junit.Assert.assertNotNull(numberFormat59);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat13 = properFractionFormat12.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction15 = properFractionFormat12.parse("10 / 1");
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        properFractionFormat2.setDenominatorFormat(numberFormat16);
        java.lang.Class<?> wildcardClass18 = numberFormat16.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        java.lang.String str66 = numberFormat63.format((java.lang.Object) 100.0f);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "100" + "'", str66, "100");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj10 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        properFractionFormat2.setWholeFormat(numberFormat13);
        java.lang.Object obj16 = properFractionFormat2.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = properFractionFormat49.getDenominatorFormat();
        java.lang.Object obj51 = properFractionFormat49.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("1 / 1");
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj32 = properFractionFormat27.clone();
        java.lang.Object obj33 = properFractionFormat27.clone();
        java.text.NumberFormat numberFormat34 = properFractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat24, numberFormat34);
        java.text.NumberFormat numberFormat36 = properFractionFormat35.getDenominatorFormat();
        java.lang.Object obj37 = properFractionFormat35.clone();
        java.lang.Object obj38 = properFractionFormat35.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        fractionFormat39.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        fractionFormat39.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction53 = fractionFormat39.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        fractionFormat56.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        fractionFormat56.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction70 = fractionFormat56.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat78 = properFractionFormat77.getNumeratorFormat();
        properFractionFormat72.setDenominatorFormat(numberFormat78);
        java.text.NumberFormat numberFormat80 = properFractionFormat72.getDenominatorFormat();
        properFractionFormat55.setNumeratorFormat(numberFormat80);
        properFractionFormat35.setNumeratorFormat(numberFormat80);
        java.text.NumberFormat numberFormat83 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction85 = properFractionFormat35.parse("10");
        java.lang.String str86 = numberFormat7.format((java.lang.Object) fraction85);
        java.lang.String str87 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction85);
        java.lang.String str88 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction85);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "10" + "'", str86, "10");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "10 / 1" + "'", str87, "10 / 1");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10 / 1" + "'", str88, "10 / 1");
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat10.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1");
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = properFractionFormat2.parseObject("1", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.Fraction fraction30 = properFractionFormat28.parse("10 / 1");
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getNumeratorFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("1 / 1");
        properFractionFormat35.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat49 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat50);
        java.lang.Class<?> wildcardClass52 = numberFormat24.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10L + "'", obj32, 10L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1L + "'", obj47, 1L);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj11 = properFractionFormat2.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        properFractionFormat14.setWholeFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        fractionFormat26.setDenominatorFormat(numberFormat36);
        java.lang.Object obj39 = numberFormat36.parseObject("1 / 1");
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = properFractionFormat43.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj48 = properFractionFormat43.clone();
        java.lang.Object obj49 = properFractionFormat43.clone();
        java.text.NumberFormat numberFormat50 = properFractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat40, numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        fractionFormat53.setDenominatorFormat(numberFormat55);
        properFractionFormat52.setWholeFormat(numberFormat55);
        properFractionFormat2.setNumeratorFormat(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1L + "'", obj39, 1L);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = properFractionFormat40.parse("1 / 1");
        org.apache.commons.math.fraction.Fraction fraction45 = properFractionFormat40.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator55 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) properFractionFormat48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        properFractionFormat40.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat47.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat42, numberFormat51);
        properFractionFormat9.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat56 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = properFractionFormat65.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj70 = properFractionFormat65.clone();
        java.lang.Object obj71 = properFractionFormat65.clone();
        java.text.NumberFormat numberFormat72 = properFractionFormat65.getDenominatorFormat();
        properFractionFormat61.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat57, numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = properFractionFormat15.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj20 = properFractionFormat15.clone();
        java.lang.Object obj21 = properFractionFormat15.clone();
        java.text.NumberFormat numberFormat22 = properFractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getWholeFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat29.clone();
        java.lang.Object obj31 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.Class<?> wildcardClass34 = numberFormat32.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = properFractionFormat2.format((java.lang.Object) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat13.getWholeFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        properFractionFormat25.setWholeFormat(numberFormat27);
        fractionFormat21.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat21.parse("-1 0 / 1");
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = properFractionFormat2.format(fraction34, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fraction34);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat3.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat53 = properFractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction55 = properFractionFormat3.parse("10 0 / 1");
        java.text.NumberFormat numberFormat56 = properFractionFormat3.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = properFractionFormat2.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat18 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat19.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        properFractionFormat37.setWholeFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        properFractionFormat50.setWholeFormat(numberFormat52);
        properFractionFormat37.setWholeFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        fractionFormat55.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        fractionFormat55.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat55.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat77 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat74.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        properFractionFormat71.setDenominatorFormat(numberFormat80);
        properFractionFormat37.setWholeFormat(numberFormat80);
        java.text.NumberFormat numberFormat83 = properFractionFormat37.getDenominatorFormat();
        java.lang.Object obj85 = numberFormat83.parseObject("10 / 1");
        java.lang.Object obj87 = numberFormat83.parseObject("1 / 1");
        fractionFormat19.setNumeratorFormat(numberFormat83);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator89 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) fractionFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10L + "'", obj85, 10L);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1L + "'", obj87, 1L);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction9 = properFractionFormat2.parse("-1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction9);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.lang.Object obj15 = properFractionFormat4.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat18.getNumeratorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction28 = properFractionFormat25.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat36.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        properFractionFormat25.setWholeFormat(numberFormat44);
        java.lang.Class<?> wildcardClass47 = numberFormat44.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = properFractionFormat4.format((java.lang.Object) wildcardClass47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1L + "'", obj24, 1L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("-1");
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        properFractionFormat9.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.Object obj16 = properFractionFormat15.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.lang.Object obj25 = numberFormat24.clone();
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat24, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat28.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat44.getNumeratorFormat();
        java.lang.Object obj47 = numberFormat46.clone();
        properFractionFormat27.setDenominatorFormat(numberFormat46);
        properFractionFormat15.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        fractionFormat50.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        fractionFormat50.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction64 = fractionFormat50.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = properFractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        fractionFormat69.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat79 = properFractionFormat76.getWholeFormat();
        fractionFormat69.setDenominatorFormat(numberFormat79);
        java.text.NumberFormat numberFormat81 = fractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat82 = fractionFormat69.getNumeratorFormat();
        properFractionFormat66.setNumeratorFormat(numberFormat82);
        java.text.NumberFormat numberFormat84 = properFractionFormat66.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator85 = properFractionFormat15.formatToCharacterIterator((java.lang.Object) numberFormat84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj34 = properFractionFormat29.clone();
        java.lang.Object obj35 = properFractionFormat29.clone();
        java.text.NumberFormat numberFormat36 = properFractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.lang.Object obj59 = numberFormat56.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        fractionFormat60.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        fractionFormat60.setDenominatorFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44, numberFormat56, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        fractionFormat74.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getWholeFormat();
        fractionFormat74.setDenominatorFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction88 = fractionFormat74.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat89);
        java.text.NumberFormat numberFormat91 = properFractionFormat90.getWholeFormat();
        java.text.NumberFormat numberFormat92 = properFractionFormat90.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat56, numberFormat92);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat26, numberFormat56);
        java.text.ParsePosition parsePosition96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj97 = properFractionFormat94.parseObject("hi!", parsePosition96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1L + "'", obj59, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat55.parse("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction59 = properFractionFormat55.parse("10 / 1");
        java.lang.Class<?> wildcardClass60 = properFractionFormat55.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat22, numberFormat24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj9 = properFractionFormat2.parseObject("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat2.setDenominatorFormat(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        properFractionFormat33.setWholeFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.lang.Object obj58 = numberFormat55.parseObject("1 / 1");
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.lang.Object obj68 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat69 = properFractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55, numberFormat59, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat44, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat80);
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat81.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getNumeratorFormat();
        properFractionFormat25.setWholeFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat87);
        java.lang.String str90 = properFractionFormat88.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator92 = properFractionFormat88.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj93 = properFractionFormat88.clone();
        java.text.NumberFormat numberFormat94 = properFractionFormat88.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat88.getWholeFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat95);
        java.text.NumberFormat numberFormat97 = properFractionFormat25.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "-1 0 / 1" + "'", str90, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat97);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.lang.Object obj41 = properFractionFormat40.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat42.getNumeratorFormat();
        java.lang.Object obj44 = properFractionFormat42.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat45.getNumeratorFormat();
        properFractionFormat42.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat40.setDenominatorFormat(numberFormat60);
        java.lang.Object obj62 = properFractionFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat66.getDenominatorFormat();
        fractionFormat63.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.text.NumberFormat numberFormat73 = properFractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat72.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = properFractionFormat40.format((java.lang.Object) properFractionFormat72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.Object obj11 = properFractionFormat9.parseObject("-1 0 / 1");
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat9.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = properFractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = properFractionFormat12.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj17 = properFractionFormat12.clone();
        java.lang.Object obj18 = properFractionFormat12.clone();
        org.apache.commons.math.fraction.Fraction fraction20 = properFractionFormat12.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat21 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat12.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat28 = properFractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat22, numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        fractionFormat4.setDenominatorFormat(numberFormat7);
        properFractionFormat2.setWholeFormat(numberFormat7);
        java.lang.Class<?> wildcardClass11 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat31, numberFormat33);
        properFractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        properFractionFormat46.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat48, numberFormat57);
        java.lang.Object obj61 = numberFormat48.clone();
        fractionFormat36.setDenominatorFormat(numberFormat48);
        properFractionFormat23.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat64 = properFractionFormat23.getDenominatorFormat();
        java.text.ParsePosition parsePosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction67 = properFractionFormat23.parse("-1", parsePosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        java.lang.Class<?> wildcardClass28 = numberFormat27.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = properFractionFormat26.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj31 = properFractionFormat26.clone();
        java.lang.Object obj32 = properFractionFormat26.clone();
        java.text.NumberFormat numberFormat33 = properFractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat23, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat37.getWholeFormat();
        java.lang.Object obj45 = numberFormat43.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        java.lang.Object obj56 = numberFormat54.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat43, numberFormat54);
        properFractionFormat2.setWholeFormat(numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction59 = null;
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer62 = properFractionFormat2.format(fraction59, stringBuffer60, fieldPosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("-1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        fractionFormat13.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        fractionFormat13.setDenominatorFormat(numberFormat23);
        java.lang.Object obj26 = numberFormat23.parseObject("1 / 1");
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = properFractionFormat30.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj35 = properFractionFormat30.clone();
        java.lang.Object obj36 = properFractionFormat30.clone();
        java.text.NumberFormat numberFormat37 = properFractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23, numberFormat27, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat41.getWholeFormat();
        java.lang.Object obj49 = numberFormat47.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getWholeFormat();
        java.lang.Object obj60 = numberFormat58.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat47, numberFormat58);
        org.apache.commons.math.fraction.Fraction fraction63 = properFractionFormat61.parse("1");
        java.lang.String str64 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction63);
        java.lang.String str65 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction63);
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = properFractionFormat10.format(fraction63, stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1L + "'", obj26, 1L);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1L) + "'", obj60, (-1L));
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1 / 1" + "'", str64, "1 / 1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1 / 1" + "'", str65, "1 / 1");
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat9.getDenominatorFormat();
        fractionFormat6.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat16.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat38 = properFractionFormat37.getNumeratorFormat();
        properFractionFormat32.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = properFractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        fractionFormat42.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.lang.String str51 = properFractionFormat49.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        fractionFormat42.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat42.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat61.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat61.getWholeFormat();
        properFractionFormat58.setDenominatorFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = properFractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat41, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        fractionFormat71.setDenominatorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        fractionFormat71.setDenominatorFormat(numberFormat81);
        java.text.NumberFormat numberFormat83 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat84 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat87);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat87);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat87);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat85, numberFormat87);
        properFractionFormat2.setDenominatorFormat(numberFormat85);
        java.text.NumberFormat numberFormat93 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 0 / 1" + "'", str51, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        properFractionFormat57.setWholeFormat(numberFormat59);
        fractionFormat53.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.Object obj63 = numberFormat59.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        properFractionFormat49.setDenominatorFormat(numberFormat59);
        java.text.NumberFormat numberFormat66 = properFractionFormat49.getWholeFormat();
        java.lang.Object obj68 = properFractionFormat49.parseObject("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        fractionFormat69.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat79 = properFractionFormat76.getWholeFormat();
        fractionFormat69.setDenominatorFormat(numberFormat79);
        java.text.NumberFormat numberFormat81 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat69.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat85.getWholeFormat();
        java.lang.Object obj87 = numberFormat86.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.text.NumberFormat numberFormat89 = properFractionFormat88.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat89);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat14.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat14.getDenominatorFormat();
        properFractionFormat9.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        properFractionFormat40.setWholeFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        fractionFormat52.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        fractionFormat52.setDenominatorFormat(numberFormat62);
        java.lang.Object obj65 = numberFormat62.parseObject("1 / 1");
        java.text.NumberFormat numberFormat66 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = properFractionFormat69.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj74 = properFractionFormat69.clone();
        java.lang.Object obj75 = properFractionFormat69.clone();
        java.text.NumberFormat numberFormat76 = properFractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62, numberFormat66, numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46, numberFormat51, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = properFractionFormat81.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj86 = properFractionFormat81.clone();
        java.text.NumberFormat numberFormat87 = properFractionFormat81.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat46, numberFormat87);
        org.apache.commons.math.fraction.Fraction fraction90 = properFractionFormat88.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat91 = properFractionFormat88.getWholeFormat();
        properFractionFormat9.setNumeratorFormat(numberFormat91);
        java.text.NumberFormat numberFormat93 = properFractionFormat9.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction95 = properFractionFormat9.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1L + "'", obj65, 1L);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("1 / 1");
        java.lang.Object obj13 = properFractionFormat10.clone();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction16 = properFractionFormat10.parse("-1 / 1");
        java.lang.String str17 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction16);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 / 1" + "'", str17, "-1 / 1");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        java.lang.Object obj26 = numberFormat11.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        fractionFormat27.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        fractionFormat27.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat27.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = properFractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat48.clone();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getDenominatorFormat();
        properFractionFormat46.setWholeFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat50, numberFormat52);
        java.lang.Object obj54 = properFractionFormat53.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat24.parseObject("-1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.Object obj28 = properFractionFormat27.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat2.parse("10");
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction18 = properFractionFormat12.parse("-1 / 1");
        java.text.NumberFormat numberFormat19 = properFractionFormat12.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = properFractionFormat2.format((java.lang.Object) numberFormat19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        properFractionFormat40.setWholeFormat(numberFormat43);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction49 = properFractionFormat40.parse("10 0 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat55.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        properFractionFormat55.setNumeratorFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat55.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat27.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat31, numberFormat33);
        properFractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        properFractionFormat46.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat48, numberFormat57);
        java.lang.Object obj61 = numberFormat48.clone();
        fractionFormat36.setDenominatorFormat(numberFormat48);
        properFractionFormat23.setNumeratorFormat(numberFormat48);
        java.lang.Object obj65 = properFractionFormat23.parseObject("10 / 1");
        java.text.NumberFormat numberFormat66 = properFractionFormat23.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        properFractionFormat18.setWholeFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = properFractionFormat18.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction25 = properFractionFormat18.parse("10");
        java.lang.String str26 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction25);
        java.lang.String str27 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction25);
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = properFractionFormat14.format(fraction25, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10 / 1" + "'", str26, "10 / 1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10 / 1" + "'", str27, "10 / 1");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.String str8 = properFractionFormat6.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = properFractionFormat6.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat11 = properFractionFormat6.getDenominatorFormat();
        java.lang.Object obj13 = properFractionFormat6.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = properFractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat18.getDenominatorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        fractionFormat24.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        fractionFormat24.setDenominatorFormat(numberFormat34);
        java.lang.Object obj37 = numberFormat34.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        fractionFormat38.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        fractionFormat38.setDenominatorFormat(numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat34, numberFormat50);
        java.text.NumberFormat numberFormat52 = properFractionFormat51.getNumeratorFormat();
        properFractionFormat6.setNumeratorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = properFractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat6.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat6.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat6.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = fractionFormat0.format((java.lang.Object) numberFormat57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1 0 / 1" + "'", str8, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1L + "'", obj37, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.Object obj3 = properFractionFormat2.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.lang.String str13 = properFractionFormat2.format((java.lang.Object) 10L);
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction16 = properFractionFormat2.parse("1 / 1");
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat2.parse("1 0 / 1", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 0 / 1" + "'", str13, "10 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fraction16);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        properFractionFormat20.setWholeFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat27.getDenominatorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat22, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.lang.Object obj43 = numberFormat42.clone();
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat42, numberFormat44);
        properFractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        properFractionFormat57.setWholeFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getDenominatorFormat();
        fractionFormat61.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53, numberFormat59, numberFormat68);
        java.lang.Object obj72 = numberFormat59.clone();
        fractionFormat47.setDenominatorFormat(numberFormat59);
        properFractionFormat34.setNumeratorFormat(numberFormat59);
        java.text.NumberFormat numberFormat75 = properFractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat10, numberFormat75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction78 = properFractionFormat76.parse("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat44.getWholeFormat();
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = properFractionFormat40.format((java.lang.Object) properFractionFormat44, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        java.text.NumberFormat numberFormat91 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = properFractionFormat2.parse("1 / 1");
        java.text.NumberFormat numberFormat94 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat96 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction98 = properFractionFormat2.parse("10 0 / 1");
        java.text.NumberFormat numberFormat99 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat96);
        org.junit.Assert.assertNotNull(fraction98);
        org.junit.Assert.assertNotNull(numberFormat99);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.Fraction fraction30 = properFractionFormat28.parse("10 / 1");
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction33 = properFractionFormat28.parse("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fraction33);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        fractionFormat65.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        fractionFormat65.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat79, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.text.NumberFormat numberFormat87 = properFractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj89 = fractionFormat88.clone();
        java.text.NumberFormat numberFormat90 = fractionFormat88.getDenominatorFormat();
        properFractionFormat86.setDenominatorFormat(numberFormat90);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat90);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat19.getNumeratorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat41.getNumeratorFormat();
        properFractionFormat38.setDenominatorFormat(numberFormat47);
        properFractionFormat16.setNumeratorFormat(numberFormat47);
        java.text.NumberFormat numberFormat50 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat16.getWholeFormat();
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = properFractionFormat16.parseObject("1 0 / 1", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat38);
        properFractionFormat2.setWholeFormat(numberFormat38);
        java.lang.Object obj56 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat57 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction59 = properFractionFormat2.parse("1 / 1");
        java.text.NumberFormat numberFormat60 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat2.parse("1");
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str15 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str16 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1 / 1" + "'", str13, "1 / 1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1 / 1" + "'", str14, "1 / 1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1 / 1" + "'", str15, "1 / 1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1 / 1" + "'", str16, "1 / 1");
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        fractionFormat12.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = properFractionFormat35.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj40 = properFractionFormat35.clone();
        java.lang.Object obj41 = properFractionFormat35.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat28);
        java.lang.Object obj45 = numberFormat15.clone();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1L + "'", obj31, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat25.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = properFractionFormat10.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat2.parse("10");
        java.lang.Object obj10 = properFractionFormat2.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getNumeratorFormat();
        java.lang.Object obj13 = properFractionFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat14.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat14.getNumeratorFormat();
        properFractionFormat11.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj46 = numberFormat45.clone();
        fractionFormat42.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.lang.Object obj61 = numberFormat58.parseObject("1 / 1");
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = properFractionFormat65.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj70 = properFractionFormat65.clone();
        java.lang.Object obj71 = properFractionFormat65.clone();
        java.text.NumberFormat numberFormat72 = properFractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58, numberFormat62, numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat45, numberFormat58);
        properFractionFormat11.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setNumeratorFormat(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1L + "'", obj61, 1L);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getNumeratorFormat();
        java.lang.Object obj19 = numberFormat17.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        java.lang.String str34 = numberFormat32.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        properFractionFormat37.setWholeFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        properFractionFormat50.setWholeFormat(numberFormat52);
        properFractionFormat37.setWholeFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        fractionFormat55.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        fractionFormat55.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat55.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat77 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat74.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        properFractionFormat71.setDenominatorFormat(numberFormat80);
        properFractionFormat37.setWholeFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat32, numberFormat80);
        properFractionFormat10.setNumeratorFormat(numberFormat17);
        java.text.ParsePosition parsePosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction87 = properFractionFormat10.parse("100", parsePosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1L + "'", obj19, 1L);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat16.parse("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.lang.Object obj34 = numberFormat33.clone();
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31, numberFormat33, numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        java.lang.Object obj40 = properFractionFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat41.getNumeratorFormat();
        properFractionFormat38.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat37, numberFormat54);
        properFractionFormat16.setDenominatorFormat(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.lang.Object obj41 = properFractionFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        java.lang.Object obj56 = numberFormat54.parseObject("1 / 1");
        properFractionFormat44.setWholeFormat(numberFormat54);
        java.text.NumberFormat numberFormat58 = properFractionFormat44.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat61.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat61.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat61.getDenominatorFormat();
        properFractionFormat44.setNumeratorFormat(numberFormat68);
        org.apache.commons.math.fraction.Fraction fraction71 = properFractionFormat44.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = properFractionFormat40.format(fraction71, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1L + "'", obj56, 1L);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fraction71);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat52);
        properFractionFormat36.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.Object obj66 = properFractionFormat64.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction68 = properFractionFormat64.parse("10 0 / 1");
        java.text.NumberFormat numberFormat69 = properFractionFormat64.getNumeratorFormat();
        properFractionFormat36.setNumeratorFormat(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = properFractionFormat30.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat35 = properFractionFormat30.getDenominatorFormat();
        properFractionFormat23.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.Object obj44 = numberFormat39.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat35, numberFormat39);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Object obj50 = numberFormat48.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.text.NumberFormat numberFormat52 = properFractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction54 = properFractionFormat51.parse("-1 0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) fraction54);
        java.lang.StringBuffer stringBuffer56 = null;
        java.text.FieldPosition fieldPosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer58 = properFractionFormat2.format(fraction54, stringBuffer56, fieldPosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1L + "'", obj44, 1L);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat3.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.lang.Object obj34 = numberFormat31.parseObject("1 / 1");
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj43 = properFractionFormat38.clone();
        java.lang.Object obj44 = properFractionFormat38.clone();
        java.text.NumberFormat numberFormat45 = properFractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31, numberFormat35, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.lang.String str51 = properFractionFormat49.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat49.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat49.getWholeFormat();
        java.lang.Object obj57 = numberFormat55.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat60.getWholeFormat();
        java.lang.Object obj68 = numberFormat66.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = properFractionFormat72.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj77 = properFractionFormat72.clone();
        java.lang.Object obj78 = properFractionFormat72.clone();
        java.text.NumberFormat numberFormat79 = properFractionFormat72.getDenominatorFormat();
        java.lang.Object obj81 = numberFormat79.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat55, numberFormat79);
        properFractionFormat3.setDenominatorFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1L + "'", obj34, 1L);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 0 / 1" + "'", str51, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1L) + "'", obj57, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1L) + "'", obj68, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1L + "'", obj81, 1L);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat2.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.lang.Object obj25 = numberFormat22.parseObject("1 / 1");
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj34 = properFractionFormat29.clone();
        java.lang.Object obj35 = properFractionFormat29.clone();
        java.text.NumberFormat numberFormat36 = properFractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat26, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat40.getWholeFormat();
        java.lang.Object obj48 = numberFormat46.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat51.getWholeFormat();
        java.lang.Object obj59 = numberFormat57.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat46, numberFormat57);
        org.apache.commons.math.fraction.Fraction fraction62 = properFractionFormat60.parse("1");
        java.lang.String str63 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str64 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str65 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = properFractionFormat2.format(fraction62, stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1L + "'", obj25, 1L);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1 / 1" + "'", str63, "1 / 1");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1 / 1" + "'", str64, "1 / 1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1 / 1" + "'", str65, "1 / 1");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = properFractionFormat4.parseObject("", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getDenominatorFormat();
        properFractionFormat31.setNumeratorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat31.getDenominatorFormat();
        properFractionFormat28.setWholeFormat(numberFormat45);
        properFractionFormat16.setWholeFormat(numberFormat45);
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction50 = properFractionFormat16.parse("", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        properFractionFormat33.setWholeFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.lang.Object obj58 = numberFormat55.parseObject("1 / 1");
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.lang.Object obj68 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat69 = properFractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55, numberFormat59, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat44, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat80);
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat81.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getNumeratorFormat();
        properFractionFormat25.setWholeFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction88 = properFractionFormat25.parse("-1 0 / 1");
        java.text.ParsePosition parsePosition90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = properFractionFormat25.parseObject("100 / 1", parsePosition90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fraction88);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat50.getNumeratorFormat();
        properFractionFormat47.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.text.NumberFormat numberFormat75 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat56, numberFormat76);
        java.text.NumberFormat numberFormat78 = properFractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = properFractionFormat81.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj86 = properFractionFormat81.clone();
        java.lang.Object obj87 = properFractionFormat81.clone();
        java.text.NumberFormat numberFormat88 = properFractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        java.text.NumberFormat numberFormat90 = properFractionFormat89.getWholeFormat();
        java.text.NumberFormat numberFormat91 = properFractionFormat89.getWholeFormat();
        java.text.NumberFormat numberFormat92 = properFractionFormat89.getNumeratorFormat();
        java.lang.Object obj94 = numberFormat92.parseObject("1");
        properFractionFormat77.setNumeratorFormat(numberFormat92);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 1L + "'", obj94, 1L);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat64);
        java.lang.Object obj66 = numberFormat45.clone();
        java.lang.Object obj68 = numberFormat45.parseObject("10 0 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10L + "'", obj68, 10L);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = properFractionFormat25.clone();
        java.lang.Object obj28 = properFractionFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat29.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat46.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getNumeratorFormat();
        properFractionFormat62.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat62.getDenominatorFormat();
        properFractionFormat45.setNumeratorFormat(numberFormat70);
        properFractionFormat25.setNumeratorFormat(numberFormat70);
        java.text.NumberFormat numberFormat73 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj74 = properFractionFormat25.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat78.getNumeratorFormat();
        java.lang.Object obj84 = numberFormat82.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.text.NumberFormat numberFormat86 = properFractionFormat85.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat85.getDenominatorFormat();
        java.text.NumberFormat numberFormat88 = properFractionFormat85.getWholeFormat();
        properFractionFormat25.setWholeFormat(numberFormat88);
        java.text.NumberFormat numberFormat90 = properFractionFormat25.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1L + "'", obj84, 1L);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        fractionFormat11.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        fractionFormat11.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction25 = fractionFormat11.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat27.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat27.getNumeratorFormat();
        java.lang.Object obj30 = numberFormat29.clone();
        properFractionFormat10.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat32 = properFractionFormat10.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("-1 / 1");
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction5);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1 / 1" + "'", str6, "-1 / 1");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("1 / 1");
        java.lang.Object obj13 = properFractionFormat10.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = properFractionFormat10.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat19.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat32.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        fractionFormat5.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        fractionFormat5.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat5.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.text.NumberFormat numberFormat27 = properFractionFormat26.getNumeratorFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.lang.Object obj46 = numberFormat44.parseObject("1 / 1");
        properFractionFormat34.setWholeFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        properFractionFormat50.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        fractionFormat62.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        fractionFormat62.setDenominatorFormat(numberFormat72);
        java.lang.Object obj75 = numberFormat72.parseObject("1 / 1");
        java.text.NumberFormat numberFormat76 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.lang.String str81 = properFractionFormat79.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = properFractionFormat79.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj84 = properFractionFormat79.clone();
        java.lang.Object obj85 = properFractionFormat79.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72, numberFormat76, numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat61, numberFormat86);
        properFractionFormat34.setWholeFormat(numberFormat61);
        java.text.NumberFormat numberFormat90 = properFractionFormat34.getWholeFormat();
        properFractionFormat2.setDenominatorFormat(numberFormat90);
        java.text.NumberFormat numberFormat92 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1L + "'", obj46, 1L);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1L + "'", obj75, 1L);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "-1 0 / 1" + "'", str81, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat15.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3, numberFormat12, numberFormat24);
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = properFractionFormat25.parseObject("100", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat13.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator21 = numberFormat10.formatToCharacterIterator((java.lang.Object) numberFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat4 = properFractionFormat3.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat4);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj50 = numberFormat48.parseObject("10 / 1");
        java.lang.Object obj51 = numberFormat48.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = numberFormat48.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        fractionFormat5.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        fractionFormat5.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat5.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat24.getWholeFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat0.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.text.NumberFormat numberFormat36 = properFractionFormat35.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = properFractionFormat15.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj20 = properFractionFormat15.clone();
        java.lang.Object obj21 = properFractionFormat15.clone();
        java.text.NumberFormat numberFormat22 = properFractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getWholeFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat27);
        java.lang.Object obj30 = properFractionFormat2.parseObject("1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        fractionFormat39.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        fractionFormat39.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = numberFormat54.clone();
        fractionFormat51.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        fractionFormat57.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        fractionFormat57.setDenominatorFormat(numberFormat67);
        java.lang.Object obj70 = numberFormat67.parseObject("1 / 1");
        java.text.NumberFormat numberFormat71 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.lang.Object obj80 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat81 = properFractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67, numberFormat71, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49, numberFormat54, numberFormat67);
        properFractionFormat31.setWholeFormat(numberFormat67);
        java.lang.Object obj85 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat31.getDenominatorFormat();
        properFractionFormat28.setDenominatorFormat(numberFormat86);
        java.lang.Class<?> wildcardClass88 = properFractionFormat28.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1L + "'", obj70, 1L);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat19.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getDenominatorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        fractionFormat37.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        fractionFormat37.setDenominatorFormat(numberFormat47);
        java.lang.Object obj50 = numberFormat47.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat47, numberFormat63);
        java.lang.Object obj65 = numberFormat63.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = properFractionFormat69.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat69.getDenominatorFormat();
        properFractionFormat66.setNumeratorFormat(numberFormat75);
        properFractionFormat2.setNumeratorFormat(numberFormat75);
        java.lang.Class<?> wildcardClass78 = numberFormat75.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        java.lang.Object obj21 = properFractionFormat2.parseObject("10");
        java.text.NumberFormat numberFormat22 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        properFractionFormat25.setWholeFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        properFractionFormat38.setWholeFormat(numberFormat40);
        properFractionFormat25.setWholeFormat(numberFormat40);
        java.lang.Object obj44 = properFractionFormat25.parseObject("10");
        java.text.NumberFormat numberFormat45 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat46.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat46.getNumeratorFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat61);
        java.lang.StringBuffer stringBuffer63 = null;
        java.text.FieldPosition fieldPosition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer65 = properFractionFormat2.format((java.lang.Object) numberFormat61, stringBuffer63, fieldPosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(numberFormat61);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction50 = properFractionFormat48.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat53.getWholeFormat();
        properFractionFormat48.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        java.lang.Object obj68 = numberFormat65.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58, numberFormat62, numberFormat65);
        java.text.ParsePosition parsePosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction72 = properFractionFormat69.parse("", parsePosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1L + "'", obj68, 1L);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        properFractionFormat40.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat47.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat42, numberFormat51);
        properFractionFormat9.setDenominatorFormat(numberFormat51);
        java.text.ParsePosition parsePosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction58 = properFractionFormat9.parse("-1 0 / 1", parsePosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat2.parse("1 / 1", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getWholeFormat();
        properFractionFormat2.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj34 = properFractionFormat29.clone();
        java.lang.Object obj35 = properFractionFormat29.clone();
        java.text.NumberFormat numberFormat36 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat36);
        properFractionFormat2.setWholeFormat(numberFormat36);
        java.lang.Object obj39 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat40 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat38);
        properFractionFormat2.setWholeFormat(numberFormat38);
        java.lang.Object obj56 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat57 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getDenominatorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat29, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat47.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat29, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat69.getWholeFormat();
        java.lang.Object obj76 = properFractionFormat69.clone();
        org.apache.commons.math.fraction.Fraction fraction78 = properFractionFormat69.parse("10");
        java.text.NumberFormat numberFormat79 = properFractionFormat69.getDenominatorFormat();
        properFractionFormat66.setDenominatorFormat(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj10 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getDenominatorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat24 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat13.setNumeratorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat13.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat10.parse("1 0 / 1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat31.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getNumeratorFormat();
        java.lang.Object obj52 = numberFormat50.parseObject("1 / 1");
        properFractionFormat40.setWholeFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = properFractionFormat56.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat61 = properFractionFormat56.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat50, numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat62.getDenominatorFormat();
        properFractionFormat22.setWholeFormat(numberFormat63);
        properFractionFormat16.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat66 = properFractionFormat16.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1L + "'", obj52, 1L);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat66);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj18 = numberFormat16.parseObject("10");
        fractionFormat0.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = properFractionFormat41.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getDenominatorFormat();
        properFractionFormat34.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.Object obj55 = numberFormat50.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30, numberFormat46, numberFormat50);
        fractionFormat0.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10L + "'", obj18, 10L);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1L + "'", obj55, 1L);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat55.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.lang.Object obj63 = numberFormat62.clone();
        fractionFormat59.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj73 = numberFormat72.clone();
        java.text.NumberFormat numberFormat74 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70, numberFormat72, numberFormat74);
        java.text.NumberFormat numberFormat76 = properFractionFormat75.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getDenominatorFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getWholeFormat();
        fractionFormat59.setDenominatorFormat(numberFormat85);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        properFractionFormat55.setDenominatorFormat(numberFormat85);
        java.text.NumberFormat numberFormat89 = properFractionFormat55.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat43.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat62.getWholeFormat();
        properFractionFormat59.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat42, numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction79 = properFractionFormat76.parse("10 / 1");
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3, numberFormat72, numberFormat80);
        java.lang.Object obj83 = numberFormat3.parseObject("1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1L + "'", obj83, 1L);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.Object obj11 = properFractionFormat9.parseObject("-1 0 / 1");
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getDenominatorFormat();
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = properFractionFormat9.parseObject("10 / 1", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat24.parseObject("-1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat28.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat47.getWholeFormat();
        properFractionFormat44.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        java.lang.Object obj69 = numberFormat68.clone();
        java.text.NumberFormat numberFormat70 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66, numberFormat68, numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat73.getNumeratorFormat();
        java.lang.Object obj75 = properFractionFormat73.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        fractionFormat76.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.lang.String str85 = properFractionFormat83.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat86 = properFractionFormat83.getWholeFormat();
        fractionFormat76.setDenominatorFormat(numberFormat86);
        java.text.NumberFormat numberFormat88 = fractionFormat76.getNumeratorFormat();
        java.text.NumberFormat numberFormat89 = fractionFormat76.getNumeratorFormat();
        properFractionFormat73.setDenominatorFormat(numberFormat89);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60, numberFormat72, numberFormat89);
        java.lang.Object obj92 = numberFormat72.clone();
        properFractionFormat44.setNumeratorFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.text.NumberFormat numberFormat95 = properFractionFormat94.getWholeFormat();
        properFractionFormat27.setWholeFormat(numberFormat95);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1 0 / 1" + "'", str85, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat13.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj26 = properFractionFormat21.clone();
        java.lang.Object obj27 = properFractionFormat21.clone();
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat21.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat30 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat21.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        properFractionFormat34.setWholeFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.lang.Object obj59 = numberFormat56.parseObject("1 / 1");
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = properFractionFormat63.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj68 = properFractionFormat63.clone();
        java.lang.Object obj69 = properFractionFormat63.clone();
        java.text.NumberFormat numberFormat70 = properFractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat60, numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat45, numberFormat70);
        java.lang.Object obj73 = properFractionFormat72.clone();
        java.text.NumberFormat numberFormat74 = properFractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat31, numberFormat75);
        java.lang.Object obj78 = numberFormat31.parseObject("1");
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1L + "'", obj59, 1L);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1L + "'", obj78, 1L);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = numberFormat26.clone();
        fractionFormat23.setDenominatorFormat(numberFormat26);
        properFractionFormat21.setWholeFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.lang.Object obj38 = numberFormat37.clone();
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat37, numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat26, numberFormat41);
        properFractionFormat9.setNumeratorFormat(numberFormat41);
        java.text.NumberFormat numberFormat44 = properFractionFormat9.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat44);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getDenominatorFormat();
        properFractionFormat72.setDenominatorFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        java.lang.String str86 = properFractionFormat84.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = properFractionFormat84.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj89 = properFractionFormat84.clone();
        java.lang.Object obj90 = properFractionFormat84.clone();
        org.apache.commons.math.fraction.Fraction fraction92 = properFractionFormat84.parse("-1 0 / 1");
        java.lang.String str93 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction92);
        java.lang.String str94 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction92);
        java.lang.StringBuffer stringBuffer95 = null;
        java.text.FieldPosition fieldPosition96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer97 = properFractionFormat81.format(fraction92, stringBuffer95, fieldPosition96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1 0 / 1" + "'", str86, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(fraction92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "-1 / 1" + "'", str93, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1 / 1" + "'", str94, "-1 / 1");
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat8.parse("1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction10);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.lang.Object obj2 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = properFractionFormat7.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = properFractionFormat7.getNumeratorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        properFractionFormat4.setNumeratorFormat(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = properFractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat4.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = properFractionFormat25.clone();
        java.lang.Object obj28 = properFractionFormat25.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = properFractionFormat25.parse("100");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat0.parse("-1 / 1");
        java.lang.Object obj4 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12, numberFormat24, numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.text.NumberFormat numberFormat43 = properFractionFormat42.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat22.getWholeFormat();
        properFractionFormat11.setNumeratorFormat(numberFormat28);
        properFractionFormat2.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        fractionFormat31.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        fractionFormat31.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat31.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        fractionFormat50.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        fractionFormat50.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat50.getNumeratorFormat();
        properFractionFormat47.setNumeratorFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
    }
}

