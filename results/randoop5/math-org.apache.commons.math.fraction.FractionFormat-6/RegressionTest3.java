import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("0 / 1");
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str12 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0 / 1" + "'", str11, "0 / 1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0 / 1" + "'", str12, "0 / 1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0 / 1" + "'", str13, "0 / 1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0 / 1" + "'", str14, "0 / 1");
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        fractionFormat48.setNumeratorFormat(numberFormat54);
        java.lang.Object obj56 = numberFormat54.clone();
        java.lang.String str58 = numberFormat54.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat62);
        fractionFormat44.setDenominatorFormat(numberFormat54);
        fractionFormat41.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat71 = fractionFormat41.getNumeratorFormat();
        java.lang.Object obj73 = numberFormat71.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat71);
        java.text.ParsePosition parsePosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat75.parse("", parsePosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "10" + "'", str58, "10");
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat45.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat67.setNumeratorFormat(numberFormat71);
        fractionFormat45.setNumeratorFormat(numberFormat71);
        fractionFormat32.setNumeratorFormat(numberFormat71);
        java.lang.Object obj80 = numberFormat71.clone();
        java.lang.Object obj81 = numberFormat71.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        fractionFormat30.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat41 = fractionFormat30.getNumeratorFormat();
        java.text.ParsePosition parsePosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction44 = fractionFormat30.parse("100", parsePosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat22);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        fractionFormat39.setNumeratorFormat(numberFormat47);
        fractionFormat34.setDenominatorFormat(numberFormat47);
        java.lang.Object obj56 = numberFormat47.parseObject("-1 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = fractionFormat51.parseObject("hi!", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.lang.Object obj34 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat45);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = numberFormat59.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat51.setDenominatorFormat(numberFormat59);
        java.lang.Object obj68 = numberFormat59.clone();
        java.text.NumberFormat numberFormat69 = null;
        java.text.NumberFormat numberFormat70 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        java.lang.Object obj81 = numberFormat80.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80, numberFormat92);
        fractionFormat71.setNumeratorFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat96 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat80);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator98 = fractionFormat24.formatToCharacterIterator((java.lang.Object) numberFormat80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNull(numberFormat72);
        org.junit.Assert.assertNull(numberFormat73);
        org.junit.Assert.assertNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.lang.Object obj67 = numberFormat61.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction32 = fractionFormat29.parse("10");
        java.lang.String str33 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction32);
        java.lang.String str34 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction32);
        java.lang.String str35 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction32);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10 / 1" + "'", str33, "10 / 1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10 / 1" + "'", str34, "10 / 1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "10 / 1" + "'", str35, "10 / 1");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        fractionFormat38.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        fractionFormat60.setNumeratorFormat(numberFormat64);
        fractionFormat38.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat64);
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("-1 / 1");
        java.lang.Object obj30 = numberFormat26.clone();
        fractionFormat2.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat61);
        fractionFormat2.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat68 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat2.parse("0 / 1", parsePosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1L) + "'", obj29, (-1L));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat3 = fractionFormat1.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.text.NumberFormat numberFormat26 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        fractionFormat5.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj50 = numberFormat49.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        fractionFormat63.setDenominatorFormat(numberFormat69);
        java.lang.Object obj71 = numberFormat69.clone();
        fractionFormat52.setNumeratorFormat(numberFormat69);
        java.lang.Object obj73 = numberFormat69.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat26.parse("0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fraction28);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat7.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat41);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        fractionFormat43.setNumeratorFormat(numberFormat51);
        java.lang.String str59 = numberFormat51.format((java.lang.Object) 10);
        fractionFormat2.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat82);
        java.lang.Object obj85 = fractionFormat84.clone();
        org.apache.commons.math.fraction.Fraction fraction87 = fractionFormat84.parse("10 / 1");
        java.lang.String str88 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction87);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = fractionFormat2.format((java.lang.Object) str88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "10" + "'", str59, "10");
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(fraction87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10 / 1" + "'", str88, "10 / 1");
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat38.parse("100 / 1");
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "100 / 1" + "'", str42, "100 / 1");
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Class<?> wildcardClass49 = numberFormat48.getClass();
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = fractionFormat44.format((java.lang.Object) numberFormat48, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.lang.Class<?> wildcardClass50 = fractionFormat49.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj16 = fractionFormat2.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("-1 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat43.parse("0 / 1");
        java.lang.String str46 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction45);
        java.lang.StringBuffer stringBuffer47 = null;
        java.text.FieldPosition fieldPosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer49 = fractionFormat2.format(fraction45, stringBuffer47, fieldPosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0 / 1" + "'", str46, "0 / 1");
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        fractionFormat22.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat52 = fractionFormat22.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = numberFormat12.format((java.lang.Object) numberFormat52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        fractionFormat26.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat52);
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat2.format((java.lang.Object) numberFormat52, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat31.parse("10");
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat31.parse("10");
        org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat31.parse("10");
        java.lang.String str39 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction38);
        java.lang.String str40 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction38);
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = fractionFormat20.format(fraction38, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10 / 1" + "'", str39, "10 / 1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "10 / 1" + "'", str40, "10 / 1");
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat39);
        java.lang.Object obj42 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = fractionFormat53.clone();
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        java.lang.Object obj85 = fractionFormat81.parseObject("0 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat81.getNumeratorFormat();
        fractionFormat80.setDenominatorFormat(numberFormat86);
        java.lang.Object obj88 = numberFormat86.clone();
        fractionFormat69.setNumeratorFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat86);
        java.text.NumberFormat numberFormat92 = fractionFormat91.getDenominatorFormat();
        java.text.NumberFormat numberFormat93 = fractionFormat91.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = numberFormat56.format((java.lang.Object) fractionFormat91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.lang.Object obj16 = numberFormat12.parseObject("0");
        java.lang.Object obj18 = numberFormat12.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0L + "'", obj16, 0L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat57);
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat62);
        java.lang.Object obj64 = fractionFormat63.clone();
        java.text.NumberFormat numberFormat65 = null;
        java.text.NumberFormat numberFormat66 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        java.text.NumberFormat numberFormat69 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        fractionFormat67.setNumeratorFormat(numberFormat73);
        java.lang.Object obj75 = numberFormat73.clone();
        java.lang.String str77 = numberFormat73.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat81);
        fractionFormat63.setDenominatorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat60);
        fractionFormat31.setDenominatorFormat(numberFormat57);
        fractionFormat30.setNumeratorFormat(numberFormat57);
        java.lang.Object obj94 = fractionFormat30.clone();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNull(numberFormat68);
        org.junit.Assert.assertNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "10" + "'", str77, "10");
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.lang.Object obj24 = fractionFormat23.clone();
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        java.lang.String str37 = numberFormat33.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat23.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat33);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        fractionFormat54.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat60);
        java.lang.Object obj65 = numberFormat60.parseObject("-1 / 1");
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = fractionFormat19.format((java.lang.Object) "-1 / 1", stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10" + "'", str37, "10");
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1L) + "'", obj65, (-1L));
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj23 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat24 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat24.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10L + "'", obj26, 10L);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat7.getNumeratorFormat();
        java.lang.Object obj16 = fractionFormat7.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat7.parse("100");
        org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat7.parse("0 / 1");
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = fractionFormat6.format(fraction21, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction21);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj8 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat29);
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat39);
        fractionFormat30.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat0.setNumeratorFormat(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj29 = numberFormat28.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat26);
        java.lang.Object obj28 = numberFormat26.clone();
        fractionFormat9.setNumeratorFormat(numberFormat26);
        java.lang.Object obj30 = numberFormat26.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat26);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = fractionFormat2.format((java.lang.Object) "0 / 1", stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.lang.Object obj23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = fractionFormat22.format(obj23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str37 = fractionFormat35.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0 / 1" + "'", str37, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.lang.Object obj20 = fractionFormat19.clone();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        java.lang.Object obj31 = numberFormat29.clone();
        java.lang.String str33 = numberFormat29.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat37);
        fractionFormat19.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat29);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.lang.Object obj49 = numberFormat47.parseObject("0 / 1");
        fractionFormat2.setNumeratorFormat(numberFormat47);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10" + "'", str33, "10");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0L + "'", obj49, 0L);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj26 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat44);
        java.lang.Object obj46 = numberFormat44.clone();
        fractionFormat27.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat48 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat27.setNumeratorFormat(numberFormat55);
        fractionFormat0.setDenominatorFormat(numberFormat55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat35.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        fractionFormat35.setDenominatorFormat(numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        fractionFormat50.setNumeratorFormat(numberFormat64);
        fractionFormat35.setDenominatorFormat(numberFormat64);
        java.lang.Object obj68 = numberFormat64.clone();
        java.lang.Object obj70 = numberFormat64.parseObject("100");
        fractionFormat34.setDenominatorFormat(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj60 = fractionFormat59.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat26.setNumeratorFormat(numberFormat30);
        java.lang.Object obj37 = numberFormat30.clone();
        fractionFormat14.setDenominatorFormat(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = numberFormat5.formatToCharacterIterator((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        fractionFormat17.setNumeratorFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        fractionFormat27.setNumeratorFormat(numberFormat35);
        fractionFormat17.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat43 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("0 / 1");
        fractionFormat4.setNumeratorFormat(numberFormat24);
        java.text.NumberFormat numberFormat29 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat4.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat30);
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat0.parse("0", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat64);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        java.lang.Object obj69 = numberFormat67.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat67);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getNumeratorFormat();
        java.lang.Object obj76 = numberFormat74.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0L + "'", obj76, 0L);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        fractionFormat28.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = numberFormat72.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat64.setDenominatorFormat(numberFormat72);
        java.lang.Object obj81 = numberFormat72.clone();
        java.lang.Object obj83 = numberFormat72.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = numberFormat61.formatToCharacterIterator(obj83);
        fractionFormat28.setNumeratorFormat(numberFormat61);
        java.lang.Object obj87 = numberFormat61.parseObject("0");
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0L + "'", obj83, 0L);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 0L + "'", obj87, 0L);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat4.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat11);
        java.lang.Object obj13 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = fractionFormat0.parseObject("10", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat8.parse("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat63);
        java.lang.Object obj65 = numberFormat63.clone();
        fractionFormat46.setNumeratorFormat(numberFormat63);
        java.lang.Object obj67 = numberFormat63.clone();
        java.lang.Object obj68 = numberFormat63.clone();
        fractionFormat41.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        fractionFormat40.setNumeratorFormat(numberFormat63);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat8.formatToCharacterIterator((java.lang.Object) numberFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getNumeratorFormat();
        java.lang.Object obj43 = fractionFormat41.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat73);
        fractionFormat41.setDenominatorFormat(numberFormat73);
        fractionFormat2.setDenominatorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.lang.Object obj83 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj87 = fractionFormat85.parseObject("0 / 1");
        java.text.NumberFormat numberFormat88 = fractionFormat85.getNumeratorFormat();
        fractionFormat79.setNumeratorFormat(numberFormat88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = numberFormat73.format((java.lang.Object) numberFormat88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat35 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        java.lang.Object obj5 = fractionFormat0.clone();
        java.lang.Object obj6 = fractionFormat0.clone();
        java.lang.Object obj8 = fractionFormat0.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat17 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat24.parse("", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("0 / 1");
        fractionFormat4.setNumeratorFormat(numberFormat24);
        java.text.NumberFormat numberFormat29 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat4.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat32.parse("10 / 1");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction34);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        fractionFormat45.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat66 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat45.setDenominatorFormat(numberFormat66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.lang.Object obj47 = fractionFormat2.clone();
        java.lang.Object obj48 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = fractionFormat2.parseObject("10", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat49.setNumeratorFormat(numberFormat66);
        java.lang.Object obj70 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat66);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj74 = numberFormat72.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat72);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat75.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat75.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat56.parse("10 / 1");
        java.lang.String str59 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction58);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "10 / 1" + "'", str59, "10 / 1");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat28.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat20.setDenominatorFormat(numberFormat28);
        java.lang.Object obj37 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat39.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat62.getDenominatorFormat();
        java.lang.Object obj67 = fractionFormat62.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat87);
        java.text.NumberFormat numberFormat90 = fractionFormat89.getDenominatorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat90);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat90);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat90);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat90);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat21.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        fractionFormat43.setNumeratorFormat(numberFormat50);
        fractionFormat21.setNumeratorFormat(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        java.lang.Object obj38 = numberFormat36.clone();
        fractionFormat19.setNumeratorFormat(numberFormat36);
        java.lang.Object obj40 = numberFormat36.clone();
        java.lang.Object obj41 = numberFormat36.clone();
        fractionFormat14.setDenominatorFormat(numberFormat36);
        java.lang.Object obj43 = numberFormat36.clone();
        java.lang.Object obj45 = numberFormat36.parseObject("-1 / 1");
        fractionFormat13.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.lang.Object obj61 = numberFormat54.clone();
        fractionFormat13.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat63.getNumeratorFormat();
        java.lang.Object obj72 = numberFormat70.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat70);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        java.lang.Object obj85 = numberFormat82.clone();
        java.lang.Object obj86 = numberFormat82.clone();
        fractionFormat73.setNumeratorFormat(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10L + "'", obj72, 10L);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = numberFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat24.parse("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction26);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat23.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat40);
        java.lang.Object obj52 = numberFormat30.clone();
        fractionFormat19.setDenominatorFormat(numberFormat30);
        java.lang.Class<?> wildcardClass54 = numberFormat30.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        fractionFormat2.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat58.parse("0 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        fractionFormat44.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        java.lang.Object obj58 = fractionFormat56.parseObject("100 / 1");
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat56.parse("", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat54.parse("10");
        org.apache.commons.math.fraction.Fraction fraction59 = fractionFormat54.parse("10");
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat54.parse("10");
        org.apache.commons.math.fraction.Fraction fraction63 = fractionFormat54.parse("0");
        java.text.NumberFormat numberFormat64 = fractionFormat54.getDenominatorFormat();
        fractionFormat43.setNumeratorFormat(numberFormat64);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        fractionFormat0.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        fractionFormat42.setNumeratorFormat(numberFormat56);
        java.lang.Object obj59 = fractionFormat42.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat61);
        fractionFormat0.setNumeratorFormat(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat8.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat25);
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat49.setNumeratorFormat(numberFormat60);
        fractionFormat2.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat17.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str22 = fractionFormat20.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat44);
        java.lang.Object obj47 = numberFormat44.parseObject("0 / 1");
        fractionFormat24.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat49 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat24.getDenominatorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat50);
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = fractionFormat17.format((java.lang.Object) fractionFormat20, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0 / 1" + "'", str22, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0L + "'", obj47, 0L);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat28 = null;
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat62);
        java.lang.Object obj64 = numberFormat62.clone();
        fractionFormat45.setNumeratorFormat(numberFormat62);
        fractionFormat30.setDenominatorFormat(numberFormat62);
        fractionFormat25.setDenominatorFormat(numberFormat62);
        java.text.NumberFormat numberFormat68 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat68);
        java.text.ParsePosition parsePosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = fractionFormat69.parseObject("-1 / 1", parsePosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.lang.Object obj11 = fractionFormat10.clone();
        java.text.NumberFormat numberFormat12 = null;
        java.text.NumberFormat numberFormat13 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        fractionFormat14.setNumeratorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        java.lang.String str24 = numberFormat20.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat28);
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat20);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "10" + "'", str24, "10");
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        fractionFormat2.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat62);
        java.lang.Object obj82 = fractionFormat81.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        fractionFormat26.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        java.lang.Object obj53 = numberFormat50.parseObject("-1 / 1");
        java.lang.Object obj54 = numberFormat50.clone();
        fractionFormat26.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        fractionFormat63.setNumeratorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat71.getNumeratorFormat();
        fractionFormat63.setNumeratorFormat(numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat74);
        java.text.NumberFormat numberFormat77 = null;
        java.text.NumberFormat numberFormat78 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat78);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        fractionFormat79.setNumeratorFormat(numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat85);
        fractionFormat26.setDenominatorFormat(numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85);
        fractionFormat18.setDenominatorFormat(numberFormat85);
        fractionFormat17.setNumeratorFormat(numberFormat85);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNull(numberFormat80);
        org.junit.Assert.assertNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        java.text.NumberFormat numberFormat35 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat38.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = numberFormat37.format((java.lang.Object) fractionFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat45.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction59 = fractionFormat45.parse("100 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction59);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str37 = fractionFormat35.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat39);
        java.lang.Object obj41 = fractionFormat40.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0 / 1" + "'", str37, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = fractionFormat34.parseObject("10", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat57);
        java.lang.Object obj59 = numberFormat57.clone();
        java.lang.String str61 = numberFormat57.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78);
        fractionFormat71.setNumeratorFormat(numberFormat78);
        fractionFormat45.setNumeratorFormat(numberFormat78);
        java.text.NumberFormat numberFormat87 = fractionFormat45.getNumeratorFormat();
        java.lang.Class<?> wildcardClass88 = fractionFormat45.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "10" + "'", str61, "10");
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat28.getNumeratorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat35);
        java.lang.StringBuffer stringBuffer37 = null;
        java.text.FieldPosition fieldPosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer39 = fractionFormat11.format((java.lang.Object) numberFormat35, stringBuffer37, fieldPosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        java.lang.Object obj5 = fractionFormat0.clone();
        java.lang.Object obj6 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = numberFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.Object obj10 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat33);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.ParsePosition parsePosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat52.parse("0", parsePosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat2.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat2.parse("0");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat2.setDenominatorFormat(numberFormat55);
        java.text.ParsePosition parsePosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat2.parse("0 / 1", parsePosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Class<?> wildcardClass60 = numberFormat39.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat16.parse("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat0.parse("10", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat36.formatToCharacterIterator(obj41);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.lang.Object obj11 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj14 = fractionFormat12.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        java.text.NumberFormat numberFormat35 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = fractionFormat36.parseObject("", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj61 = numberFormat39.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat39);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat39);
        java.lang.Object obj42 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = fractionFormat53.clone();
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat56);
        java.lang.Class<?> wildcardClass58 = numberFormat56.getClass();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj15 = fractionFormat13.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        fractionFormat34.setNumeratorFormat(numberFormat51);
        fractionFormat19.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat19.parse("10");
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        fractionFormat60.setNumeratorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        java.lang.String str70 = numberFormat66.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat74);
        fractionFormat19.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat82 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10" + "'", str70, "10");
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat24.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat52 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat53.getNumeratorFormat();
        java.lang.Object obj62 = numberFormat60.parseObject("10");
        java.lang.Object obj63 = numberFormat60.clone();
        fractionFormat24.setNumeratorFormat(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10L + "'", obj62, 10L);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj61 = numberFormat39.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat39);
        java.text.ParsePosition parsePosition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = fractionFormat62.parseObject("hi!", parsePosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat45.parse("100");
        java.lang.String str56 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction55);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "100 / 1" + "'", str56, "100 / 1");
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat12.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str35 = numberFormat29.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat48.setNumeratorFormat(numberFormat56);
        fractionFormat38.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat64 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.lang.Class<?> wildcardClass68 = numberFormat8.getClass();
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str25 = numberFormat19.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        fractionFormat38.setNumeratorFormat(numberFormat46);
        fractionFormat28.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat54 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = fractionFormat2.format((java.lang.Object) numberFormat11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat50);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getNumeratorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = fractionFormat30.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = fractionFormat33.parseObject("hi!", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj17 = numberFormat15.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        java.lang.Object obj19 = fractionFormat18.clone();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.clone();
        java.lang.Object obj34 = numberFormat29.parseObject("100");
        fractionFormat18.setNumeratorFormat(numberFormat29);
        fractionFormat0.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat37.parse("0 / 1");
        java.lang.String str40 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction39);
        java.lang.String str41 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction39);
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction39);
        java.lang.String str43 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction39);
        java.lang.String str44 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction39);
        java.lang.Class<?> wildcardClass45 = fraction39.getClass();
        java.lang.StringBuffer stringBuffer46 = null;
        java.text.FieldPosition fieldPosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer48 = fractionFormat0.format((java.lang.Object) wildcardClass45, stringBuffer46, fieldPosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10L + "'", obj17, 10L);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0 / 1" + "'", str40, "0 / 1");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0 / 1" + "'", str41, "0 / 1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0 / 1" + "'", str42, "0 / 1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "0 / 1" + "'", str43, "0 / 1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0 / 1" + "'", str44, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat26.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.lang.Object obj71 = numberFormat70.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat70);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat73.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat85);
        fractionFormat45.setDenominatorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        java.text.ParsePosition parsePosition92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction93 = fractionFormat90.parse("0", parsePosition92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getDenominatorFormat();
        java.lang.Object obj44 = numberFormat42.parseObject("100 / 1");
        fractionFormat29.setDenominatorFormat(numberFormat42);
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = fractionFormat29.parseObject("100", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj12 = fractionFormat2.parseObject("10");
        java.text.NumberFormat numberFormat13 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        java.lang.Object obj9 = fractionFormat0.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fractionFormat0.parseObject("100", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        java.lang.Object obj72 = fractionFormat70.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = fractionFormat53.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.lang.Object obj77 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat78 = fractionFormat73.getNumeratorFormat();
        fractionFormat72.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat81.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat88.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat91 = fractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat91);
        java.text.NumberFormat numberFormat93 = fractionFormat92.getDenominatorFormat();
        fractionFormat81.setDenominatorFormat(numberFormat93);
        java.text.NumberFormat numberFormat95 = fractionFormat81.getNumeratorFormat();
        fractionFormat80.setNumeratorFormat(numberFormat95);
        java.lang.Object obj97 = numberFormat95.clone();
        fractionFormat53.setDenominatorFormat(numberFormat95);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat2.parse("", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.lang.Object obj43 = fractionFormat42.clone();
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        java.lang.String str56 = numberFormat52.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat60);
        fractionFormat42.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat68 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = numberFormat75.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat39.setDenominatorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "10" + "'", str56, "10");
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat30);
        java.lang.Object obj32 = numberFormat30.clone();
        fractionFormat13.setNumeratorFormat(numberFormat30);
        java.lang.Object obj34 = numberFormat30.clone();
        java.lang.Object obj35 = numberFormat30.clone();
        fractionFormat8.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        fractionFormat7.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat30);
        java.lang.Object obj46 = numberFormat30.clone();
        java.lang.Object obj47 = numberFormat30.clone();
        fractionFormat2.setNumeratorFormat(numberFormat30);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = numberFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        fractionFormat8.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.lang.Object obj35 = numberFormat32.parseObject("-1 / 1");
        java.lang.Object obj36 = numberFormat32.clone();
        fractionFormat8.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        fractionFormat45.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        fractionFormat45.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat56);
        java.text.NumberFormat numberFormat59 = null;
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        fractionFormat61.setNumeratorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat67);
        fractionFormat8.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        fractionFormat0.setDenominatorFormat(numberFormat67);
        java.text.ParsePosition parsePosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat0.parse("10", parsePosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1L) + "'", obj35, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = fractionFormat0.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat0.getDenominatorFormat();
        java.lang.Class<?> wildcardClass11 = numberFormat10.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        fractionFormat3.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.lang.Object obj30 = numberFormat27.parseObject("-1 / 1");
        java.lang.Object obj31 = numberFormat27.clone();
        fractionFormat3.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        fractionFormat40.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        fractionFormat40.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat51);
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        fractionFormat56.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat62);
        fractionFormat3.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        fractionFormat0.setDenominatorFormat(numberFormat62);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1L) + "'", obj30, (-1L));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat37.getNumeratorFormat();
        java.lang.Object obj41 = fractionFormat37.clone();
        java.text.NumberFormat numberFormat42 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        fractionFormat54.setNumeratorFormat(numberFormat65);
        fractionFormat37.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = fractionFormat83.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat86 = fractionFormat83.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator89 = fractionFormat87.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat90 = fractionFormat87.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat86, numberFormat90);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat90);
        java.text.NumberFormat numberFormat93 = fractionFormat92.getDenominatorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat93);
        java.text.NumberFormat numberFormat95 = fractionFormat70.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat95);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(attributedCharacterIterator89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat10.parse("0");
        java.text.NumberFormat numberFormat20 = fractionFormat10.getDenominatorFormat();
        java.text.ParsePosition parsePosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = fractionFormat10.parseObject("0", parsePosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        fractionFormat11.setNumeratorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        java.lang.String str21 = numberFormat17.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        fractionFormat24.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat41);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj56 = fractionFormat53.parseObject("10 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat53.getDenominatorFormat();
        fractionFormat6.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat6.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "10" + "'", str21, "10");
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat28.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat20.setDenominatorFormat(numberFormat28);
        java.lang.Object obj37 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        java.lang.Object obj40 = numberFormat14.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0L + "'", obj40, 0L);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        fractionFormat46.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = null;
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat77.getNumeratorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat80);
        java.lang.Object obj83 = numberFormat80.parseObject("0 / 1");
        fractionFormat60.setNumeratorFormat(numberFormat80);
        java.text.NumberFormat numberFormat85 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85);
        java.lang.Object obj89 = fractionFormat87.parseObject("1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator90 = numberFormat34.formatToCharacterIterator(obj89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0L + "'", obj83, 0L);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat17.parse("10");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator21 = numberFormat15.formatToCharacterIterator((java.lang.Object) fraction20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction20);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat59.setNumeratorFormat(numberFormat76);
        fractionFormat44.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.Fraction fraction82 = fractionFormat44.parse("10");
        java.lang.String str83 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction82);
        java.lang.StringBuffer stringBuffer84 = null;
        java.text.FieldPosition fieldPosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer86 = fractionFormat38.format(fraction82, stringBuffer84, fieldPosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "10 / 1" + "'", str83, "10 / 1");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        fractionFormat11.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat11.parse("0");
        java.lang.Class<?> wildcardClass47 = fractionFormat11.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.lang.Class<?> wildcardClass66 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        fractionFormat21.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = fractionFormat33.parseObject("10 / 1", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat23.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat32.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat35);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.lang.Object obj66 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat67 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.Fraction fraction80 = fractionFormat78.parse("10 / 1");
        java.lang.String str81 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction80);
        java.lang.String str82 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction80);
        java.lang.StringBuffer stringBuffer83 = null;
        java.text.FieldPosition fieldPosition84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer85 = fractionFormat0.format(fraction80, stringBuffer83, fieldPosition84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "10 / 1" + "'", str81, "10 / 1");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "10 / 1" + "'", str82, "10 / 1");
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.lang.Object obj36 = numberFormat15.parseObject("0 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0L + "'", obj36, 0L);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat45);
        java.lang.Object obj47 = numberFormat45.clone();
        fractionFormat28.setNumeratorFormat(numberFormat45);
        fractionFormat13.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat13.parse("10");
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        fractionFormat54.setNumeratorFormat(numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        java.lang.String str64 = numberFormat60.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat68);
        fractionFormat13.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat76 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "10" + "'", str64, "10");
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat38.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = null;
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat61.getDenominatorFormat();
        java.lang.Object obj66 = fractionFormat61.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = fractionFormat83.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat86 = fractionFormat83.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat82, numberFormat86);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat86);
        java.text.NumberFormat numberFormat89 = fractionFormat88.getDenominatorFormat();
        fractionFormat61.setDenominatorFormat(numberFormat89);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat89);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat89);
        java.lang.Object obj93 = numberFormat58.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = fractionFormat34.format((java.lang.Object) numberFormat58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str24 = fractionFormat22.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0 / 1" + "'", str24, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.lang.Object obj33 = numberFormat23.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10L + "'", obj33, 10L);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat45.parse("100 / 1", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat57 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction59 = fractionFormat2.parse("100");
        java.lang.String str60 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction59);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "100 / 1" + "'", str60, "100 / 1");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat10.parse("0");
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0 / 1" + "'", str13, "0 / 1");
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat17.parse("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        java.lang.Object obj43 = numberFormat39.clone();
        java.lang.Object obj44 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction52 = fractionFormat50.parse("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        fractionFormat45.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat53);
        fractionFormat17.setDenominatorFormat(numberFormat53);
        java.lang.StringBuffer stringBuffer57 = null;
        java.text.FieldPosition fieldPosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer59 = fractionFormat2.format((java.lang.Object) numberFormat53, stringBuffer57, fieldPosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat21.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        fractionFormat44.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        java.lang.Object obj58 = fractionFormat56.parseObject("100 / 1");
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat56.parse("10 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat56);
        java.lang.Object obj58 = numberFormat56.clone();
        fractionFormat39.setNumeratorFormat(numberFormat56);
        java.lang.Object obj60 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat56);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.lang.Object obj64 = numberFormat62.parseObject("-1 / 1");
        fractionFormat2.setDenominatorFormat(numberFormat62);
        java.text.NumberFormat numberFormat66 = null;
        java.text.NumberFormat numberFormat67 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        java.text.NumberFormat numberFormat70 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        fractionFormat68.setNumeratorFormat(numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat78);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1L) + "'", obj64, (-1L));
        org.junit.Assert.assertNull(numberFormat69);
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat78);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.lang.Object obj40 = fractionFormat39.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        fractionFormat43.setNumeratorFormat(numberFormat49);
        java.lang.Object obj51 = numberFormat49.clone();
        java.lang.String str53 = numberFormat49.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat57);
        fractionFormat39.setDenominatorFormat(numberFormat49);
        fractionFormat36.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat66 = fractionFormat36.getNumeratorFormat();
        java.lang.Object obj68 = numberFormat66.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = numberFormat27.format((java.lang.Object) fractionFormat70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "10" + "'", str53, "10");
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 100L + "'", obj68, 100L);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat26.setDenominatorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        fractionFormat15.setNumeratorFormat(numberFormat32);
        java.lang.Object obj36 = numberFormat32.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat32);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.lang.Object obj50 = numberFormat49.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat61);
        fractionFormat40.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.lang.Object obj80 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat76.getNumeratorFormat();
        fractionFormat75.setDenominatorFormat(numberFormat81);
        java.lang.Object obj83 = numberFormat81.clone();
        fractionFormat40.setDenominatorFormat(numberFormat81);
        java.lang.Object obj85 = numberFormat81.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat81);
        org.apache.commons.math.fraction.Fraction fraction88 = fractionFormat86.parse("-1 / 1");
        java.lang.String str89 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction88);
        java.lang.StringBuffer stringBuffer90 = null;
        java.text.FieldPosition fieldPosition91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer92 = fractionFormat0.format(fraction88, stringBuffer90, fieldPosition91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "-1 / 1" + "'", str89, "-1 / 1");
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj15 = fractionFormat13.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction18 = fractionFormat16.parse("0 / 1");
        java.lang.String str19 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.String str20 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.String str22 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.String str23 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.String str24 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.String str25 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.String str26 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction18);
        java.lang.StringBuffer stringBuffer27 = null;
        java.text.FieldPosition fieldPosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer29 = fractionFormat13.format(fraction18, stringBuffer27, fieldPosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0 / 1" + "'", str19, "0 / 1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0 / 1" + "'", str20, "0 / 1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0 / 1" + "'", str21, "0 / 1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0 / 1" + "'", str22, "0 / 1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0 / 1" + "'", str23, "0 / 1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0 / 1" + "'", str24, "0 / 1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0 / 1" + "'", str25, "0 / 1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0 / 1" + "'", str26, "0 / 1");
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat44);
        java.text.NumberFormat numberFormat47 = null;
        java.text.NumberFormat numberFormat48 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        fractionFormat49.setNumeratorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat55);
        java.lang.Object obj62 = numberFormat55.parseObject("10 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat24.formatToCharacterIterator(obj62);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10L + "'", obj62, 10L);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat21.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj13 = fractionFormat11.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat0.parse("100");
        java.text.NumberFormat numberFormat18 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        java.lang.String str31 = numberFormat27.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        org.apache.commons.math.fraction.Fraction fraction66 = fractionFormat64.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat67.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat71);
        fractionFormat0.setDenominatorFormat(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "10" + "'", str31, "10");
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj8 = fractionFormat0.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.lang.Object obj29 = numberFormat20.parseObject("100 / 1");
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.lang.Object obj11 = numberFormat8.clone();
        java.lang.Object obj13 = numberFormat8.parseObject("100");
        java.lang.Object obj15 = numberFormat8.parseObject("100");
        java.lang.Object obj16 = numberFormat8.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("-1 / 1");
        java.lang.String str5 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 / 1" + "'", str5, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1 / 1" + "'", str6, "-1 / 1");
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat48);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat30.parse("-1 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fraction54);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat19.parse("100");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        java.lang.Object obj34 = numberFormat31.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        java.lang.Object obj11 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat12.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj43 = numberFormat41.parseObject("10");
        fractionFormat33.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10L + "'", obj43, 10L);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat40.getNumeratorFormat();
        java.lang.Object obj49 = numberFormat47.parseObject("10");
        java.lang.Object obj50 = numberFormat47.clone();
        fractionFormat39.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat71);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        java.lang.Object obj75 = fractionFormat73.clone();
        java.lang.Object obj76 = fractionFormat73.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = fractionFormat39.format((java.lang.Object) fractionFormat73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10L + "'", obj49, 10L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        fractionFormat17.setNumeratorFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.lang.Object obj33 = fractionFormat0.parseObject("0");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat39.clone();
        fractionFormat0.setNumeratorFormat(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        java.lang.Object obj5 = fractionFormat0.clone();
        java.lang.Object obj6 = fractionFormat0.clone();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        fractionFormat11.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat45 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat11.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat8.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat31);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat32.setDenominatorFormat(numberFormat41);
        java.lang.Object obj44 = numberFormat41.clone();
        fractionFormat8.setNumeratorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction59 = fractionFormat56.parse("10");
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat56.parse("10");
        org.apache.commons.math.fraction.Fraction fraction63 = fractionFormat56.parse("10");
        java.lang.String str64 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction63);
        java.lang.String str65 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction63);
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = fractionFormat8.format(fraction63, stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "10 / 1" + "'", str64, "10 / 1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "10 / 1" + "'", str65, "10 / 1");
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat11.parse("-1 / 1");
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat32);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat62);
        fractionFormat41.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.lang.Object obj81 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat77.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        fractionFormat41.setDenominatorFormat(numberFormat82);
        fractionFormat38.setDenominatorFormat(numberFormat82);
        fractionFormat11.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat88 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction90 = fractionFormat11.parse("100 / 1");
        java.text.NumberFormat numberFormat91 = fractionFormat11.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10L + "'", obj29, 10L);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat29.parse("10", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.lang.Object obj11 = fractionFormat10.clone();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        java.lang.Object obj13 = null;
        java.lang.StringBuffer stringBuffer14 = null;
        java.text.FieldPosition fieldPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer16 = fractionFormat10.format(obj13, stringBuffer14, fieldPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat85);
        fractionFormat45.setDenominatorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        java.text.ParsePosition parsePosition92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction93 = fractionFormat90.parse("10 / 1", parsePosition92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat15.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        fractionFormat30.setNumeratorFormat(numberFormat44);
        fractionFormat15.setDenominatorFormat(numberFormat44);
        java.lang.Object obj48 = numberFormat44.clone();
        java.lang.Object obj49 = numberFormat44.clone();
        fractionFormat2.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat51 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = fractionFormat2.format((java.lang.Object) numberFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat50);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        java.text.NumberFormat numberFormat76 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat80);
        java.lang.Object obj83 = fractionFormat82.clone();
        org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat82.parse("10 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat82.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator87 = numberFormat33.formatToCharacterIterator((java.lang.Object) numberFormat86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(numberFormat86);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat56);
        fractionFormat35.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat35.setDenominatorFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat76);
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat81.parse("-1 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat81.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = fractionFormat81.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        java.lang.Object obj51 = numberFormat35.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat40);
        java.lang.Object obj45 = numberFormat40.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat64);
        fractionFormat46.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator68 = numberFormat40.formatToCharacterIterator((java.lang.Object) fractionFormat67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        java.lang.Object obj32 = numberFormat19.parseObject("0");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat53);
        java.lang.Object obj56 = numberFormat53.parseObject("0 / 1");
        fractionFormat33.setNumeratorFormat(numberFormat53);
        java.text.NumberFormat numberFormat58 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        fractionFormat33.setDenominatorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat76 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat77.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        java.text.NumberFormat numberFormat89 = fractionFormat88.getDenominatorFormat();
        fractionFormat77.setDenominatorFormat(numberFormat89);
        java.text.NumberFormat numberFormat91 = fractionFormat77.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat91);
        fractionFormat33.setDenominatorFormat(numberFormat76);
        java.text.NumberFormat numberFormat94 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat95 = fractionFormat33.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator96 = numberFormat19.formatToCharacterIterator((java.lang.Object) numberFormat95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0L + "'", obj32, 0L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0L + "'", obj56, 0L);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        fractionFormat11.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat45 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat11.parse("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        fractionFormat59.setNumeratorFormat(numberFormat63);
        org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat59.parse("0 / 1");
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = fractionFormat11.format(fraction71, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fraction71);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat65);
        java.lang.Object obj67 = numberFormat65.clone();
        fractionFormat48.setNumeratorFormat(numberFormat65);
        java.text.NumberFormat numberFormat69 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69);
        fractionFormat2.setNumeratorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj78 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = null;
        java.text.NumberFormat numberFormat80 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat80);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        java.text.NumberFormat numberFormat83 = fractionFormat81.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        fractionFormat81.setNumeratorFormat(numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj91 = fractionFormat89.parseObject("0 / 1");
        java.text.NumberFormat numberFormat92 = fractionFormat89.getNumeratorFormat();
        fractionFormat81.setNumeratorFormat(numberFormat92);
        java.lang.Object obj95 = numberFormat92.parseObject("0 / 1");
        fractionFormat72.setNumeratorFormat(numberFormat92);
        java.text.NumberFormat numberFormat97 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat98 = fractionFormat72.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator99 = numberFormat69.formatToCharacterIterator((java.lang.Object) fractionFormat72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNull(numberFormat82);
        org.junit.Assert.assertNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 0L + "'", obj95, 0L);
        org.junit.Assert.assertNotNull(numberFormat97);
        org.junit.Assert.assertNotNull(numberFormat98);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat47.parse("0", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.ParsePosition parsePosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = fractionFormat44.parseObject("-1 / 1", parsePosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.ParsePosition parsePosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat53.parse("100 / 1", parsePosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat17 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat0.formatToCharacterIterator((java.lang.Object) fractionFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        java.lang.String str38 = numberFormat34.format((java.lang.Object) (short) 10);
        fractionFormat0.setNumeratorFormat(numberFormat34);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat48);
        java.lang.Object obj50 = numberFormat48.clone();
        java.lang.String str52 = numberFormat48.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        fractionFormat55.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat72);
        java.lang.Object obj85 = fractionFormat84.clone();
        java.lang.Object obj86 = fractionFormat84.clone();
        java.lang.String str88 = fractionFormat84.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction90 = fractionFormat84.parse("100");
        java.lang.String str91 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction90);
        java.lang.StringBuffer stringBuffer92 = null;
        java.text.FieldPosition fieldPosition93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer94 = fractionFormat0.format(fraction90, stringBuffer92, fieldPosition93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "10" + "'", str38, "10");
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "10" + "'", str52, "10");
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "0 / 1" + "'", str88, "0 / 1");
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "100 / 1" + "'", str91, "100 / 1");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat24.parse("0");
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        fractionFormat32.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat64);
        java.lang.Object obj66 = numberFormat64.clone();
        fractionFormat47.setNumeratorFormat(numberFormat64);
        fractionFormat32.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.Fraction fraction70 = fractionFormat32.parse("10");
        java.text.NumberFormat numberFormat71 = null;
        java.text.NumberFormat numberFormat72 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        fractionFormat73.setNumeratorFormat(numberFormat79);
        java.lang.Object obj81 = numberFormat79.clone();
        java.lang.String str83 = numberFormat79.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat88.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat91 = fractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat91);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat87);
        fractionFormat32.setDenominatorFormat(numberFormat79);
        java.text.NumberFormat numberFormat95 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat96 = fractionFormat32.getDenominatorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat96);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNull(numberFormat74);
        org.junit.Assert.assertNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "10" + "'", str83, "10");
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        fractionFormat15.setNumeratorFormat(numberFormat19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = numberFormat19.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat10.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }
}

