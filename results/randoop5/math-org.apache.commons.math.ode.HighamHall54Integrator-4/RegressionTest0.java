import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations5 = null;
        double[] doubleArray10 = new double[] { 10, (byte) 100 };
        double[] doubleArray15 = new double[] { (-1.0f), 10.0d, '4' };
        double[] doubleArray22 = new double[] { 10, 10L, 1.0d, (-1), ' ', 0 };
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        double[] doubleArray30 = new double[] { (short) 0, (-1.0d) };
        // The following exception was thrown during execution in test generation
        try {
            double double31 = highamHall54Integrator4.initializeStep(firstOrderDifferentialEquations5, false, (int) 'a', doubleArray10, (double) (-1L), doubleArray15, doubleArray22, doubleArray27, doubleArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0, -1.0, 32.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, -1.0]");
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations6 = null;
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double[] doubleArray28 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray34 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray28, doubleArray34);
        double[] doubleArray41 = new double[] { '4', 5, '4' };
        double[] doubleArray47 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray53 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray47, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray41, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray67 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray61, doubleArray67);
        double[] doubleArray71 = new double[] { 10L, (byte) 100 };
        // The following exception was thrown during execution in test generation
        try {
            double double72 = highamHall54Integrator4.initializeStep(firstOrderDifferentialEquations6, false, (int) '4', doubleArray20, (double) 10L, doubleArray34, doubleArray41, doubleArray67, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 100.0]");
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 0, (double) 1.0f, (int) (short) 0);
        java.lang.Class<?> wildcardClass13 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations14 = null;
        double[] doubleArray20 = new double[] { (byte) -1, 100.0f, 100L, 100.0d };
        double[] doubleArray27 = new double[] { '4', 5, '4' };
        double[] doubleArray33 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray39 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray27, doubleArray33);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator12.integrate(firstOrderDifferentialEquations14, (double) (byte) 100, doubleArray20, (double) (-1.0f), doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray18 = new double[] { '4', 5, '4' };
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray18, doubleArray24);
        double[] doubleArray39 = new double[] { '4', 5, '4' };
        double[] doubleArray45 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray51 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray45, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray39, doubleArray45);
        double[] doubleArray59 = new double[] { '4', 5, '4' };
        double[] doubleArray65 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray71 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray65, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray59, doubleArray65);
        double[] doubleArray79 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray85 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray79, doubleArray85);
        double[] doubleArray91 = new double[] { 100, 0.0d, (-1.0f), (-1L) };
        // The following exception was thrown during execution in test generation
        try {
            double double92 = highamHall54Integrator4.initializeStep(firstOrderDifferentialEquations10, false, 10, doubleArray18, (double) 10, doubleArray39, doubleArray59, doubleArray85, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[51.48, 4.95, 51.48, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 0.0, -1.0, -1.0]");
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        int int6 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations7 = null;
        double[] doubleArray14 = new double[] { '4', 5, '4' };
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray14, doubleArray20);
        double[] doubleArray35 = new double[] { '4', 5, '4' };
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray35, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations7, (double) ' ', doubleArray20, 100.0d, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations8 = null;
        double[] doubleArray17 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray23 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray17, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray17, doubleArray25);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations8, 1.0d, doubleArray17, (double) '4', doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations11 = null;
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray22, doubleArray30);
        double[] doubleArray37 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray22, doubleArray37);
        double[] doubleArray41 = new double[] { 0.2d };
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations11, 0.0d, doubleArray22, (double) (-1.0f), doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.2]");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth((double) 0L);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations13 = null;
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray22, doubleArray30);
        double[] doubleArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations13, (-1.0d), doubleArray30, (double) 0.0f, doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        int int13 = highamHall54Integrator12.getOrder();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations14 = null;
        double[] doubleArray22 = new double[] { '4', 5, '4' };
        double[] doubleArray28 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray34 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray28, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray22, doubleArray28);
        double[] doubleArray43 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray49 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray43, doubleArray49);
        double[] doubleArray51 = null;
        double[] doubleArray59 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray65 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray59, doubleArray65);
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray59, doubleArray67);
        double[] doubleArray78 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray84 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray78, doubleArray84);
        double[] doubleArray86 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray78, doubleArray86);
        double[] doubleArray93 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray78, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = highamHall54Integrator12.initializeStep(firstOrderDifferentialEquations14, false, 10, doubleArray28, 7.211102550927978d, doubleArray43, doubleArray51, doubleArray59, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray24, doubleArray32);
        double[] doubleArray39 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray24, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray7, doubleArray39);
        java.lang.Class<?> wildcardClass42 = doubleArray7.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator12.setSafety(0.2d);
        java.lang.Class<?> wildcardClass22 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations11 = null;
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray22, doubleArray30);
        double[] doubleArray37 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray22, doubleArray37);
        double[] doubleArray45 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray51 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray45, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations11, (double) (byte) 10, doubleArray37, (double) 0.0f, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (-1.0f), 1.0d, 1);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray23 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray29 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray23, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray23, doubleArray31);
        double[] doubleArray38 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray23, doubleArray38);
        double[] doubleArray45 = new double[] { '4', 5, '4' };
        double[] doubleArray51 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray57 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray51, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray45, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray23, doubleArray45);
        double[] doubleArray67 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray73 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray67, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations10, (double) 1, doubleArray23, (double) 10L, doubleArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations7 = null;
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        double[] doubleArray42 = new double[] { '4', 5, '4' };
        double[] doubleArray48 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray54 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray48, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray42, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray20, doubleArray42);
        double[] doubleArray64 = new double[] { '4', 5, '4' };
        double[] doubleArray70 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray76 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray70, doubleArray76);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray64, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations7, 0.0d, doubleArray20, Double.NaN, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (short) 10, (double) (-1.0f), (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1, (double) (-1L), (double) (-1), (double) (-1.0f));
        double double5 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations9 = null;
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        double[] doubleArray49 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray55 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray49, doubleArray55);
        double[] doubleArray57 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray49, doubleArray57);
        double[] doubleArray64 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray49, doubleArray64);
        double[] doubleArray71 = new double[] { '4', 5, '4' };
        double[] doubleArray77 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray83 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray77, doubleArray83);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray71, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray49, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations9, 0.0d, doubleArray20, (double) (byte) 1, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNull(stepHandler8);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray9, doubleArray17);
        double[] doubleArray24 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray9, doubleArray24);
        int int26 = highamHall54Integrator25.getOrder();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations27 = null;
        double[] doubleArray34 = new double[] { '4', 5, '4' };
        double[] doubleArray40 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray46 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray40, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray34, doubleArray40);
        double[] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator25.integrate(firstOrderDifferentialEquations27, 0.2d, doubleArray34, (double) 100.0f, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) (-1L), (double) 0, 35.0d);
        double double5 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations6 = null;
        double[] doubleArray15 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray21 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray15, doubleArray21);
        double[] doubleArray28 = new double[] { '4', 5, '4' };
        double[] doubleArray34 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray40 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray34, doubleArray40);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray28, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray21, doubleArray34);
        double[] doubleArray54 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray60 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray54, doubleArray60);
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray54, doubleArray62);
        double[] doubleArray69 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray54, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations6, 0.0d, doubleArray34, (double) '#', doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (-1.0d), 35.0d, 0);
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '#');
        double double11 = highamHall54Integrator4.getMaxStep();
        java.lang.Class<?> wildcardClass12 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, 0.0d, (double) 10, (double) 1);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator48.getMinReduction();
        double double51 = highamHall54Integrator48.getMaxGrowth();
        highamHall54Integrator48.setMaxGrowth(10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) 10);
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator4.getMinReduction();
        int int25 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        int int9 = highamHall54Integrator4.getOrder();
        java.lang.Class<?> wildcardClass10 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMinReduction();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray12 = null;
        double[] doubleArray23 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray29 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray23, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray23, doubleArray31);
        double[] doubleArray44 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray50 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray44, doubleArray50);
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray44, doubleArray52);
        double[] doubleArray59 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray44, doubleArray59);
        double[] doubleArray66 = new double[] { '4', 5, '4' };
        double[] doubleArray72 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray78 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray72, doubleArray78);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray66, doubleArray72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray44, doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 10.0d, doubleArray31, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations10, (double) 100L, doubleArray12, (double) (byte) 100, doubleArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 1);
        double double9 = highamHall54Integrator4.getMinStep();
        double double10 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double7 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations8 = null;
        double[] doubleArray21 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray27 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray21, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray21, doubleArray29);
        double[] doubleArray36 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray21, doubleArray36);
        double[] doubleArray45 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray51 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray45, doubleArray51);
        double[] doubleArray58 = new double[] { '4', 5, '4' };
        double[] doubleArray64 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray70 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray64, doubleArray70);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray58, doubleArray64);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray51, doubleArray64);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 7.211102550927978d, doubleArray21, doubleArray51);
        double[] doubleArray81 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray87 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator88 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray81, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations8, (double) 100, doubleArray51, (double) 10, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction(1.0d);
        double double12 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        double double16 = highamHall54Integrator12.getSafety();
        double double17 = highamHall54Integrator12.getCurrentStepStart();
        java.lang.Class<?> wildcardClass18 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        java.lang.Class<?> wildcardClass6 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.2d);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations11 = null;
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray24, doubleArray32);
        double[] doubleArray39 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray24, doubleArray39);
        double[] doubleArray46 = new double[] { '4', 5, '4' };
        double[] doubleArray52 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray58 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray52, doubleArray58);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray46, doubleArray52);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray24, doubleArray46);
        double[] doubleArray68 = new double[] { '4', 5, '4' };
        double[] doubleArray74 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray80 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray74, doubleArray80);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray68, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations11, (double) (byte) 10, doubleArray24, (double) 0, doubleArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        double[] doubleArray5 = new double[] { '4', 5, '4' };
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator19.addSwitchingFunction(switchingFunction20, (-1.0d), 0.0d, 5);
        java.lang.Class<?> wildcardClass25 = highamHall54Integrator19.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations8 = null;
        double[] doubleArray14 = new double[] { 10.0d, (short) 10, 10.0d, 0 };
        double[] doubleArray25 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray31 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray25, doubleArray31);
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray25, doubleArray33);
        double[] doubleArray46 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray52 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray46, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray46, doubleArray54);
        double[] doubleArray61 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray46, doubleArray61);
        double[] doubleArray68 = new double[] { '4', 5, '4' };
        double[] doubleArray74 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray80 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray74, doubleArray80);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray68, doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray46, doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 10.0d, doubleArray33, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations8, (double) (byte) 1, doubleArray14, (double) (-1), doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations8 = null;
        double[] doubleArray15 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray21 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray15, doubleArray21);
        double[] doubleArray31 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray37 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray31, doubleArray37);
        double[] doubleArray46 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray52 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray46, doubleArray52);
        double[] doubleArray59 = new double[] { '4', 5, '4' };
        double[] doubleArray65 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray71 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray65, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray59, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray52, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray31, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations8, 0.0d, doubleArray15, (double) (byte) -1, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        double[] doubleArray10 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray10, doubleArray35);
        double[] doubleArray49 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray55 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray49, doubleArray55);
        double[] doubleArray57 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray49, doubleArray57);
        double[] doubleArray64 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray49, doubleArray64);
        double[] doubleArray71 = new double[] { '4', 5, '4' };
        double[] doubleArray77 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray83 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray77, doubleArray83);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray71, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray49, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 5, doubleArray35, doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        java.lang.Class<?> wildcardClass43 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        highamHall54Integrator12.setInitialStepSize((double) (byte) 100);
        double double20 = highamHall54Integrator12.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (byte) 10, (double) '4', 7.211102550927978d);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations5 = null;
        double[] doubleArray16 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray22 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray16, doubleArray22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray16, doubleArray24);
        double[] doubleArray31 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray16, doubleArray31);
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        double[] doubleArray56 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray62 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray56, doubleArray62);
        double[] doubleArray73 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray79 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray73, doubleArray79);
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray73, doubleArray81);
        double[] doubleArray88 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray73, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray56, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 1L, doubleArray47, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations5, 10.0d, doubleArray31, (double) 10.0f, doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str12 = highamHall54Integrator4.getName();
        java.lang.Class<?> wildcardClass13 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double16 = highamHall54Integrator4.getMinStep();
        int int17 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) 100L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.211102550927978d + "'", double13 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        java.lang.Class<?> wildcardClass13 = doubleArray5.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getMaxStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations16 = null;
        double[] doubleArray25 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray31 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray25, doubleArray31);
        double[] doubleArray38 = new double[] { '4', 5, '4' };
        double[] doubleArray44 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray50 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray44, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray38, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray31, doubleArray44);
        double[] doubleArray64 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray70 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray64, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray64, doubleArray72);
        double[] doubleArray79 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray64, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator12.integrate(firstOrderDifferentialEquations16, (double) (short) 100, doubleArray44, 52.0d, doubleArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator12.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator12.getStepHandler();
        java.lang.Class<?> wildcardClass23 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator12.setSafety(0.2d);
        double double22 = highamHall54Integrator12.getMinReduction();
        java.lang.String str23 = highamHall54Integrator12.getName();
        int int24 = highamHall54Integrator12.getOrder();
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double double38 = highamHall54Integrator37.getMinStep();
        highamHall54Integrator37.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double46 = highamHall54Integrator45.getMaxGrowth();
        double double47 = highamHall54Integrator45.getSafety();
        highamHall54Integrator45.setMaxGrowth((double) 5);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        org.apache.commons.math.ode.StepHandler stepHandler63 = highamHall54Integrator62.getStepHandler();
        highamHall54Integrator45.setStepHandler(stepHandler63);
        highamHall54Integrator37.setStepHandler(stepHandler63);
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler66);
        double double68 = highamHall54Integrator12.getSafety();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.9d + "'", double47 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.2d + "'", double68 == 0.2d);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertNull(stepHandler12);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double7 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) -1, 0.0d, 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        highamHall54Integrator12.setMinReduction(52.0d);
        double double19 = highamHall54Integrator12.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        java.lang.Class<?> wildcardClass20 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double8 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray9, doubleArray17);
        double[] doubleArray24 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray9, doubleArray24);
        java.lang.Class<?> wildcardClass26 = highamHall54Integrator25.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray26 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray32 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray26, doubleArray32);
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray26, doubleArray34);
        double[] doubleArray41 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray26, doubleArray41);
        double[] doubleArray50 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray56 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray50, doubleArray56);
        double[] doubleArray63 = new double[] { '4', 5, '4' };
        double[] doubleArray69 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray75 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray69, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray63, doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray56, doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 7.211102550927978d, doubleArray26, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 0.2d, doubleArray7, doubleArray26);
        java.lang.Class<?> wildcardClass81 = doubleArray7.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getCurrentStepStart();
        java.lang.Class<?> wildcardClass14 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setMaxGrowth(0.0d);
        java.lang.Class<?> wildcardClass21 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) '#');
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        highamHall54Integrator4.setMinReduction((double) (byte) 10);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations15 = null;
        double[] doubleArray22 = new double[] { '4', 5, '4' };
        double[] doubleArray28 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray34 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray28, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray22, doubleArray28);
        double[] doubleArray45 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray51 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray45, doubleArray51);
        double[] doubleArray60 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray66 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray60, doubleArray66);
        double[] doubleArray73 = new double[] { '4', 5, '4' };
        double[] doubleArray79 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray85 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray79, doubleArray85);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray73, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator88 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray66, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray45, doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations15, (double) 0L, doubleArray28, (double) ' ', doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', 2.23606797749979d, Double.NaN, (double) 0.0f);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator4.getStepHandler();
        double double25 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray35 = new double[] { '4', 5, '4' };
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray35, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray28, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray7, doubleArray28);
        highamHall54Integrator51.setMaxGrowth((double) 10.0f);
        double double54 = highamHall54Integrator51.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMaxGrowth();
        java.lang.Class<?> wildcardClass14 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getMinStep();
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        double double7 = highamHall54Integrator4.getMinStep();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations5 = null;
        double[] doubleArray16 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray22 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray16, doubleArray22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray16, doubleArray24);
        double[] doubleArray31 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray16, doubleArray31);
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray41, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations5, (double) '#', doubleArray31, (double) (byte) 10, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(52.0d);
        double double12 = highamHall54Integrator4.getSafety();
        java.lang.Class<?> wildcardClass13 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, 0.9d, (double) (-1L), (int) '#');
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray9, doubleArray17);
        double[] doubleArray24 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray9, doubleArray24);
        java.lang.String str26 = highamHall54Integrator25.getName();
        double double27 = highamHall54Integrator25.getSafety();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations28 = null;
        double[] doubleArray30 = null;
        double[] doubleArray43 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray49 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray43, doubleArray49);
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray43, doubleArray51);
        double[] doubleArray58 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray43, doubleArray58);
        double[] doubleArray67 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray73 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray67, doubleArray73);
        double[] doubleArray80 = new double[] { '4', 5, '4' };
        double[] doubleArray86 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray92 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray86, doubleArray92);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray80, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator95 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray73, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator96 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 7.211102550927978d, doubleArray43, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator25.integrate(firstOrderDifferentialEquations28, (double) 5, doubleArray30, Double.NaN, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator12.setSafety(0.2d);
        double double22 = highamHall54Integrator12.getMinReduction();
        java.lang.Class<?> wildcardClass23 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (byte) 10, (double) 10L, 10);
        highamHall54Integrator4.setInitialStepSize((double) 10);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.Class<?> wildcardClass13 = stepHandler12.getClass();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) ' ', 0.0d, (double) (short) 0);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator48.getMinReduction();
        double double51 = highamHall54Integrator48.getMaxGrowth();
        double double52 = highamHall54Integrator48.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        java.lang.Class<?> wildcardClass21 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        highamHall54Integrator12.setInitialStepSize(7.211102550927978d);
        double double18 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(1.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '#');
        double double11 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations7 = null;
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double[] doubleArray32 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray38 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray32, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray32, doubleArray40);
        double[] doubleArray53 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray59 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray53, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray53, doubleArray61);
        double[] doubleArray68 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray53, doubleArray68);
        double[] doubleArray75 = new double[] { '4', 5, '4' };
        double[] doubleArray81 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray87 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator88 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray81, doubleArray87);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray75, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray53, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 10.0d, doubleArray40, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations7, (double) 10L, doubleArray14, (double) ' ', doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        highamHall54Integrator12.setMinReduction(52.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction19, (double) 0, (double) ' ', (int) (byte) 0);
        java.lang.Class<?> wildcardClass24 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        java.lang.Class<?> wildcardClass14 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMinReduction();
        double double9 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray17 = new double[] { '4', 5, '4' };
        double[] doubleArray23 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray29 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray23, doubleArray29);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray17, doubleArray23);
        double[] doubleArray40 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray46 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray40, doubleArray46);
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray40, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations10, (double) ' ', doubleArray17, (double) 0.0f, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        highamHall54Integrator4.setSafety((double) 5);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double11 = highamHall54Integrator4.getMinReduction();
        double double12 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double22 = highamHall54Integrator21.getMaxGrowth();
        java.lang.String str23 = highamHall54Integrator21.getName();
        double double24 = highamHall54Integrator21.getSafety();
        int int25 = highamHall54Integrator21.getOrder();
        double double26 = highamHall54Integrator21.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double32 = highamHall54Integrator31.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator31.setStepHandler(stepHandler33);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction35, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double45 = highamHall54Integrator44.getMaxGrowth();
        double double46 = highamHall54Integrator44.getSafety();
        highamHall54Integrator44.setMaxGrowth((double) 5);
        double[] doubleArray54 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray60 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray54, doubleArray60);
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator61.getStepHandler();
        highamHall54Integrator44.setStepHandler(stepHandler62);
        highamHall54Integrator31.setStepHandler(stepHandler62);
        highamHall54Integrator21.setStepHandler(stepHandler62);
        highamHall54Integrator12.setStepHandler(stepHandler62);
        java.lang.Class<?> wildcardClass67 = stepHandler62.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 100, 35.0d, 0.0d);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray23 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray33 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray39 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray33, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray33, doubleArray41);
        double[] doubleArray48 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray33, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray23, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 5.0d, doubleArray7, doubleArray48);
        java.lang.Class<?> wildcardClass52 = doubleArray7.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 0.2d, 100.0d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction25, (double) 0.0f, (-1.0d), (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        highamHall54Integrator48.setMaxGrowth((double) ' ');
        highamHall54Integrator48.setMinReduction((double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, 0.0d, (double) (byte) -1, (double) (byte) 0);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(1.0d);
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray9, doubleArray17);
        double[] doubleArray28 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray34 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray28, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray28, doubleArray36);
        double[] doubleArray43 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray28, doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray17, doubleArray43);
        java.lang.Class<?> wildcardClass46 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray30, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray19, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray55, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 35.0d, doubleArray19, doubleArray63);
        double double66 = highamHall54Integrator65.getMinStep();
        double double67 = highamHall54Integrator65.getMinStep();
        highamHall54Integrator65.setInitialStepSize((double) (-1));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) (short) 10);
        highamHall54Integrator4.setInitialStepSize((double) 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) ' ');
        highamHall54Integrator4.setInitialStepSize(0.2d);
        java.lang.Class<?> wildcardClass21 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double16 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 1);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations19 = null;
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray51 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray57 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray51, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray51, doubleArray59);
        double[] doubleArray66 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray51, doubleArray66);
        double[] doubleArray73 = new double[] { '4', 5, '4' };
        double[] doubleArray79 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray85 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray79, doubleArray85);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray73, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator88 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray51, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 1.0d, doubleArray30, doubleArray73);
        double[] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations19, (double) 100L, doubleArray73, (double) (short) -1, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.211102550927978d + "'", double13 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double14 = highamHall54Integrator4.getMinReduction();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) '#', (double) (short) 1, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler16);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray19 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray25 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray19, doubleArray25);
        double[] doubleArray38 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray44 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray38, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray38, doubleArray46);
        double[] doubleArray53 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray38, doubleArray53);
        double[] doubleArray62 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray68 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray62, doubleArray68);
        double[] doubleArray75 = new double[] { '4', 5, '4' };
        double[] doubleArray81 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray87 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator88 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray81, doubleArray87);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray75, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray68, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 7.211102550927978d, doubleArray38, doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator92 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 0.2d, doubleArray19, doubleArray38);
        double[] doubleArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations10, (double) (short) 10, doubleArray19, (double) (short) -1, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        double double7 = highamHall54Integrator4.getMaxStep();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 35.0d, (double) (short) 0, (int) '#');
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray35 = new double[] { '4', 5, '4' };
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray35, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray28, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray7, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        highamHall54Integrator51.addSwitchingFunction(switchingFunction52, (double) (short) -1, (double) (short) 1, 0);
        double[] doubleArray64 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray70 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray64, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray64, doubleArray72);
        java.lang.String str74 = highamHall54Integrator73.getName();
        org.apache.commons.math.ode.StepHandler stepHandler75 = highamHall54Integrator73.getStepHandler();
        highamHall54Integrator51.setStepHandler(stepHandler75);
        java.lang.String str77 = highamHall54Integrator51.getName();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Higham-Hall 5(4)" + "'", str74, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Higham-Hall 5(4)" + "'", str77, "Higham-Hall 5(4)");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 10.0d, 0.0d, (double) (-1.0f));
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        java.lang.Class<?> wildcardClass19 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray30, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray19, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray55, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 35.0d, doubleArray19, doubleArray63);
        double double66 = highamHall54Integrator65.getMinStep();
        java.lang.Class<?> wildcardClass67 = highamHall54Integrator65.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '#');
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double[] doubleArray17 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray23 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray17, doubleArray23);
        double double25 = highamHall54Integrator24.getMinStep();
        highamHall54Integrator24.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double33 = highamHall54Integrator32.getMaxGrowth();
        double double34 = highamHall54Integrator32.getSafety();
        highamHall54Integrator32.setMaxGrowth((double) 5);
        double[] doubleArray42 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray48 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray42, doubleArray48);
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator49.getStepHandler();
        highamHall54Integrator32.setStepHandler(stepHandler50);
        highamHall54Integrator24.setStepHandler(stepHandler50);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler53);
        highamHall54Integrator4.setMinReduction(32.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler53);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 100.0d, (double) (short) 100, (int) (byte) 100);
        double double18 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxStep();
        java.lang.String str12 = highamHall54Integrator4.getName();
        java.lang.Class<?> wildcardClass13 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.2d);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setInitialStepSize((double) 100);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double19 = highamHall54Integrator18.getMaxGrowth();
        java.lang.String str20 = highamHall54Integrator18.getName();
        double double21 = highamHall54Integrator18.getSafety();
        int int22 = highamHall54Integrator18.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler23);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction25, (double) (byte) 0, (-1.0d), (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertNotNull(stepHandler23);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        int int13 = highamHall54Integrator4.getOrder();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double20 = highamHall54Integrator19.getMaxGrowth();
        java.lang.String str21 = highamHall54Integrator19.getName();
        double double22 = highamHall54Integrator19.getSafety();
        int int23 = highamHall54Integrator19.getOrder();
        double double24 = highamHall54Integrator19.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double30 = highamHall54Integrator29.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler31 = null;
        highamHall54Integrator29.setStepHandler(stepHandler31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator29.addSwitchingFunction(switchingFunction33, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double43 = highamHall54Integrator42.getMaxGrowth();
        double double44 = highamHall54Integrator42.getSafety();
        highamHall54Integrator42.setMaxGrowth((double) 5);
        double[] doubleArray52 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray58 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray52, doubleArray58);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator59.getStepHandler();
        highamHall54Integrator42.setStepHandler(stepHandler60);
        highamHall54Integrator29.setStepHandler(stepHandler60);
        highamHall54Integrator19.setStepHandler(stepHandler60);
        highamHall54Integrator4.setStepHandler(stepHandler60);
        double double65 = highamHall54Integrator4.getCurrentStepStart();
        double double66 = highamHall54Integrator4.getMinStep();
        double double67 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double68 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.9d + "'", double44 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 52.0d + "'", double66 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.211102550927978d + "'", double67 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        double double20 = highamHall54Integrator12.getMinStep();
        double double21 = highamHall54Integrator12.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double26 = highamHall54Integrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations30 = null;
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray39, doubleArray47);
        double[] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator12.integrate(firstOrderDifferentialEquations30, 2.23606797749979d, doubleArray39, (double) 10, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 0.0d, 32.0d, (double) 10.0f);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 10.0d, 0.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setSafety(5.0d);
        highamHall54Integrator4.setInitialStepSize(0.0d);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler9 = null;
        highamHall54Integrator4.setStepHandler(stepHandler9);
        highamHall54Integrator4.setSafety((double) 10L);
        double double13 = highamHall54Integrator4.getMaxGrowth();
        double double14 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNull(stepHandler15);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMaxStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator48.getMinReduction();
        highamHall54Integrator48.setInitialStepSize((double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getMaxStep();
        highamHall54Integrator12.setMinReduction(0.0d);
        java.lang.String str18 = highamHall54Integrator12.getName();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.2d);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 100L, (double) '#', (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) 0L);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) (byte) -1);
        double double15 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        highamHall54Integrator4.setMinReduction((double) 10);
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray26 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray32 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray26, doubleArray32);
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray26, doubleArray34);
        double[] doubleArray41 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray26, doubleArray41);
        double[] doubleArray50 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray56 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray50, doubleArray56);
        double[] doubleArray63 = new double[] { '4', 5, '4' };
        double[] doubleArray69 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray75 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray69, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray63, doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray56, doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 7.211102550927978d, doubleArray26, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 0.2d, doubleArray7, doubleArray26);
        highamHall54Integrator80.setSafety((double) 0);
        java.lang.String str83 = highamHall54Integrator80.getName();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) ' ');
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        double double12 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 0.2d, 100.0d, (int) (byte) 10);
        double double25 = highamHall54Integrator12.getCurrentStepStart();
        double double26 = highamHall54Integrator12.getCurrentStepStart();
        highamHall54Integrator12.setMaxGrowth(100.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double34 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator33.setStepHandler(stepHandler35);
        int int37 = highamHall54Integrator33.getOrder();
        double[] doubleArray43 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray49 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray43, doubleArray49);
        double double51 = highamHall54Integrator50.getMinStep();
        highamHall54Integrator50.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double59 = highamHall54Integrator58.getMaxGrowth();
        double double60 = highamHall54Integrator58.getSafety();
        highamHall54Integrator58.setMaxGrowth((double) 5);
        double[] doubleArray68 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray74 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray68, doubleArray74);
        org.apache.commons.math.ode.StepHandler stepHandler76 = highamHall54Integrator75.getStepHandler();
        highamHall54Integrator58.setStepHandler(stepHandler76);
        highamHall54Integrator50.setStepHandler(stepHandler76);
        highamHall54Integrator33.setStepHandler(stepHandler76);
        highamHall54Integrator12.setStepHandler(stepHandler76);
        double double81 = highamHall54Integrator12.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.9d + "'", double60 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler9 = null;
        highamHall54Integrator4.setStepHandler(stepHandler9);
        highamHall54Integrator4.setSafety((double) 10L);
        highamHall54Integrator4.setMinReduction((double) 100);
        double double15 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.Class<?> wildcardClass12 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction43, (double) 0, (double) '4', (int) '4');
        java.lang.Class<?> wildcardClass48 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler9 = null;
        highamHall54Integrator4.setStepHandler(stepHandler9);
        double double11 = highamHall54Integrator4.getMinReduction();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        double double15 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        java.lang.String str10 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double13 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction((double) (short) 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.9d + "'", double13 == 0.9d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getMaxStep();
        double double6 = highamHall54Integrator4.getMinReduction();
        double double7 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (-1.0f), 1.0d, 1);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        int int9 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) (byte) 0, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) 0.0f, (double) 100L, (int) ' ');
        java.lang.Class<?> wildcardClass20 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double8 = highamHall54Integrator4.getMaxGrowth();
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) (byte) 100);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction(2.23606797749979d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        java.lang.String str10 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double13 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction((double) (short) 100);
        double double16 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.9d + "'", double13 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator12.getStepHandler();
        double[] doubleArray49 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray55 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray49, doubleArray55);
        double double57 = highamHall54Integrator56.getMinStep();
        double double58 = highamHall54Integrator56.getMinStep();
        double double59 = highamHall54Integrator56.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler60);
        double double62 = highamHall54Integrator12.getMaxGrowth();
        double double63 = highamHall54Integrator12.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction(7.211102550927978d);
        java.lang.String str11 = highamHall54Integrator4.getName();
        java.lang.String str12 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        double[] doubleArray10 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray10, doubleArray35);
        double[] doubleArray47 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray53 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray47, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray47, doubleArray55);
        double[] doubleArray62 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray47, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 1, doubleArray35, doubleArray47);
        double double65 = highamHall54Integrator64.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (short) -1);
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator48.addSwitchingFunction(switchingFunction50, (double) 10, (double) (byte) 100, (int) (byte) -1);
        double double55 = highamHall54Integrator48.getMinStep();
        double double56 = highamHall54Integrator48.getSafety();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9d + "'", double56 == 0.9d);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        java.lang.String str19 = highamHall54Integrator12.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 1.0d, 35.0d, (int) (byte) 10);
        highamHall54Integrator12.setMaxGrowth((double) 10.0f);
        highamHall54Integrator12.setMinReduction((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator12.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double35 = highamHall54Integrator34.getCurrentStepStart();
        double double36 = highamHall54Integrator34.getCurrentSignedStepsize();
        highamHall54Integrator34.setInitialStepSize((-1.0d));
        highamHall54Integrator34.setMinReduction((double) 10.0f);
        double double41 = highamHall54Integrator34.getCurrentStepStart();
        highamHall54Integrator34.setMinReduction(100.0d);
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler44);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(stepHandler44);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray17 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray23 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray17, doubleArray23);
        double[] doubleArray36 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray46 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray52 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray46, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray46, doubleArray54);
        double[] doubleArray61 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray46, doubleArray61);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray36, doubleArray61);
        double[] doubleArray73 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray79 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray73, doubleArray79);
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray73, doubleArray81);
        double[] doubleArray88 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray73, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 1, doubleArray61, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations10, (double) (-1L), doubleArray17, 1.0d, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) 0L, (double) 100.0f, Double.NaN);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations9 = null;
        double[] doubleArray13 = new double[] {};
        double[] doubleArray22 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray32 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray38 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray32, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray32, doubleArray40);
        double[] doubleArray47 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray32, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray22, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) '4', doubleArray13, doubleArray47);
        double[] doubleArray54 = new double[] {};
        double[] doubleArray63 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray73 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray79 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray73, doubleArray79);
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray73, doubleArray81);
        double[] doubleArray88 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray73, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray63, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) '4', doubleArray54, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations9, 0.0d, doubleArray13, 100.0d, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        double double6 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 10.0f, (double) (byte) -1, (int) (short) -1);
        double double12 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth((double) 1);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray17 = new double[] { '4', 5, '4' };
        double[] doubleArray23 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray29 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray23, doubleArray29);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray17, doubleArray23);
        double[] doubleArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations10, (double) (-1.0f), doubleArray23, (-1.0d), doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        double double19 = highamHall54Integrator12.getCurrentStepStart();
        highamHall54Integrator12.setSafety((double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (short) 0, (double) ' ', 1.0d);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        double double63 = highamHall54Integrator62.getMinStep();
        highamHall54Integrator62.setSafety(0.0d);
        java.lang.String str66 = highamHall54Integrator62.getName();
        double double67 = highamHall54Integrator62.getMaxStep();
        int int68 = highamHall54Integrator62.getOrder();
        highamHall54Integrator62.setMinReduction((-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double76 = highamHall54Integrator75.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator75.getStepHandler();
        highamHall54Integrator62.setStepHandler(stepHandler77);
        highamHall54Integrator48.setStepHandler(stepHandler77);
        highamHall54Integrator48.setSafety(0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Higham-Hall 5(4)" + "'", str66, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler77);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double11 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction((double) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getMinReduction();
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 0.2d, 100.0d, (int) (byte) 10);
        double double25 = highamHall54Integrator12.getCurrentStepStart();
        int int26 = highamHall54Integrator12.getOrder();
        java.lang.Class<?> wildcardClass27 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMinReduction(100.0d);
        highamHall54Integrator4.setInitialStepSize(52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (-1));
        double double10 = highamHall54Integrator4.getSafety();
        double double11 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, 0.0d, (double) (byte) -1, (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (-1));
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        double double17 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(52.0d);
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, 2.23606797749979d, (double) (short) 100, 0);
        double double19 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction((-1.0d));
        java.lang.Class<?> wildcardClass17 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.211102550927978d + "'", double14 == 7.211102550927978d);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double double9 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str10 = highamHall54Integrator4.getName();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getSafety();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 5.0d + "'", double9 == 5.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.9d + "'", double13 == 0.9d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 5.0d + "'", double14 == 5.0d);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double26 = highamHall54Integrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator12.getCurrentSignedStepsize();
        double double30 = highamHall54Integrator12.getSafety();
        double double31 = highamHall54Integrator12.getMinStep();
        double double32 = highamHall54Integrator12.getMinStep();
        java.lang.Class<?> wildcardClass33 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray30, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray19, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        double[] doubleArray68 = new double[] { '4', 5, '4' };
        double[] doubleArray74 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray80 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray74, doubleArray80);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray68, doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray61, doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) (byte) 0, doubleArray19, doubleArray61);
        double double85 = highamHall54Integrator84.getMinReduction();
        double double86 = highamHall54Integrator84.getSafety();
        highamHall54Integrator84.setInitialStepSize((double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.2d + "'", double85 == 0.2d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.9d + "'", double86 == 0.9d);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth((double) 0L);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        java.lang.Class<?> wildcardClass15 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray11 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray21 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray27 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray21, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray21, doubleArray29);
        double[] doubleArray36 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray21, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray11, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) '4', doubleArray2, doubleArray36);
        java.lang.Class<?> wildcardClass40 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        int int7 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray30, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray19, doubleArray45);
        double[] doubleArray56 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray66 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray72 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray66, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray66, doubleArray74);
        double[] doubleArray81 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray66, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray56, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator(2.23606797749979d, (double) 100L, doubleArray45, doubleArray81);
        int int85 = highamHall54Integrator84.getOrder();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMinReduction();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        double double9 = highamHall54Integrator4.getMinStep();
        double double10 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double8 = highamHall54Integrator4.getMaxGrowth();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass10 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        double double7 = highamHall54Integrator4.getMaxStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 0.2d, 100.0d, (int) (byte) 10);
        double double25 = highamHall54Integrator12.getCurrentStepStart();
        double double26 = highamHall54Integrator12.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setMinReduction((double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator14.setMinReduction((double) 0.0f);
        int int17 = highamHall54Integrator14.getOrder();
        double double18 = highamHall54Integrator14.getCurrentSignedStepsize();
        highamHall54Integrator14.setInitialStepSize((double) 10.0f);
        double double21 = highamHall54Integrator14.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator14.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 7.211102550927978d + "'", double9 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray11 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray21 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray27 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray21, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray21, doubleArray29);
        double[] doubleArray36 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray21, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray11, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) '4', doubleArray2, doubleArray36);
        java.lang.String str40 = highamHall54Integrator39.getName();
        double double41 = highamHall54Integrator39.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setInitialStepSize((double) 100);
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        java.lang.Class<?> wildcardClass15 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray26 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray32 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray26, doubleArray32);
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray26, doubleArray34);
        double[] doubleArray41 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray26, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray9, doubleArray41);
        double[] doubleArray53 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray59 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray53, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray53, doubleArray61);
        double[] doubleArray68 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray53, doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator(7.211102550927978d, (double) (short) -1, doubleArray9, doubleArray53);
        double double71 = highamHall54Integrator70.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 7.211102550927978d + "'", double71 == 7.211102550927978d);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setMinReduction(52.0d);
        double double7 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double13 = highamHall54Integrator12.getMinReduction();
        double[] doubleArray19 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray25 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray19, doubleArray25);
        double double27 = highamHall54Integrator26.getMinStep();
        highamHall54Integrator26.setSafety(0.0d);
        java.lang.String str30 = highamHall54Integrator26.getName();
        double double31 = highamHall54Integrator26.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler32);
        highamHall54Integrator4.setStepHandler(stepHandler32);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler32);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 1, (double) (short) 10, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(52.0d);
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getMaxStep();
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 0, (double) 1.0f, (int) (short) 0);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler15 = null;
        highamHall54Integrator4.setStepHandler(stepHandler15);
        highamHall54Integrator4.setMaxGrowth((double) (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNull(stepHandler14);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler9 = null;
        highamHall54Integrator4.setStepHandler(stepHandler9);
        highamHall54Integrator4.setSafety((double) 10L);
        highamHall54Integrator4.setSafety((double) 0.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '#');
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        double[] doubleArray19 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray25 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray19, doubleArray25);
        double double27 = highamHall54Integrator26.getMinStep();
        highamHall54Integrator26.setSafety(0.0d);
        java.lang.String str30 = highamHall54Integrator26.getName();
        double double31 = highamHall54Integrator26.getMaxStep();
        double double32 = highamHall54Integrator26.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double38 = highamHall54Integrator37.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator37.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        highamHall54Integrator37.addSwitchingFunction(switchingFunction40, (double) 1, 10.0d, (int) (short) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double50 = highamHall54Integrator49.getCurrentStepStart();
        double double51 = highamHall54Integrator49.getCurrentStepStart();
        double double52 = highamHall54Integrator49.getSafety();
        double double53 = highamHall54Integrator49.getMaxStep();
        double double54 = highamHall54Integrator49.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator49.getStepHandler();
        highamHall54Integrator37.setStepHandler(stepHandler55);
        highamHall54Integrator26.setStepHandler(stepHandler55);
        highamHall54Integrator4.setStepHandler(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertNull(stepHandler13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9d + "'", double52 == 0.9d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth(100.0d);
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) (byte) 10, 0.0d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 10.0d, (double) 5, (int) '4');
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator48.getMinReduction();
        double double51 = highamHall54Integrator48.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        highamHall54Integrator48.addSwitchingFunction(switchingFunction52, (double) 1.0f, 32.0d, (int) '#');
        double double57 = highamHall54Integrator48.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double63 = highamHall54Integrator62.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator62.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        highamHall54Integrator62.addSwitchingFunction(switchingFunction65, (double) 1, 10.0d, (int) (short) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double75 = highamHall54Integrator74.getCurrentStepStart();
        double double76 = highamHall54Integrator74.getCurrentStepStart();
        double double77 = highamHall54Integrator74.getSafety();
        double double78 = highamHall54Integrator74.getMaxStep();
        double double79 = highamHall54Integrator74.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler80 = highamHall54Integrator74.getStepHandler();
        highamHall54Integrator62.setStepHandler(stepHandler80);
        highamHall54Integrator48.setStepHandler(stepHandler80);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2d + "'", double57 == 0.2d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler80);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray24, doubleArray32);
        double[] doubleArray39 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray24, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray7, doubleArray39);
        java.lang.String str42 = highamHall54Integrator41.getName();
        double double43 = highamHall54Integrator41.getMinReduction();
        int int44 = highamHall54Integrator41.getOrder();
        double double45 = highamHall54Integrator41.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2d + "'", double43 == 0.2d);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 0.0d, 32.0d, (double) 10.0f);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray14, doubleArray22);
        double[] doubleArray29 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray14, doubleArray29);
        java.lang.String str31 = highamHall54Integrator30.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double37 = highamHall54Integrator36.getMaxGrowth();
        java.lang.String str38 = highamHall54Integrator36.getName();
        double double39 = highamHall54Integrator36.getSafety();
        int int40 = highamHall54Integrator36.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler41);
        highamHall54Integrator4.setStepHandler(stepHandler41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction44, 5.0d, 5.0d, (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNotNull(stepHandler41);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        int int13 = highamHall54Integrator4.getOrder();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double20 = highamHall54Integrator19.getMaxGrowth();
        java.lang.String str21 = highamHall54Integrator19.getName();
        double double22 = highamHall54Integrator19.getSafety();
        int int23 = highamHall54Integrator19.getOrder();
        double double24 = highamHall54Integrator19.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double30 = highamHall54Integrator29.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler31 = null;
        highamHall54Integrator29.setStepHandler(stepHandler31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator29.addSwitchingFunction(switchingFunction33, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double43 = highamHall54Integrator42.getMaxGrowth();
        double double44 = highamHall54Integrator42.getSafety();
        highamHall54Integrator42.setMaxGrowth((double) 5);
        double[] doubleArray52 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray58 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray52, doubleArray58);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator59.getStepHandler();
        highamHall54Integrator42.setStepHandler(stepHandler60);
        highamHall54Integrator29.setStepHandler(stepHandler60);
        highamHall54Integrator19.setStepHandler(stepHandler60);
        highamHall54Integrator4.setStepHandler(stepHandler60);
        double double65 = highamHall54Integrator4.getCurrentStepStart();
        double double66 = highamHall54Integrator4.getMinStep();
        double double67 = highamHall54Integrator4.getMinStep();
        double double68 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.9d + "'", double44 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 52.0d + "'", double66 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.2d + "'", double68 == 0.2d);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        double[] doubleArray13 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray19 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray13, doubleArray19);
        double[] doubleArray21 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray13, doubleArray21);
        double[] doubleArray28 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray13, doubleArray28);
        double[] doubleArray37 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray43 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray37, doubleArray43);
        double[] doubleArray50 = new double[] { '4', 5, '4' };
        double[] doubleArray56 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray62 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray56, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray50, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray43, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 7.211102550927978d, doubleArray13, doubleArray43);
        double[] doubleArray76 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray82 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray76, doubleArray82);
        double[] doubleArray84 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray76, doubleArray84);
        double[] doubleArray91 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator92 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray76, doubleArray91);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, 0.9d, doubleArray13, doubleArray91);
        double double94 = highamHall54Integrator93.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.2d + "'", double94 == 0.2d);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        double double17 = highamHall54Integrator4.getSafety();
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.Class<?> wildcardClass19 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) (short) 100, (double) '#', 0.0d);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double double22 = highamHall54Integrator21.getMinStep();
        highamHall54Integrator21.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double30 = highamHall54Integrator29.getMaxGrowth();
        double double31 = highamHall54Integrator29.getSafety();
        highamHall54Integrator29.setMaxGrowth((double) 5);
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler47);
        highamHall54Integrator21.setStepHandler(stepHandler47);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction51, (double) '4', (double) 100.0f, 1);
        double double56 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) ' ', (double) (-1L), (int) (short) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double5 = highamHall54Integrator4.getMinReduction();
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double double19 = highamHall54Integrator18.getMinStep();
        highamHall54Integrator18.setSafety(0.0d);
        java.lang.String str22 = highamHall54Integrator18.getName();
        double double23 = highamHall54Integrator18.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler24);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 0L);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler26);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 7.211102550927978d, (double) ' ', (double) (short) 0);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        highamHall54Integrator4.setMinReduction((double) 1);
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNull(stepHandler10);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        highamHall54Integrator4.setSafety((double) (short) -1);
        highamHall54Integrator4.setMinReduction(35.0d);
        double double9 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) '4', (double) (short) 1, 0.0d);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        double[] doubleArray10 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray10, doubleArray35);
        double[] doubleArray47 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray53 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray47, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray47, doubleArray55);
        double[] doubleArray62 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray47, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 1, doubleArray35, doubleArray47);
        double double65 = highamHall54Integrator64.getSafety();
        java.lang.Class<?> wildcardClass66 = highamHall54Integrator64.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.9d + "'", double65 == 0.9d);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 100.0d, (double) (short) 100, (int) (byte) 100);
        double double18 = highamHall54Integrator4.getMinStep();
        double double19 = highamHall54Integrator4.getMinStep();
        double double20 = highamHall54Integrator4.getMaxStep();
        java.lang.Class<?> wildcardClass21 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.0d, 0.0d, (double) (short) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double10 = highamHall54Integrator9.getCurrentStepStart();
        double double11 = highamHall54Integrator9.getCurrentSignedStepsize();
        highamHall54Integrator9.setMaxGrowth((double) 100);
        double[] doubleArray21 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray27 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray21, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray21, doubleArray29);
        java.lang.String str31 = highamHall54Integrator30.getName();
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator9.setStepHandler(stepHandler32);
        highamHall54Integrator4.setStepHandler(stepHandler32);
        highamHall54Integrator4.setMinReduction(7.211102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler32);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 10, (double) (-1L), (int) (byte) 1);
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double17 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        double[] doubleArray5 = new double[] { '4', 5, '4' };
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator19.addSwitchingFunction(switchingFunction20, (-1.0d), 0.0d, 5);
        double double25 = highamHall54Integrator19.getCurrentStepStart();
        int int26 = highamHall54Integrator19.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double32 = highamHall54Integrator31.getCurrentStepStart();
        double double33 = highamHall54Integrator31.getCurrentStepStart();
        double double34 = highamHall54Integrator31.getSafety();
        double double35 = highamHall54Integrator31.getMaxStep();
        double double36 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator31.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler38);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertNotNull(stepHandler38);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.211102550927978d + "'", double16 == 7.211102550927978d);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getMinReduction();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.211102550927978d + "'", double7 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) -1, 100.0d, 0.0d);
        double double5 = highamHall54Integrator4.getSafety();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (short) 100, 0.2d, (int) (byte) 0);
        double double14 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double18 = highamHall54Integrator17.getMaxGrowth();
        double double19 = highamHall54Integrator17.getSafety();
        highamHall54Integrator17.setMaxGrowth((double) 5);
        double[] doubleArray27 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray33 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray27, doubleArray33);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler35);
        highamHall54Integrator4.setStepHandler(stepHandler35);
        highamHall54Integrator4.setSafety((double) (-1));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler35);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMinReduction();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        int int9 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) (byte) 0, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) 0.0f, (double) 100L, (int) ' ');
        highamHall54Integrator4.setMaxGrowth((double) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        java.lang.String str21 = highamHall54Integrator12.getName();
        double double22 = highamHall54Integrator12.getMinStep();
        double double23 = highamHall54Integrator12.getMaxStep();
        java.lang.Class<?> wildcardClass24 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        java.lang.Class<?> wildcardClass7 = stepHandler6.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 100, 10.0d, (double) 1L);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (byte) 1, (double) (byte) 0, (double) (short) 10);
        highamHall54Integrator4.setInitialStepSize(0.9d);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double double22 = highamHall54Integrator21.getMinStep();
        highamHall54Integrator21.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double30 = highamHall54Integrator29.getMaxGrowth();
        double double31 = highamHall54Integrator29.getSafety();
        highamHall54Integrator29.setMaxGrowth((double) 5);
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler47);
        highamHall54Integrator21.setStepHandler(stepHandler47);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        double double51 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.9d + "'", double51 == 0.9d);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        highamHall54Integrator4.setSafety((double) '4');
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMinReduction();
        double double9 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) (byte) -1, 2.23606797749979d, (int) ' ');
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.211102550927978d + "'", double15 == 7.211102550927978d);
        org.junit.Assert.assertNotNull(stepHandler16);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMaxStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setInitialStepSize((double) 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        highamHall54Integrator4.setSafety((double) (short) -1);
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction(7.211102550927978d);
        java.lang.Class<?> wildcardClass11 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, 52.0d, 100.0d, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator48.getMinReduction();
        double double51 = highamHall54Integrator48.getMaxGrowth();
        java.lang.Class<?> wildcardClass52 = highamHall54Integrator48.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        int int14 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        double double18 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double24 = highamHall54Integrator23.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator23.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator23.addSwitchingFunction(switchingFunction26, (double) 1, 10.0d, (int) (short) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double36 = highamHall54Integrator35.getCurrentStepStart();
        double double37 = highamHall54Integrator35.getCurrentStepStart();
        double double38 = highamHall54Integrator35.getSafety();
        double double39 = highamHall54Integrator35.getMaxStep();
        double double40 = highamHall54Integrator35.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler41);
        highamHall54Integrator12.setStepHandler(stepHandler41);
        double double44 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations7 = null;
        double[] doubleArray17 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray27 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray33 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray27, doubleArray33);
        double[] doubleArray35 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray27, doubleArray35);
        double[] doubleArray42 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray27, doubleArray42);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray17, doubleArray42);
        double[] doubleArray53 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray59 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray53, doubleArray59);
        double[] doubleArray70 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray76 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray70, doubleArray76);
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray70, doubleArray78);
        double[] doubleArray85 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray70, doubleArray85);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray53, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations7, (double) (short) 10, doubleArray17, (double) (byte) 0, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getMinStep();
        double double13 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) (byte) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMaxGrowth();
        highamHall54Integrator12.setInitialStepSize((double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        double double8 = highamHall54Integrator4.getMinReduction();
        double double9 = highamHall54Integrator4.getMinReduction();
        int int10 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) 100);
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        double double8 = highamHall54Integrator4.getMinStep();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        highamHall54Integrator4.setMaxGrowth((double) 1.0f);
        highamHall54Integrator4.setInitialStepSize(35.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        double double18 = highamHall54Integrator12.getMinStep();
        double double19 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety((double) (byte) -1);
        int int22 = highamHall54Integrator12.getOrder();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        int int13 = highamHall54Integrator12.getOrder();
        double double14 = highamHall54Integrator12.getCurrentStepStart();
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator27.setMinReduction((double) (byte) 100);
        double double31 = highamHall54Integrator27.getMaxGrowth();
        int int32 = highamHall54Integrator27.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler33);
        int int35 = highamHall54Integrator12.getOrder();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        double double15 = highamHall54Integrator4.getMaxGrowth();
        double double16 = highamHall54Integrator4.getSafety();
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getMinReduction();
        double double7 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        java.lang.Class<?> wildcardClass10 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        int int43 = highamHall54Integrator12.getOrder();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), (double) 5, (double) 5, 0.9d);
        highamHall54Integrator4.setMaxGrowth(0.2d);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double14 = highamHall54Integrator4.getMinReduction();
        double double15 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator20.getStepHandler();
        double double23 = highamHall54Integrator20.getMaxStep();
        java.lang.String str24 = highamHall54Integrator20.getName();
        highamHall54Integrator20.setInitialStepSize((double) (-1L));
        highamHall54Integrator20.setSafety(5.0d);
        highamHall54Integrator20.setMaxGrowth((double) (short) 0);
        double double31 = highamHall54Integrator20.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double37 = highamHall54Integrator36.getCurrentStepStart();
        double double38 = highamHall54Integrator36.getCurrentSignedStepsize();
        highamHall54Integrator36.setInitialStepSize((-1.0d));
        highamHall54Integrator36.setMinReduction((double) 10.0f);
        highamHall54Integrator36.setInitialStepSize((double) 100);
        double double45 = highamHall54Integrator36.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double51 = highamHall54Integrator50.getMaxGrowth();
        java.lang.String str52 = highamHall54Integrator50.getName();
        double double53 = highamHall54Integrator50.getSafety();
        int int54 = highamHall54Integrator50.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator50.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler57);
        highamHall54Integrator4.setStepHandler(stepHandler57);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.9d + "'", double53 == 0.9d);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        double double17 = highamHall54Integrator4.getMinStep();
        java.lang.String str18 = highamHall54Integrator4.getName();
        java.lang.Class<?> wildcardClass19 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double26 = highamHall54Integrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator12.getCurrentSignedStepsize();
        double double30 = highamHall54Integrator12.getSafety();
        double double31 = highamHall54Integrator12.getMinStep();
        int int32 = highamHall54Integrator12.getOrder();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) (-1L), (double) 0, 35.0d);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double12 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize(32.0d);
        highamHall54Integrator4.setMaxGrowth((double) 10.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(52.0d);
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getMaxStep();
        int int14 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getSafety();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) 10);
        double double9 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double8 = highamHall54Integrator4.getMinStep();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction19, 2.23606797749979d, (-1.0d), (int) 'a');
        highamHall54Integrator12.setMaxGrowth((double) ' ');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) ' ');
        highamHall54Integrator4.setMinReduction(0.9d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 0.0d, (double) (short) 0, 5);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) (byte) 100);
        double double16 = highamHall54Integrator12.getMaxGrowth();
        highamHall54Integrator12.setSafety(5.0d);
        highamHall54Integrator12.setMinReduction((double) 5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMinStep();
        java.lang.Class<?> wildcardClass8 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (short) -1);
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) 'a', (double) 100, Double.NaN);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        int int6 = highamHall54Integrator4.getOrder();
        int int7 = highamHall54Integrator4.getOrder();
        java.lang.Class<?> wildcardClass8 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray7, doubleArray15);
        java.lang.String str17 = highamHall54Integrator16.getName();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator16.getStepHandler();
        double double19 = highamHall54Integrator16.getMaxStep();
        double double20 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction18, 7.211102550927978d, (double) 'a', (int) '#');
        double double23 = highamHall54Integrator12.getSafety();
        double double24 = highamHall54Integrator12.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9d + "'", double23 == 0.9d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) '#', (double) 0, (-1));
        double double11 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) (-1L), (double) 0, 35.0d);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 0.0d, 32.0d, (double) 10.0f);
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        java.lang.String str37 = highamHall54Integrator36.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double43 = highamHall54Integrator42.getMaxGrowth();
        java.lang.String str44 = highamHall54Integrator42.getName();
        double double45 = highamHall54Integrator42.getSafety();
        int int46 = highamHall54Integrator42.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler47);
        highamHall54Integrator10.setStepHandler(stepHandler47);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        double double51 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2d + "'", double51 == 0.2d);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setMinReduction(52.0d);
        double double7 = highamHall54Integrator4.getMaxStep();
        double double8 = highamHall54Integrator4.getMaxStep();
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray30, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray19, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray55, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 35.0d, doubleArray19, doubleArray63);
        highamHall54Integrator65.setMinReduction(32.0d);
        org.apache.commons.math.ode.StepHandler stepHandler68 = null;
        highamHall54Integrator65.setStepHandler(stepHandler68);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth((double) '#');
        java.lang.Class<?> wildcardClass10 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) ' ');
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        java.lang.String str19 = highamHall54Integrator12.getName();
        double double20 = highamHall54Integrator12.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getSafety();
        int int12 = highamHall54Integrator4.getOrder();
        java.lang.String str13 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction(2.23606797749979d);
        double double16 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, 7.211102550927978d, (double) (-1.0f), 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.23606797749979d + "'", double16 == 2.23606797749979d);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 10, 0.2d, (int) (byte) 0);
        int int12 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (-1.0f), 1.0d, 1);
        double double10 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setInitialStepSize((double) 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator14.setMinReduction((double) 0.0f);
        int int17 = highamHall54Integrator14.getOrder();
        double double18 = highamHall54Integrator14.getCurrentSignedStepsize();
        highamHall54Integrator14.setInitialStepSize((double) 10.0f);
        double double21 = highamHall54Integrator14.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator14.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator4.getSafety();
        double double25 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 7.211102550927978d + "'", double9 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction(7.211102550927978d);
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth(5.0d);
        double double15 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.211102550927978d + "'", double15 == 7.211102550927978d);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 100, 35.0d, 0.0d);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double11 = highamHall54Integrator10.getMaxGrowth();
        double double12 = highamHall54Integrator10.getSafety();
        highamHall54Integrator10.setMaxGrowth((double) 5);
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator10.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator10.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler30);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler30);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction14, (-1.0d), (double) (short) -1, (int) (short) 10);
        highamHall54Integrator12.setInitialStepSize((double) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        highamHall54Integrator12.setMaxGrowth((double) (byte) -1);
        int int43 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 10.0d, 0.0d, (double) (-1.0f));
        double[] doubleArray56 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray62 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray56, doubleArray62);
        double double64 = highamHall54Integrator63.getMinStep();
        double double65 = highamHall54Integrator63.getMinStep();
        double double66 = highamHall54Integrator63.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator63.getStepHandler();
        highamHall54Integrator50.setStepHandler(stepHandler67);
        highamHall54Integrator12.setStepHandler(stepHandler67);
        double double70 = highamHall54Integrator12.getMinReduction();
        double double71 = highamHall54Integrator12.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.0d) + "'", double70 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int9 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) 0.0f);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator12.getStepHandler();
        java.lang.String str44 = highamHall54Integrator12.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction45, (double) 10.0f, (double) (-1), (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 1);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, 35.0d, 7.211102550927978d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray37 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray43 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray37, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray37, doubleArray45);
        double[] doubleArray58 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray64 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray58, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray58, doubleArray66);
        double[] doubleArray73 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray58, doubleArray73);
        double[] doubleArray80 = new double[] { '4', 5, '4' };
        double[] doubleArray86 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray92 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray86, doubleArray92);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray80, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator95 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray58, doubleArray80);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator96 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 1.0d, doubleArray37, doubleArray80);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator97 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, 0.2d, doubleArray26, doubleArray37);
        int int98 = highamHall54Integrator97.getOrder();
        double double99 = highamHall54Integrator97.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 5 + "'", int98 == 5);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + (-1.0d) + "'", double99 == (-1.0d));
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double double32 = highamHall54Integrator31.getMinStep();
        highamHall54Integrator31.setSafety(0.0d);
        java.lang.String str35 = highamHall54Integrator31.getName();
        double double36 = highamHall54Integrator31.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator12.getCurrentSignedStepsize();
        double double40 = highamHall54Integrator12.getMinStep();
        double double41 = highamHall54Integrator12.getMinReduction();
        java.lang.String str42 = highamHall54Integrator12.getName();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.2d + "'", double41 == 0.2d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        double[] doubleArray5 = new double[] { '4', 5, '4' };
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray5, doubleArray11);
        java.lang.Class<?> wildcardClass20 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 100.0d, (double) (short) 100, (int) (byte) 100);
        double double18 = highamHall54Integrator4.getMinStep();
        double double19 = highamHall54Integrator4.getMinStep();
        double double20 = highamHall54Integrator4.getMaxStep();
        java.lang.String str21 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        double double9 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations13 = null;
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray39, doubleArray47);
        double[] doubleArray54 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray39, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 2.23606797749979d, doubleArray22, doubleArray39);
        double[] doubleArray66 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray76 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray82 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray76, doubleArray82);
        double[] doubleArray84 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray76, doubleArray84);
        double[] doubleArray91 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator92 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray76, doubleArray91);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray66, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations13, (double) (byte) 1, doubleArray39, (double) (short) 0, doubleArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray24, doubleArray32);
        double[] doubleArray39 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray24, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 2.23606797749979d, doubleArray7, doubleArray24);
        double double42 = highamHall54Integrator41.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2.23606797749979d + "'", double42 == 2.23606797749979d);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) -1, 100.0d, 0.0d);
        highamHall54Integrator4.setMaxGrowth(35.0d);
        double double7 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMinReduction();
        double double15 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double[] doubleArray12 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray18 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray12, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator19.getStepHandler();
        highamHall54Integrator19.setMinReduction((double) (byte) 100);
        double double23 = highamHall54Integrator19.getMaxGrowth();
        int int24 = highamHall54Integrator19.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator19.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler25);
        double double27 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 35.0d + "'", double27 == 35.0d);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator4.getMinReduction();
        java.lang.Class<?> wildcardClass25 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double11 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) 5);
        highamHall54Integrator4.setInitialStepSize((double) (-1));
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 0.2d, 100.0d, (int) (byte) 10);
        double double25 = highamHall54Integrator12.getCurrentStepStart();
        int int26 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMaxGrowth(35.0d);
        double double29 = highamHall54Integrator12.getMaxGrowth();
        double double30 = highamHall54Integrator12.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 35.0d + "'", double29 == 35.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        double double5 = highamHall54Integrator4.getMinReduction();
        double double6 = highamHall54Integrator4.getMaxStep();
        double double7 = highamHall54Integrator4.getMinStep();
        double double8 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator12.setSafety(0.2d);
        double double22 = highamHall54Integrator12.getMinReduction();
        java.lang.String str23 = highamHall54Integrator12.getName();
        int int24 = highamHall54Integrator12.getOrder();
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double double38 = highamHall54Integrator37.getMinStep();
        highamHall54Integrator37.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double46 = highamHall54Integrator45.getMaxGrowth();
        double double47 = highamHall54Integrator45.getSafety();
        highamHall54Integrator45.setMaxGrowth((double) 5);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        org.apache.commons.math.ode.StepHandler stepHandler63 = highamHall54Integrator62.getStepHandler();
        highamHall54Integrator45.setStepHandler(stepHandler63);
        highamHall54Integrator37.setStepHandler(stepHandler63);
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler66);
        org.apache.commons.math.ode.StepHandler stepHandler68 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction(Double.NaN);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.9d + "'", double47 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertNotNull(stepHandler68);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 10, 0.2d, (int) (byte) 0);
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (-1.0f), 1.0d, 1);
        double double10 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 1L);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 7.211102550927978d + "'", double6 == 7.211102550927978d);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator48.addSwitchingFunction(switchingFunction50, (double) 10, (double) (byte) 100, (int) (byte) -1);
        double double55 = highamHall54Integrator48.getMinStep();
        highamHall54Integrator48.setMaxGrowth((double) 0L);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double15 = highamHall54Integrator14.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator14.setStepHandler(stepHandler16);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator14.addSwitchingFunction(switchingFunction18, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double28 = highamHall54Integrator27.getMaxGrowth();
        double double29 = highamHall54Integrator27.getSafety();
        highamHall54Integrator27.setMaxGrowth((double) 5);
        double[] doubleArray37 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray43 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray37, doubleArray43);
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator44.getStepHandler();
        highamHall54Integrator27.setStepHandler(stepHandler45);
        highamHall54Integrator14.setStepHandler(stepHandler45);
        highamHall54Integrator4.setStepHandler(stepHandler45);
        java.lang.String str49 = highamHall54Integrator4.getName();
        double double50 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.Class<?> wildcardClass51 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Higham-Hall 5(4)" + "'", str49, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction18, 7.211102550927978d, (double) 'a', (int) '#');
        double double23 = highamHall54Integrator12.getMaxGrowth();
        double double24 = highamHall54Integrator12.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 10.0d, (double) 5, (int) '4');
        highamHall54Integrator4.setMaxGrowth(100.0d);
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) 'a', (double) (short) 1, (double) 1.0f);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(0.0d);
        org.junit.Assert.assertNull(stepHandler9);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxStep();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getMaxStep();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getMinStep();
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setMinReduction(Double.NaN);
        highamHall54Integrator4.setMinReduction((double) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(35.0d, (double) (short) 0, (double) 10.0f, (double) 100);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        double double7 = highamHall54Integrator4.getMaxStep();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) 0, (double) 10, (int) (short) 10);
        double double14 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 0.0d, 32.0d, (double) 10.0f);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray14, doubleArray22);
        double[] doubleArray29 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray14, doubleArray29);
        java.lang.String str31 = highamHall54Integrator30.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double37 = highamHall54Integrator36.getMaxGrowth();
        java.lang.String str38 = highamHall54Integrator36.getName();
        double double39 = highamHall54Integrator36.getSafety();
        int int40 = highamHall54Integrator36.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler41);
        highamHall54Integrator4.setStepHandler(stepHandler41);
        double double44 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.2d);
        double double10 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray25 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray35 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray41 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray35, doubleArray41);
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray35, doubleArray43);
        double[] doubleArray50 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray35, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray25, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 5.0d, doubleArray9, doubleArray50);
        double[] doubleArray61 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray67 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray61, doubleArray67);
        double[] doubleArray70 = new double[] { ' ' };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) 10.0f, doubleArray61, doubleArray70);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) (short) 1, doubleArray50, doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0]");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMaxGrowth((double) 100L);
        double double19 = highamHall54Integrator12.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        highamHall54Integrator4.setMinReduction((double) (byte) 100);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (short) 1, 1.0d, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 100.0f, 35.0d, (int) (byte) 0);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        highamHall54Integrator12.setMaxGrowth((double) (byte) -1);
        int int43 = highamHall54Integrator12.getOrder();
        double double44 = highamHall54Integrator12.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double8 = highamHall54Integrator4.getMaxGrowth();
        double double9 = highamHall54Integrator4.getMaxGrowth();
        java.lang.Class<?> wildcardClass10 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        highamHall54Integrator4.setMinReduction(35.0d);
        org.apache.commons.math.ode.StepHandler stepHandler9 = null;
        highamHall54Integrator4.setStepHandler(stepHandler9);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray30, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray19, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray55, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 35.0d, doubleArray19, doubleArray63);
        highamHall54Integrator65.setMinReduction(32.0d);
        highamHall54Integrator65.setMaxGrowth((double) 5);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        highamHall54Integrator4.setSafety((double) 0L);
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction(52.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.211102550927978d + "'", double16 == 7.211102550927978d);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (byte) 10, (double) '4', 7.211102550927978d);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        highamHall54Integrator4.setMaxGrowth((double) 100L);
        double double15 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) 0.0f, (double) (-1), (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setInitialStepSize((double) 100);
        highamHall54Integrator4.setMaxGrowth((double) ' ');
        double double15 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMinReduction();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator12.getStepHandler();
        java.lang.Class<?> wildcardClass44 = stepHandler43.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        highamHall54Integrator12.setInitialStepSize((double) (byte) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double48 = highamHall54Integrator47.getMaxGrowth();
        double double49 = highamHall54Integrator47.getSafety();
        highamHall54Integrator47.setMaxGrowth((double) 5);
        double[] doubleArray57 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray63 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray57, doubleArray63);
        org.apache.commons.math.ode.StepHandler stepHandler65 = highamHall54Integrator64.getStepHandler();
        highamHall54Integrator47.setStepHandler(stepHandler65);
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler67);
        int int69 = highamHall54Integrator12.getOrder();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.9d + "'", double49 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) (byte) -1);
        double double15 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        java.lang.String str22 = highamHall54Integrator20.getName();
        double double23 = highamHall54Integrator20.getSafety();
        int int24 = highamHall54Integrator20.getOrder();
        double double25 = highamHall54Integrator20.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double31 = highamHall54Integrator30.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator30.setStepHandler(stepHandler32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator30.addSwitchingFunction(switchingFunction34, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double44 = highamHall54Integrator43.getMaxGrowth();
        double double45 = highamHall54Integrator43.getSafety();
        highamHall54Integrator43.setMaxGrowth((double) 5);
        double[] doubleArray53 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray59 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray53, doubleArray59);
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler61);
        highamHall54Integrator30.setStepHandler(stepHandler61);
        highamHall54Integrator20.setStepHandler(stepHandler61);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        double double66 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9d + "'", double23 == 0.9d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, 0.0d, (double) (byte) -1, (double) (byte) 0);
        highamHall54Integrator4.setSafety(0.9d);
        double double7 = highamHall54Integrator4.getMinReduction();
        int int8 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 1.0f, 35.0d, (double) (-1L));
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) 100.0f, (double) (short) 1, (double) '4');
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray39, doubleArray47);
        double[] doubleArray54 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray39, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray22, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 1L, doubleArray13, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator57.getStepHandler();
        java.lang.Class<?> wildcardClass59 = highamHall54Integrator57.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction((-1.0d));
        double double17 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str18 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) 100.0f, (double) 100L, 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.211102550927978d + "'", double14 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.211102550927978d + "'", double17 == 7.211102550927978d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 0.0d, 32.0d, (double) 10.0f);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray14, doubleArray22);
        double[] doubleArray29 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray14, doubleArray29);
        java.lang.String str31 = highamHall54Integrator30.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double37 = highamHall54Integrator36.getMaxGrowth();
        java.lang.String str38 = highamHall54Integrator36.getName();
        double double39 = highamHall54Integrator36.getSafety();
        int int40 = highamHall54Integrator36.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler41);
        highamHall54Integrator4.setStepHandler(stepHandler41);
        double double44 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double12 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize(32.0d);
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double double9 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str10 = highamHall54Integrator4.getName();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction(35.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 5.0d + "'", double9 == 5.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '#');
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(Double.NaN);
        double double15 = highamHall54Integrator4.getSafety();
        double double16 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.23606797749979d, (double) (-1.0f), (-1.0d), 0.9d);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, (double) 10.0f, (double) 'a');
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) (short) 10);
        highamHall54Integrator4.setMinReduction((double) 1.0f);
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        java.lang.String str19 = highamHall54Integrator12.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 1.0d, 35.0d, (int) (byte) 10);
        highamHall54Integrator12.setMaxGrowth((double) 10.0f);
        highamHall54Integrator12.setMinReduction((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMaxGrowth((double) 5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler29);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        highamHall54Integrator4.setMaxGrowth(1.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) -1);
        int int9 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        double double8 = highamHall54Integrator4.getMinReduction();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray24, doubleArray32);
        double[] doubleArray39 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray24, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray7, doubleArray39);
        java.lang.String str42 = highamHall54Integrator41.getName();
        double double43 = highamHall54Integrator41.getMinReduction();
        highamHall54Integrator41.setMaxGrowth(52.0d);
        double double46 = highamHall54Integrator41.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator41.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2d + "'", double43 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(stepHandler47);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        double double8 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        double double9 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction(7.211102550927978d);
        java.lang.String str11 = highamHall54Integrator4.getName();
        java.lang.Class<?> wildcardClass12 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxStep();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getMaxStep();
        double double14 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 0L);
        highamHall54Integrator4.setInitialStepSize((double) 100L);
        double double15 = highamHall54Integrator4.getSafety();
        java.lang.String str16 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double25 = highamHall54Integrator24.getCurrentStepStart();
        double double26 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setInitialStepSize((-1.0d));
        highamHall54Integrator24.setMinReduction((double) 10.0f);
        highamHall54Integrator24.setInitialStepSize((double) 100);
        double double33 = highamHall54Integrator24.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double39 = highamHall54Integrator38.getMaxGrowth();
        java.lang.String str40 = highamHall54Integrator38.getName();
        double double41 = highamHall54Integrator38.getSafety();
        int int42 = highamHall54Integrator38.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator24.setStepHandler(stepHandler43);
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler45);
        java.lang.Class<?> wildcardClass47 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth((double) 0L);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        double double15 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        int int13 = highamHall54Integrator4.getOrder();
        int int14 = highamHall54Integrator4.getOrder();
        int int15 = highamHall54Integrator4.getOrder();
        int int16 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(5.0d);
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 1, 10.0d, (int) (short) 0);
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.211102550927978d + "'", double12 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setInitialStepSize((double) 100);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double19 = highamHall54Integrator18.getMaxGrowth();
        java.lang.String str20 = highamHall54Integrator18.getName();
        double double21 = highamHall54Integrator18.getSafety();
        int int22 = highamHall54Integrator18.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler23);
        java.lang.Class<?> wildcardClass25 = stepHandler23.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator12.setSafety(0.2d);
        double double22 = highamHall54Integrator12.getMinReduction();
        java.lang.String str23 = highamHall54Integrator12.getName();
        int int24 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMaxGrowth(0.0d);
        double double27 = highamHall54Integrator12.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction28, 100.0d, (double) (-1.0f), 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray9, doubleArray17);
        double[] doubleArray28 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray34 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray28, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray28, doubleArray36);
        double[] doubleArray43 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray28, doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray17, doubleArray43);
        double double46 = highamHall54Integrator45.getMaxGrowth();
        double double47 = highamHall54Integrator45.getSafety();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.9d + "'", double47 == 0.9d);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray9, doubleArray17);
        double[] doubleArray24 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray9, doubleArray24);
        java.lang.String str26 = highamHall54Integrator25.getName();
        double double27 = highamHall54Integrator25.getSafety();
        int int28 = highamHall54Integrator25.getOrder();
        double double29 = highamHall54Integrator25.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 0.0d, (double) (-1L), 0.9d);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 100);
        double double9 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, (double) (byte) 10, 1.0d, (double) (byte) 100);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        double double17 = highamHall54Integrator4.getMinStep();
        java.lang.String str18 = highamHall54Integrator4.getName();
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double double32 = highamHall54Integrator31.getMinStep();
        double double33 = highamHall54Integrator31.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction34, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator31.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler41);
        highamHall54Integrator4.setSafety((double) 1L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler41);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setInitialStepSize((double) 100);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double19 = highamHall54Integrator18.getMaxGrowth();
        java.lang.String str20 = highamHall54Integrator18.getName();
        double double21 = highamHall54Integrator18.getSafety();
        int int22 = highamHall54Integrator18.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler23);
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        double double26 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxStep();
        double double13 = highamHall54Integrator4.getMinReduction();
        double double14 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) (short) 10);
        highamHall54Integrator4.setInitialStepSize((double) 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) ' ');
        highamHall54Integrator4.setInitialStepSize(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 100.0d, (double) (short) 100, (int) (byte) 100);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double23 = highamHall54Integrator22.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator22.setStepHandler(stepHandler24);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator22.addSwitchingFunction(switchingFunction26, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double36 = highamHall54Integrator35.getMaxGrowth();
        double double37 = highamHall54Integrator35.getSafety();
        highamHall54Integrator35.setMaxGrowth((double) 5);
        double[] doubleArray45 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray51 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray45, doubleArray51);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler53);
        highamHall54Integrator22.setStepHandler(stepHandler53);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        java.lang.String str57 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) '#');
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9d + "'", double37 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double14 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setInitialStepSize((double) 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', (double) (-1.0f), (double) 10L, (double) (byte) 0);
        double double18 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 10.0d, 0.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        highamHall54Integrator4.setSafety(5.0d);
        double double9 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) ' ', (double) ' ', (double) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 0.0d, 32.0d, (double) 10.0f);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        double[] doubleArray5 = new double[] { '4', 5, '4' };
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator19.addSwitchingFunction(switchingFunction20, (-1.0d), 0.0d, 5);
        double double25 = highamHall54Integrator19.getCurrentStepStart();
        int int26 = highamHall54Integrator19.getOrder();
        double double27 = highamHall54Integrator19.getMinStep();
        highamHall54Integrator19.setMaxGrowth(10.0d);
        highamHall54Integrator19.setMinReduction(5.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 100.0d + "'", double27 == 100.0d);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        double[] doubleArray10 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray10, doubleArray35);
        double[] doubleArray47 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray53 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray47, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray47, doubleArray55);
        double[] doubleArray62 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray47, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 1, doubleArray35, doubleArray47);
        org.apache.commons.math.ode.StepHandler stepHandler65 = highamHall54Integrator64.getStepHandler();
        int int66 = highamHall54Integrator64.getOrder();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        double[] doubleArray2 = null;
        double[] doubleArray10 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray16 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray10, doubleArray16);
        double[] doubleArray25 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray31 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray25, doubleArray31);
        double[] doubleArray42 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray48 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray42, doubleArray48);
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray42, doubleArray50);
        double[] doubleArray57 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray42, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray25, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 1L, doubleArray16, doubleArray25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator(2.23606797749979d, (double) (byte) 0, doubleArray2, doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        highamHall54Integrator12.setMinReduction(52.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction19, (double) 0, (double) ' ', (int) (byte) 0);
        highamHall54Integrator12.setMaxGrowth((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator30.setMinReduction((double) 0.0f);
        int int33 = highamHall54Integrator30.getOrder();
        double double34 = highamHall54Integrator30.getCurrentSignedStepsize();
        highamHall54Integrator30.setInitialStepSize((double) 10.0f);
        double double37 = highamHall54Integrator30.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler38);
        java.lang.Class<?> wildcardClass40 = stepHandler38.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        double[] doubleArray5 = new double[] { '4', 5, '4' };
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator19.addSwitchingFunction(switchingFunction20, (double) (byte) -1, (double) '#', (int) (short) 0);
        double double25 = highamHall54Integrator19.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 100.0d + "'", double25 == 100.0d);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        highamHall54Integrator12.setSafety(0.2d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction22, (double) (short) -1, 5.0d, (int) (byte) 0);
        java.lang.String str27 = highamHall54Integrator12.getName();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        double double13 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray35 = new double[] { '4', 5, '4' };
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray35, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray28, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray7, doubleArray28);
        highamHall54Integrator51.setMaxGrowth((double) 10.0f);
        double double54 = highamHall54Integrator51.getSafety();
        double double55 = highamHall54Integrator51.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.9d + "'", double54 == 0.9d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.211102550927978d + "'", double55 == 7.211102550927978d);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) 1L);
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getSafety();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) '4');
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler12);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations8 = null;
        double[] doubleArray10 = null;
        double[] doubleArray19 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray25 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray19, doubleArray25);
        double[] doubleArray34 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray40 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray34, doubleArray40);
        double[] doubleArray47 = new double[] { '4', 5, '4' };
        double[] doubleArray53 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray59 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray53, doubleArray59);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray47, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray40, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray19, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations8, (double) (byte) 1, doubleArray10, (double) 100, doubleArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double8 = highamHall54Integrator4.getMaxGrowth();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str10 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 0.2d, (double) 10L, (double) 0.0f);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        double[] doubleArray7 = new double[] { '4', 5, '4' };
        double[] doubleArray13 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray19 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray13, doubleArray19);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray7, doubleArray13);
        double[] doubleArray29 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray35 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray29, doubleArray35);
        double[] doubleArray46 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray52 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray46, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray46, doubleArray54);
        double[] doubleArray61 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray46, doubleArray61);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 2.23606797749979d, doubleArray29, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) '#', doubleArray13, doubleArray29);
        double double65 = highamHall54Integrator64.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2d + "'", double65 == 0.2d);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        double double22 = highamHall54Integrator21.getMinStep();
        highamHall54Integrator21.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double30 = highamHall54Integrator29.getMaxGrowth();
        double double31 = highamHall54Integrator29.getSafety();
        highamHall54Integrator29.setMaxGrowth((double) 5);
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler47);
        highamHall54Integrator21.setStepHandler(stepHandler47);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction51, (-1.0d), (double) 'a', 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler47);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, (double) (byte) 0, 0.9d, (double) 1.0f);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMinStep();
        double double15 = highamHall54Integrator12.getMaxStep();
        highamHall54Integrator12.setMinReduction(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator12.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 0L);
        highamHall54Integrator4.setInitialStepSize((double) 100L);
        double double15 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth(Double.NaN);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int11 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double17 = highamHall54Integrator16.getCurrentStepStart();
        double double18 = highamHall54Integrator16.getCurrentSignedStepsize();
        int int19 = highamHall54Integrator16.getOrder();
        highamHall54Integrator16.setSafety(0.2d);
        double double22 = highamHall54Integrator16.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) 100L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 100.0d, 0.0d, (int) '#');
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        double[] doubleArray8 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray18 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray24 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray18, doubleArray24);
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray18, doubleArray26);
        double[] doubleArray33 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray18, doubleArray33);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray8, doubleArray33);
        int int36 = highamHall54Integrator35.getOrder();
        double double37 = highamHall54Integrator35.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        double[] doubleArray2 = null;
        double[] doubleArray10 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray16 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray10, doubleArray16);
        double[] doubleArray26 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray36 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray42 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray36, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray36, doubleArray44);
        double[] doubleArray51 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray36, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray26, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 5.0d, doubleArray10, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (byte) 100, doubleArray2, doubleArray10);
        highamHall54Integrator55.setMaxGrowth(1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 35.0d, (double) 10, (int) (byte) 1);
        double double25 = highamHall54Integrator12.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) 'a', (double) (short) 1, (double) 1.0f);
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxStep();
        double double13 = highamHall54Integrator4.getMinReduction();
        double double14 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getMinStep();
        java.lang.String str16 = highamHall54Integrator4.getName();
        int int17 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.211102550927978d + "'", double13 == 7.211102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        java.lang.String str21 = highamHall54Integrator12.getName();
        highamHall54Integrator12.setInitialStepSize((double) 1L);
        highamHall54Integrator12.setSafety(0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        java.lang.String str10 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double13 = highamHall54Integrator4.getMinReduction();
        java.lang.Class<?> wildcardClass14 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 35.0d + "'", double13 == 35.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        double[] doubleArray14 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray24, doubleArray32);
        double[] doubleArray39 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray24, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray14, doubleArray39);
        double[] doubleArray51 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray57 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray51, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray51, doubleArray59);
        double[] doubleArray66 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray51, doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 1, doubleArray39, doubleArray51);
        double[] doubleArray71 = null;
        double[] doubleArray79 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray85 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray79, doubleArray85);
        double[] doubleArray88 = new double[] { ' ' };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) 10.0f, doubleArray79, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (byte) 100, doubleArray71, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 0.0d, doubleArray51, doubleArray79);
        double[] doubleArray92 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 1, doubleArray79, doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[32.0]");
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 1.0f, 35.0d, (double) (-1L));
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double11 = highamHall54Integrator10.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler12 = null;
        highamHall54Integrator10.setStepHandler(stepHandler12);
        int int14 = highamHall54Integrator10.getOrder();
        java.lang.String str15 = highamHall54Integrator10.getName();
        double double16 = highamHall54Integrator10.getCurrentSignedStepsize();
        java.lang.String str17 = highamHall54Integrator10.getName();
        double double18 = highamHall54Integrator10.getMaxStep();
        double double19 = highamHall54Integrator10.getMinReduction();
        double[] doubleArray27 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray33 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray27, doubleArray33);
        double[] doubleArray42 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray48 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray42, doubleArray48);
        double[] doubleArray59 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray65 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray59, doubleArray65);
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray59, doubleArray67);
        double[] doubleArray74 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray59, doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray42, doubleArray74);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 1L, doubleArray33, doubleArray42);
        org.apache.commons.math.ode.StepHandler stepHandler78 = highamHall54Integrator77.getStepHandler();
        highamHall54Integrator10.setStepHandler(stepHandler78);
        highamHall54Integrator4.setStepHandler(stepHandler78);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '#');
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass14 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, (double) ' ', (double) (short) 10);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        java.lang.String str19 = highamHall54Integrator12.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 1.0d, 35.0d, (int) (byte) 10);
        highamHall54Integrator12.setMaxGrowth((double) 10.0f);
        highamHall54Integrator12.setInitialStepSize((double) (byte) 0);
        double double29 = highamHall54Integrator12.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, Double.NaN, (double) '#', (double) 1.0f);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double12 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator11.getStepHandler();
        double double14 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int20 = highamHall54Integrator19.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator19.addSwitchingFunction(switchingFunction21, (double) 1L, (double) (short) -1, 0);
        int int26 = highamHall54Integrator19.getOrder();
        highamHall54Integrator19.setMaxGrowth((-1.0d));
        double double29 = highamHall54Integrator19.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator19.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler30);
        highamHall54Integrator4.setStepHandler(stepHandler30);
        java.lang.Class<?> wildcardClass33 = stepHandler30.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        double double19 = highamHall54Integrator12.getCurrentStepStart();
        double double20 = highamHall54Integrator12.getMaxGrowth();
        double double21 = highamHall54Integrator12.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setSafety((double) (-1.0f));
        highamHall54Integrator12.setSafety((double) 100);
        java.lang.Class<?> wildcardClass48 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) 1);
        highamHall54Integrator4.setInitialStepSize((double) 5);
        java.lang.Class<?> wildcardClass15 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double21 = highamHall54Integrator20.getMaxGrowth();
        double double22 = highamHall54Integrator20.getSafety();
        highamHall54Integrator20.setMaxGrowth((double) 5);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        highamHall54Integrator12.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator12.getStepHandler();
        double double42 = highamHall54Integrator12.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator12.getStepHandler();
        double double44 = highamHall54Integrator12.getCurrentStepStart();
        java.lang.Class<?> wildcardClass45 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, 35.0d, (-1.0d), 0.0d);
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations5 = null;
        double[] doubleArray16 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray22 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray16, doubleArray22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray16, doubleArray24);
        double[] doubleArray37 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray43 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray37, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray37, doubleArray45);
        double[] doubleArray52 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray37, doubleArray52);
        double[] doubleArray59 = new double[] { '4', 5, '4' };
        double[] doubleArray65 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray71 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray65, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray59, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray37, doubleArray59);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 1.0d, doubleArray16, doubleArray59);
        double[] doubleArray82 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray88 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray82, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations5, 0.2d, doubleArray16, Double.NaN, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction((double) 10L);
        java.lang.Class<?> wildcardClass11 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxStep();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getMaxStep();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getMinStep();
        double double16 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.2d);
        double double10 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety((double) 100.0f);
        double double14 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinStep();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction(Double.NaN);
        double double11 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray35 = new double[] { '4', 5, '4' };
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray35, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray28, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray7, doubleArray28);
        highamHall54Integrator51.setSafety((double) (short) 100);
        double double54 = highamHall54Integrator51.getMaxStep();
        highamHall54Integrator51.setSafety((double) '#');
        highamHall54Integrator51.setMinReduction((double) 0L);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray24, doubleArray32);
        double[] doubleArray39 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray24, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 1, doubleArray7, doubleArray39);
        highamHall54Integrator41.setMaxGrowth((double) 5);
        double double44 = highamHall54Integrator41.getMinStep();
        double double45 = highamHall54Integrator41.getMaxStep();
        highamHall54Integrator41.setSafety((double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator48.getMinReduction();
        double double51 = highamHall54Integrator48.getMinStep();
        double double52 = highamHall54Integrator48.getSafety();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9d + "'", double52 == 0.9d);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 7.211102550927978d, 0.9d, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getSafety();
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) '4', 32.0d, (double) (byte) 100);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray9, doubleArray17);
        double[] doubleArray28 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray34 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray28, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray28, doubleArray36);
        double[] doubleArray43 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray28, doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray17, doubleArray43);
        double double46 = highamHall54Integrator45.getMinStep();
        double double47 = highamHall54Integrator45.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double53 = highamHall54Integrator52.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator45.setStepHandler(stepHandler54);
        java.lang.Class<?> wildcardClass56 = highamHall54Integrator45.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', (double) (-1.0f), (double) 10L, (double) (byte) 0);
        double double18 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler19);
        double[] doubleArray26 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray32 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray26, doubleArray32);
        double double34 = highamHall54Integrator33.getMinStep();
        highamHall54Integrator33.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double42 = highamHall54Integrator41.getMaxGrowth();
        double double43 = highamHall54Integrator41.getSafety();
        highamHall54Integrator41.setMaxGrowth((double) 5);
        double[] doubleArray51 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray57 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray51, doubleArray57);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator41.setStepHandler(stepHandler59);
        highamHall54Integrator33.setStepHandler(stepHandler59);
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator33.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double68 = highamHall54Integrator67.getMaxGrowth();
        double double69 = highamHall54Integrator67.getSafety();
        highamHall54Integrator67.setMaxGrowth((double) 5);
        double[] doubleArray77 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray83 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray77, doubleArray83);
        org.apache.commons.math.ode.StepHandler stepHandler85 = highamHall54Integrator84.getStepHandler();
        highamHall54Integrator67.setStepHandler(stepHandler85);
        org.apache.commons.math.ode.StepHandler stepHandler87 = highamHall54Integrator67.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler87);
        highamHall54Integrator4.setStepHandler(stepHandler87);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9d + "'", double43 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.9d + "'", double69 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertNotNull(stepHandler87);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 0L);
        highamHall54Integrator4.setInitialStepSize((double) 100L);
        double double15 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        java.lang.String str21 = highamHall54Integrator12.getName();
        highamHall54Integrator12.setInitialStepSize((double) 1L);
        double double24 = highamHall54Integrator12.getCurrentStepStart();
        java.lang.Class<?> wildcardClass25 = highamHall54Integrator12.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.2d);
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getMaxStep();
        double double10 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        highamHall54Integrator4.setMinReduction(2.23606797749979d);
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.211102550927978d + "'", double15 == 7.211102550927978d);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double26 = highamHall54Integrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator12.getCurrentSignedStepsize();
        double double30 = highamHall54Integrator12.getSafety();
        double double31 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator12.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler32);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 100, 10.0d, (double) (short) 0);
        java.lang.Class<?> wildcardClass5 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        double double16 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray30 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray36 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray30, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray30, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray30, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (short) 10, doubleArray19, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray61 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray55, doubleArray61);
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray55, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 35.0d, doubleArray19, doubleArray63);
        double double66 = highamHall54Integrator65.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) (byte) 100);
        double double16 = highamHall54Integrator12.getMaxGrowth();
        int int17 = highamHall54Integrator12.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator12.getStepHandler();
        double double19 = highamHall54Integrator12.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator12.getSafety();
        highamHall54Integrator12.setInitialStepSize(7.211102550927978d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction23, 5.0d, (double) (-1.0f), 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction((double) 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction(7.211102550927978d);
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 0, (double) 1.0f, (int) (short) 0);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = stepHandler14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNull(stepHandler14);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, 1.0d, (double) (byte) 1, (double) 10.0f);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(5.0d, (double) (-1), (double) 5, (double) 'a');
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double5 = highamHall54Integrator4.getMinReduction();
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double double19 = highamHall54Integrator18.getMinStep();
        highamHall54Integrator18.setSafety(0.0d);
        java.lang.String str22 = highamHall54Integrator18.getName();
        double double23 = highamHall54Integrator18.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler24);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        double double27 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double33 = highamHall54Integrator32.getCurrentStepStart();
        double double34 = highamHall54Integrator32.getCurrentStepStart();
        double double35 = highamHall54Integrator32.getSafety();
        double double36 = highamHall54Integrator32.getMaxStep();
        double double37 = highamHall54Integrator32.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator32.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler39);
        highamHall54Integrator4.setInitialStepSize((double) 1L);
        highamHall54Integrator4.setSafety((double) (-1));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.9d + "'", double35 == 0.9d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler39);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        double double15 = highamHall54Integrator4.getMaxGrowth();
        double double16 = highamHall54Integrator4.getSafety();
        int int17 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        highamHall54Integrator4.setMaxGrowth((double) 100L);
        double double15 = highamHall54Integrator4.getMinStep();
        int int16 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getMaxStep();
        double double10 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, 52.0d, 2.23606797749979d, (int) '#');
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 1, (double) 0L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction(5.0d);
        double double16 = highamHall54Integrator4.getMaxStep();
        double double17 = highamHall54Integrator4.getMinReduction();
        java.lang.Class<?> wildcardClass18 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(52.0d);
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, 2.23606797749979d, (double) (short) 100, 0);
        double double19 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.211102550927978d + "'", double19 == 7.211102550927978d);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double[] doubleArray14 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray20 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray14, doubleArray20);
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler25);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray35 = new double[] { '4', 5, '4' };
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray35, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray28, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray7, doubleArray28);
        highamHall54Integrator51.setSafety((double) (short) 100);
        double double54 = highamHall54Integrator51.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        highamHall54Integrator59.setMinReduction((double) 0.0f);
        int int62 = highamHall54Integrator59.getOrder();
        double double63 = highamHall54Integrator59.getCurrentSignedStepsize();
        highamHall54Integrator59.setInitialStepSize((double) 10.0f);
        double double66 = highamHall54Integrator59.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator59.getStepHandler();
        highamHall54Integrator51.setStepHandler(stepHandler67);
        double double69 = highamHall54Integrator51.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 10, 0.2d, (int) (byte) 0);
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) ' ');
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.211102550927978d + "'", double12 == 7.211102550927978d);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        double[] doubleArray10 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray20 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray26 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray20, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray20, doubleArray28);
        double[] doubleArray35 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray20, doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray10, doubleArray35);
        double[] doubleArray46 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray56 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray62 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray56, doubleArray62);
        double[] doubleArray64 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray56, doubleArray64);
        double[] doubleArray71 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray56, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray46, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) 5, doubleArray10, doubleArray46);
        highamHall54Integrator74.setInitialStepSize(Double.NaN);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int7 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.2d);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        double double12 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(52.0d, (double) 100L, (double) 100, (double) 0L);
        highamHall54Integrator4.setMinReduction((double) 100L);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 1L, (double) (short) -1, 0);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 100.0d, (double) (short) 100, (int) (byte) 100);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double23 = highamHall54Integrator22.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator22.setStepHandler(stepHandler24);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator22.addSwitchingFunction(switchingFunction26, (double) 1, (double) 0L, (int) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double36 = highamHall54Integrator35.getMaxGrowth();
        double double37 = highamHall54Integrator35.getSafety();
        highamHall54Integrator35.setMaxGrowth((double) 5);
        double[] doubleArray45 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray51 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray45, doubleArray51);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler53);
        highamHall54Integrator22.setStepHandler(stepHandler53);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        highamHall54Integrator4.setSafety((double) (-1.0f));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9d + "'", double37 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler53);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) 1L, 7.211102550927978d, (double) 'a');
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        double double8 = highamHall54Integrator4.getMinStep();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) (-1));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        double[] doubleArray11 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray17 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray11, doubleArray17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray11, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray11, doubleArray26);
        double[] doubleArray33 = new double[] { '4', 5, '4' };
        double[] doubleArray39 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray45 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray39, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray33, doubleArray39);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray11, doubleArray33);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator48.addSwitchingFunction(switchingFunction50, (double) 10, (double) (byte) 100, (int) (byte) -1);
        double double55 = highamHall54Integrator48.getMinStep();
        highamHall54Integrator48.setMinReduction(52.0d);
        double double58 = highamHall54Integrator48.getMinStep();
        double double59 = highamHall54Integrator48.getMinStep();
        double double60 = highamHall54Integrator48.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 100.0d + "'", double58 == 100.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double8 = highamHall54Integrator4.getMaxGrowth();
        double double9 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        double[] doubleArray17 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray23 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray17, doubleArray23);
        double[] doubleArray31 = new double[] { '4', 5, '4' };
        double[] doubleArray37 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray43 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray37, doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray31, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations10, 1.0d, doubleArray23, (double) (-1.0f), doubleArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double26 = highamHall54Integrator25.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator12.getCurrentSignedStepsize();
        double double30 = highamHall54Integrator12.getSafety();
        double double31 = highamHall54Integrator12.getMinStep();
        double double32 = highamHall54Integrator12.getMaxGrowth();
        highamHall54Integrator12.setMaxGrowth(0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        double double14 = highamHall54Integrator12.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction15, (double) 1L, (double) 1L, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction20, 0.2d, 100.0d, (int) (byte) 10);
        double double25 = highamHall54Integrator12.getCurrentStepStart();
        int int26 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMaxGrowth(35.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction29, 32.0d, (double) '4', (int) (short) 100);
        java.lang.String str34 = highamHall54Integrator12.getName();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) 10);
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getSafety();
        double double18 = highamHall54Integrator12.getMinStep();
        java.lang.String str19 = highamHall54Integrator12.getName();
        int int20 = highamHall54Integrator12.getOrder();
        double double21 = highamHall54Integrator12.getSafety();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        double[] doubleArray9 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray15 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray9, doubleArray15);
        double[] doubleArray22 = new double[] { '4', 5, '4' };
        double[] doubleArray28 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray34 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray28, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray22, doubleArray28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray15, doubleArray28);
        double[] doubleArray47 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray53 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray47, doubleArray53);
        double[] doubleArray64 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray70 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray64, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray64, doubleArray72);
        double[] doubleArray79 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray64, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 2.23606797749979d, doubleArray47, doubleArray64);
        double[] doubleArray87 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray93 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray87, doubleArray93);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator95 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1, (double) 100L, doubleArray64, doubleArray93);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator96 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (byte) 100, doubleArray15, doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, 100.0, -1.0, 10.0, -1.0]");
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, (double) '4', (double) 100.0f);
        double double17 = highamHall54Integrator16.getCurrentStepStart();
        highamHall54Integrator16.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.211102550927978d + "'", double8 == 7.211102550927978d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.9d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.211102550927978d + "'", double7 == 7.211102550927978d);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 100, (double) (short) 1, 1);
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray15 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray7, doubleArray15);
        highamHall54Integrator16.setMinReduction((double) 0L);
        double[] doubleArray24 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray30 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray24, doubleArray30);
        double double32 = highamHall54Integrator31.getMinStep();
        highamHall54Integrator31.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double40 = highamHall54Integrator39.getMaxGrowth();
        double double41 = highamHall54Integrator39.getSafety();
        highamHall54Integrator39.setMaxGrowth((double) 5);
        double[] doubleArray49 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray55 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray49, doubleArray55);
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator39.setStepHandler(stepHandler57);
        highamHall54Integrator31.setStepHandler(stepHandler57);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator31.getStepHandler();
        double double61 = highamHall54Integrator31.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler62);
        int int64 = highamHall54Integrator16.getOrder();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2d + "'", double61 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) (byte) -1, (double) 100.0f, (double) 1);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) '#', (double) (byte) 10, 0.0d);
        highamHall54Integrator4.setMinReduction((double) 10);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        double double9 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        double[] doubleArray7 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray13 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray7, doubleArray13);
        double[] doubleArray22 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray28 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray22, doubleArray28);
        double[] doubleArray35 = new double[] { '4', 5, '4' };
        double[] doubleArray41 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray47 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray41, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 100.0f, doubleArray35, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, doubleArray28, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 52.0d, doubleArray7, doubleArray28);
        highamHall54Integrator51.setSafety((double) (short) 100);
        highamHall54Integrator51.setMinReduction((double) 5);
        java.lang.Class<?> wildcardClass56 = highamHall54Integrator51.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 5.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 1, 100.0d, (double) (byte) 100);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations11 = null;
        double[] doubleArray21 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray31 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray37 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray31, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray31, doubleArray39);
        double[] doubleArray46 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray31, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray21, doubleArray46);
        double[] doubleArray58 = new double[] { (short) 10, 0, 0.0f, Double.NaN, (short) 0, 1.0f };
        double[] doubleArray68 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray74 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray68, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 10L, doubleArray68, doubleArray76);
        double[] doubleArray83 = new double[] { 10, 1, 1.0d, 1.0f, 100 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) (byte) 10, doubleArray68, doubleArray83);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 100, doubleArray58, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations11, 5.0d, doubleArray21, 7.211102550927978d, doubleArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 1.0, 1.0, 1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 0.0, 0.0, NaN, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 1.0, 1.0, 1.0, 100.0]");
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        double[] doubleArray5 = new double[] { 100.0f, 100L, 100L };
        double[] doubleArray11 = new double[] { 1.0f, 100.0f, (-1.0d), (short) 10, (-1) };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) 0.0f, doubleArray5, doubleArray11);
        double double13 = highamHall54Integrator12.getMinStep();
        highamHall54Integrator12.setSafety(0.0d);
        java.lang.String str16 = highamHall54Integrator12.getName();
        double double17 = highamHall54Integrator12.getMaxStep();
        int int18 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setMinReduction((-1.0d));
        int int21 = highamHall54Integrator12.getOrder();
        java.lang.String str22 = highamHall54Integrator12.getName();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }
}

