import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        double double10 = rotation8.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.26237485370392877d) + "'", double10 == (-0.26237485370392877d));
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation3 = new org.apache.commons.math.geometry.Rotation();
        double double4 = rotation3.getQ3();
        double double5 = rotation3.getQ2();
        double double6 = rotation3.getAngle();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation54.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation61.applyInverseTo(rotation68);
        double double71 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ0();
        double[][] doubleArray75 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation72.applyInverseTo(rotation76);
        double double79 = rotation78.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation68.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation68.getAxis();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D49, vector3D59, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation3.applyTo(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation0.applyTo(vector3D49);
        java.lang.Class<?> wildcardClass85 = vector3D84.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1.0d) + "'", double79 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D36, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation13.applyInverseTo(vector3D39);
        double[][] doubleArray41 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = null;
        double[] doubleArray44 = rotation13.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation6.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = null;
        double[] doubleArray47 = rotation45.getAngles(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.4761276326376929, 0.2003224048946341, -1.4661277159697763]");
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.5516053098927014, 1.371383023034041, 1.5788763468957066]");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = null;
        double[] doubleArray23 = rotation5.getAngles(rotationOrder22);
        double double24 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.97334984766103, 2.5591145826350643, -1.7740125426787061]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.562089250717698d + "'", double24 == 2.562089250717698d);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 1.5707963267948968d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.9422652488599566d);
        double[][] doubleArray14 = rotation13.getMatrix();
        double[][] doubleArray15 = rotation13.getMatrix();
        double double16 = rotation13.getQ1();
        double double17 = rotation13.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.9950376827537689d) + "'", double16 == (-0.9950376827537689d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.09949879346007112d + "'", double17 == 0.09949879346007112d);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7071067811865475d), (-0.9950376827537689d), 3.1215943200414915d, (double) (short) -1, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        double double13 = rotation12.getQ1();
        double double14 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.applyTo(rotation12);
        double[][] doubleArray16 = rotation12.getMatrix();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7071067811865475d) + "'", double13 == (-0.7071067811865475d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D50);
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation22.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation22.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation5.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D31, 0.09949879346007118d);
        double double35 = rotation34.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D45, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation40.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation34.applyInverseTo(vector3D45);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.04972887762276947d) + "'", double35 == (-0.04972887762276947d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.6667006794044591d, (double) 0L, (-0.009999000149975004d), (-0.031222023722052576d), false);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        double double19 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        double[][] doubleArray24 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray24, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray24, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation5.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation29.revert();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9949756218412634d + "'", double19 == 0.9949756218412634d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        double double19 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation12.applyTo(rotation20);
        double double23 = rotation12.getQ1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        double double42 = rotation28.getQ1();
        double double43 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation12.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation7.applyInverseTo(rotation12);
        double double46 = rotation45.getQ1();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.5707963267948963d + "'", double8 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.7071067811865475d + "'", double46 == 0.7071067811865475d);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        double double26 = rotation9.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = null;
        double[] doubleArray23 = rotation5.getAngles(rotationOrder22);
        double double24 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        double[][] doubleArray29 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(doubleArray29, (double) (short) 1);
        double double32 = rotation31.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation31.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation37.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D42, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation31.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation57.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation58.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation47.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation31.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation83.getAxis();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D72, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D72, 0.15156571116200665d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation5.applyTo(vector3D72);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.97334984766103, 2.5591145826350643, -1.7740125426787061]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2857142857142857d + "'", double24 == 0.2857142857142857d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1.0f, (double) (short) 10, (double) 100.0f, (double) (byte) -1, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        double[][] doubleArray10 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ1();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation11);
        double double16 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.applyTo(rotation6);
        double double18 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        double[][] doubleArray23 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(doubleArray23, (double) (short) 1);
        double double26 = rotation25.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D36, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation25.applyInverseTo(vector3D36);
        double double41 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation5.applyTo(rotation25);
        double double43 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation25.getAxis();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        double double10 = rotation8.getQ0();
        double double11 = rotation8.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.26201880934087246d), 0.0d, 0.09949756218412634d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.6667006794044591d, 0.9949756218412634d, (-0.26237485370392877d), 0.6931032706702748d, true);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.0943951023931953d, 0.09949960160398666d, 0.9999000149975004d, 0.6086083682652702d, true);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ1();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation22.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation0.applyTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D36, 0.2857142857142857d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.995037190209989d + "'", double20 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        double double35 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation26.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation5.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation48.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation49.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D61, 2.562089250717698d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D61);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) '#');
        double[][] doubleArray68 = rotation67.getMatrix();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(doubleArray68);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 1.625426981395601d);
        double double37 = rotation36.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.625426981395601d + "'", double37 == 1.625426981395601d);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation5.applyTo(rotation8);
        double double11 = rotation8.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.29814239699997197d + "'", double6 == 0.29814239699997197d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.6086083682652702d + "'", double7 == 0.6086083682652702d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, 0.0d, (double) '4', 0.26237485370392877d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation31.applyTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D18, vector3D25, vector3D36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D73, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation();
        double double88 = rotation87.getQ3();
        double double89 = rotation87.getQ2();
        double double90 = rotation87.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation86.applyTo(vector3D91);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D66, vector3D73, vector3D80, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D49, vector3D61, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D91, (double) (-1));
        org.apache.commons.math.geometry.Rotation rotation97 = rotation5.applyTo(rotation96);
        double double98 = rotation96.getAngle();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, 0.2336738846784456d, 0.019227214231343204d, 0.9949879346007117d, false);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation6.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation33.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation43.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation44.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ2();
        double double62 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation60.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation59.applyTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        double[][] doubleArray77 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(doubleArray77, (double) (short) 1);
        double double80 = rotation79.getQ1();
        double double81 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation72.applyInverseTo(rotation79);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        double double17 = rotation13.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        double double45 = rotation44.getAngle();
        double double46 = rotation44.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        double[][] doubleArray16 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, (double) (short) 1);
        double double19 = rotation18.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyInverseTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation18.applyInverseTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation34.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation18.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D59, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation7.applyInverseTo(vector3D59);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation21.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation12.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation12);
        java.lang.Class<?> wildcardClass49 = rotation6.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.004999479247928635d, 1.5900247258946039d, 0.009999000149975004d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        double double14 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation20.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation13.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D37, 0.4577635057039505d);
        double double42 = rotation41.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ2();
        double double27 = rotation25.getQ0();
        double[][] doubleArray28 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyInverseTo(rotation29);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation21.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation13.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyInverseTo(rotation43);
        double double46 = rotation43.getQ1();
        double[][] doubleArray47 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(doubleArray47, 0.0d);
        double double50 = rotation49.getAngle();
        double double51 = rotation49.getAngle();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        double double61 = rotation59.getQ2();
        double double62 = rotation59.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation59.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D63, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation58.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation74.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation77.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation();
        double double87 = rotation86.getQ3();
        double double88 = rotation86.getQ2();
        double double89 = rotation86.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation86.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation78.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation67.applyInverseTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation58.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation53.applyTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D95);
        java.lang.Class<?> wildcardClass97 = vector3D95.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation32.applyInverseTo(rotation39);
        double double42 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        double double50 = rotation47.getQ2();
        double double51 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation39.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        double double60 = rotation57.getQ2();
        double double61 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.applyTo(rotation62);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation52.applyTo(rotation62);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation70.revert();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ2();
        double double76 = rotation74.getQ0();
        double[][] doubleArray77 = rotation74.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation74.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation73.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        double double84 = rotation82.getQ2();
        double double85 = rotation82.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation82.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.applyTo(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D86, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D31, vector3D69, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D22);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9098097933602967d, 0.9999000149975004d, 0.5d, (-0.5d), true);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation42.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation43.applyTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation32.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation19.applyTo(vector3D55);
        double double60 = rotation19.getAngle();
        double double61 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation10.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = null;
        double[] doubleArray64 = rotation19.getAngles(rotationOrder63);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.5707963267948963d + "'", double60 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.7071067811865475d + "'", double61 == 0.7071067811865475d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation23.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation42.revert();
        double double45 = rotation44.getAngle();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation11.applyTo(rotation44);
        double double47 = rotation46.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.5707963267948963d + "'", double45 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((-0.7071067811865475d), (-0.9950376827537689d), 3.1215943200414915d, (double) (short) -1, true);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyTo(rotation21);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(rotation23);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        double double9 = rotation8.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        double double18 = rotation13.getAngle();
        double[][] doubleArray19 = rotation13.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation11);
        double double22 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyInverseTo(rotation31);
        double double34 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation35.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation11.applyTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D62, 0.0018853026163470825d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D22, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation59.applyTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D46, vector3D53, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation34.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D46);
        java.lang.Class<?> wildcardClass69 = vector3D46.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        double double27 = rotation21.getQ2();
        double double28 = rotation21.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation21.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation18.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation58.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation59.applyTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D26, vector3D52, vector3D71);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D26);
        double[][] doubleArray86 = rotation85.getMatrix();
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation4.getAngle();
        double double13 = rotation4.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5309649148733836d, (double) (short) 1, 1.5707963267948968d, 0.2857142857142857d, true);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyInverseTo(rotation27);
        double double30 = rotation27.getQ1();
        double[][] doubleArray31 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation19.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation0.applyInverseTo(rotation19);
        double double34 = rotation19.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.09949756218412634d + "'", double34 == 0.09949756218412634d);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 0.703614788711539d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (-1), 0.2623748537039287d, 3.103135855390379d, 0.09949960160398666d, false);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D10, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        double double23 = rotation20.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ2();
        double double27 = rotation25.getQ0();
        double[][] doubleArray28 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyInverseTo(rotation32);
        double double35 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        double double43 = rotation40.getQ2();
        double double44 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation32.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        double double53 = rotation50.getQ2();
        double double54 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation55);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation45.applyTo(rotation55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation66.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ3();
        double double77 = rotation75.getQ2();
        double double78 = rotation75.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation75.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation67.applyTo(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D24, vector3D62, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D24, 0.0d);
        double double86 = rotation85.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (byte) -1);
        double double9 = rotation8.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.479425538604203d + "'", double9 == 0.479425538604203d);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        double double17 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation13.revert();
        double double19 = rotation18.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = rotation0.revert();
        java.lang.Class<?> wildcardClass6 = rotation0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(rotation5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        double double4 = rotation3.getQ3();
        double[][] doubleArray5 = rotation3.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', 2.943247885977952d, (double) 10L, (double) 0, false);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ2();
        double double14 = rotation12.getQ0();
        double[][] doubleArray15 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation23.applyTo(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation12.applyInverseTo(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation11.applyTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation3.applyTo(vector3D38);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D29, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D29, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation35.getAxis();
        double double38 = rotation35.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.0d) + "'", double38 == (-0.0d));
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ1();
        double double36 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyTo(rotation33);
        double[][] doubleArray38 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 2.562089250717698d);
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.9999250084364456d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation30.getQ2();
        double double34 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation22.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        double double43 = rotation40.getQ2();
        double double44 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation35.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation14.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation57.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation58.applyTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D70, 2.562089250717698d);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D53, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation8.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, 32.0d);
        double double78 = rotation77.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.05672971756947102d) + "'", double78 == (-0.05672971756947102d));
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0018853026163470825d, (-0.0d), 0.007070537541434264d, 0.29814239699997197d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ1();
        double[][] doubleArray19 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray19, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray19, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(doubleArray19, (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray19, (double) (byte) 1);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation5.applyTo(rotation27);
        double double29 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation5.applyTo(rotation30);
        double double42 = rotation30.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.5d) + "'", double29 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 0.5d);
        double double43 = rotation42.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray22 = rotation7.getAngles(rotationOrder21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (double) (byte) 1, 0.9689124217106447d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double[][] doubleArray7 = rotation6.getMatrix();
        double double8 = rotation6.getQ1();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation7.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = null;
        double[] doubleArray10 = rotation7.getAngles(rotationOrder9);
        double double11 = rotation7.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D20, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        double double42 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyInverseTo(rotation50);
        double double53 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation50.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation39.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation34.applyTo(rotation39);
        double double65 = rotation39.getQ3();
        double[][] doubleArray66 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation39.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, 0.9142857142857143d);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation7.applyTo(vector3D67);
        double double71 = rotation7.getQ3();
        double double72 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ2();
        double double75 = rotation73.getQ0();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation73.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation73.applyInverseTo(rotation80);
        double double83 = rotation80.getQ1();
        double[][] doubleArray84 = rotation80.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(doubleArray84, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(doubleArray84, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(doubleArray84, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation7.applyTo(rotation90);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.5707963267948963d + "'", double8 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.5707963267948966, 1.5707963267948968, -1.5707963267948966]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.7071067811865475d) + "'", double11 == (-0.7071067811865475d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1.0d) + "'", double61 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.5707963267948963d + "'", double72 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation91);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        double double46 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = null;
        double[] doubleArray54 = rotation52.getAngles(rotationOrder53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation52.revert();
        java.lang.Class<?> wildcardClass57 = rotation52.getClass();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation6.revert();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation47);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.943247885977952d, 0.6931032706702748d, 0.29814239699997197d, 0.20057100889311433d, false);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyInverseTo(rotation27);
        double double30 = rotation27.getQ1();
        double[][] doubleArray31 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation19.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation0.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        double double41 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation42.applyInverseTo(rotation49);
        double double52 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation49.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation38.applyInverseTo(rotation61);
        double double63 = rotation61.getAngle();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation33.applyTo(rotation61);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9689124217106447d, 0.9949879346007117d, 0.9540556703999103d, (double) 10.0f, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        double double40 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ0();
        double[][] doubleArray44 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyInverseTo(rotation48);
        double double51 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation48.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation37.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation32.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        double[][] doubleArray68 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) (short) 1);
        double double71 = rotation70.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation5.applyTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 0.6875305504554996d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 10, (double) 1, (double) 0, 0.995037190209989d, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9901956025589367d + "'", double6 == 0.9901956025589367d);
        org.junit.Assert.assertNotNull(rotation7);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        double double26 = rotation9.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation9.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation17.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation9.getAxis();
        double double15 = rotation9.getQ0();
        double[][] doubleArray16 = rotation9.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = null;
        double[] doubleArray15 = rotation10.getAngles(rotationOrder14);
        double[][] doubleArray16 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 2.9422652488599566d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 1.5707963267948968, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation28.applyTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        double[][] doubleArray66 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation28.applyTo(rotation72);
        double double74 = rotation72.getQ0();
        double double75 = rotation72.getQ0();
        double double76 = rotation72.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation27.applyTo(rotation28);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation7.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D33, 0.028545850260162355d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        double double35 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation26.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation5.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation51.applyTo(rotation52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation5.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 0.41353925772895467d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ0();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation10.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation9.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D32);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ1();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.0d);
        double double49 = rotation48.getAngle();
        double double50 = rotation48.getAngle();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation55.applyInverseTo(rotation56);
        double double64 = rotation55.getAngle();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation51.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation66.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double88 = rotation87.getQ2();
        double double89 = rotation87.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation87.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D81, vector3D90);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D76, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation51.applyInverseTo(vector3D76);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray97 = rotation95.getAngles(rotationOrder96);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.995037190209989d + "'", double88 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, 0.009949879346007126d, (double) 10, 1.0d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, (double) (short) 10, 1.7345175425633084d, (double) (byte) -1, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation22.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ2();
        double double52 = rotation50.getQ0();
        double[][] doubleArray53 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation50.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyInverseTo(rotation57);
        double double60 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation57.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation46.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation41.applyTo(rotation46);
        double double72 = rotation46.getQ3();
        double[][] doubleArray73 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation46.getAxis();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation11.applyTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation5.applyTo(rotation11);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1.0d) + "'", double68 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation77);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation20.getAxis();
        double[][] doubleArray38 = rotation20.getMatrix();
        double double39 = rotation20.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation20.getAxis();
        double double41 = rotation20.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ3();
        double double9 = rotation5.getQ1();
        double double10 = rotation5.getQ1();
        double double11 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.09950371902099892d + "'", double8 == 0.09950371902099892d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.995037190209989d + "'", double11 == 0.995037190209989d);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation13.revert();
        double double15 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ1();
        double[][] doubleArray27 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray27, 0.0d);
        double double30 = rotation29.getAngle();
        double double31 = rotation29.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        double[][] doubleArray33 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation13.applyInverseTo(rotation32);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ3();
        double double9 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        double double15 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.applyTo(rotation10);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.09950371902099892d + "'", double8 == 0.09950371902099892d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.995037190209989d + "'", double9 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double double16 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation18.revert();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.009999000149975004d) + "'", double16 == (-0.009999000149975004d));
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D58);
        double[][] doubleArray60 = rotation59.getMatrix();
        double[][] doubleArray61 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(doubleArray61, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation27.applyTo(rotation63);
        double double65 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation66.applyTo(rotation73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = null;
        double[] doubleArray76 = rotation73.getAngles(rotationOrder75);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0994987934600711d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (-0.04972887762276947d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7625584504796028d), 0.009999000149975004d, 0.35091626104800216d, (-0.09925833339709302d), false);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (-0.47591484164276077d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation77.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D57, vector3D72, vector3D82);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D57, (-0.009999000149975004d));
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D57, (double) (-1.0f));
        double double91 = rotation90.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.8775825618903728d + "'", double91 == 0.8775825618903728d);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        double double12 = rotation7.getQ2();
        double double13 = rotation7.getQ1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation17.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation18.applyTo(vector3D30);
        double double32 = rotation18.getQ1();
        double double33 = rotation18.getQ2();
        double double34 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation7.applyTo(rotation18);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D10, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.applyInverseTo(rotation29);
        double double32 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation43.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation44.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation33.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation21.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation5.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation61.revert();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.revert();
        double[][] doubleArray47 = rotation46.getMatrix();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(doubleArray47);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray32 = rotation16.getAngles(rotationOrder31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.47591484164276077d), 0.09949879346007118d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.7071067811865475d, (double) (short) 1, 0.9995924841818912d, false);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, 0.0d, (double) '4', 0.26237485370392877d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation31.applyTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D18, vector3D25, vector3D36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D73, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation();
        double double88 = rotation87.getQ3();
        double double89 = rotation87.getQ2();
        double double90 = rotation87.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation86.applyTo(vector3D91);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D66, vector3D73, vector3D80, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D49, vector3D61, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D91, (double) (-1));
        org.apache.commons.math.geometry.Rotation rotation97 = rotation5.applyTo(rotation96);
        org.apache.commons.math.geometry.Rotation rotation98 = rotation97.revert();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(rotation98);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        double double53 = rotation27.getQ3();
        double[][] doubleArray54 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation27.getAxis();
        double[][] doubleArray56 = rotation27.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray56);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, (double) (short) 10, 1.7345175425633084d, (double) (byte) -1, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0018853026163470825d + "'", double6 == 0.0018853026163470825d);
        org.junit.Assert.assertNotNull(rotation7);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 0.7053441835437086d, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation8);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ2();
        double double52 = rotation50.getQ0();
        double[][] doubleArray53 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation50.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyInverseTo(rotation57);
        double double60 = rotation57.getQ1();
        double[][] doubleArray61 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation49.applyTo(rotation57);
        double double63 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        double[][] doubleArray68 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation49.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation30.applyTo(rotation73);
        double double75 = rotation30.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.9949756218412634d + "'", double63 == 0.9949756218412634d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948963d, 0.9999000149975004d, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        double double15 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation23.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation12.applyInverseTo(rotation35);
        double double37 = rotation35.getQ0();
        double double38 = rotation35.getQ2();
        double double39 = rotation35.getQ1();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation7.applyInverseTo(rotation35);
        double[][] doubleArray42 = rotation7.getMatrix();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation9.getAngle();
        double double11 = rotation9.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.09949879346007118d, 0.007070537541434264d, 0.0d, (double) (short) 0, true);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.4577635057039505d, (double) 10, (-0.02857142857142857d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) (short) 0, (double) 0.0f, (double) (byte) 1, true);
        org.apache.commons.math.geometry.Rotation rotation8 = rotation0.applyInverseTo(rotation7);
        double[][] doubleArray9 = rotation7.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        double[][] doubleArray9 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray9, (double) (short) 1);
        double double12 = rotation11.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation14.applyTo(rotation20);
        double double23 = rotation20.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation53.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation54.applyTo(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        double double70 = rotation68.getQ2();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        double double75 = rotation72.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation72.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyInverseTo(vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D66, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D21, vector3D47, vector3D66);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D21, 0.26237485370392877d);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D21, (double) 1L);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.2857142857142857d, 0.0d, (double) 10.0f, 0.009949879346007126d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D22, 1.5707963267948963d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = null;
        double[] doubleArray27 = rotation25.getAngles(rotationOrder26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation40.applyTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation57.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation58.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation47.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation34.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation25.applyTo(rotation34);
        double double76 = rotation75.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.7854906019263537, 0.02719222489137559, -2.3561020516634397]");
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation51.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        double double70 = rotation67.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D71);
        double double75 = rotation74.getQ0();
        java.lang.Class<?> wildcardClass76 = rotation74.getClass();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9995924841818912d + "'", double75 == 0.9995924841818912d);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getAngle();
        double double13 = rotation3.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        double double14 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.5707963267948963d + "'", double14 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation7.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = null;
        double[] doubleArray10 = rotation7.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation32.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D21, (-0.5d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation7.applyInverseTo(rotation39);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.5707963267948963d + "'", double8 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.5707963267948966, 1.5707963267948968, -1.5707963267948966]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.995037190209989d + "'", double33 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D22, 1.5707963267948963d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = null;
        double[] doubleArray27 = rotation25.getAngles(rotationOrder26);
        double double28 = rotation25.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.7854906019263537, 0.02719222489137559, -2.3561020516634397]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        double double22 = rotation6.getAngle();
        double double23 = rotation6.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7071067811865475d), (-0.9950376827537689d), 3.1215943200414915d, (double) (short) -1, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        double double13 = rotation12.getQ1();
        double double14 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7071067811865475d) + "'", double13 == (-0.7071067811865475d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        double double13 = rotation10.getAngle();
        double[][] doubleArray14 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, (double) (short) 1);
        double double17 = rotation16.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation23.applyTo(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation16.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        double[][] doubleArray52 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(doubleArray52, (double) (short) 1);
        double double55 = rotation54.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation60.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation61.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation54.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D36, vector3D47, vector3D74);
        double[][] doubleArray77 = rotation76.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray77);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation77.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D57, vector3D72, vector3D82);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D57, (-0.009999000149975004d));
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D57, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D57, 0.9540556703999103d);
        double double93 = rotation92.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.45914084471304506d) + "'", double93 == (-0.45914084471304506d));
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation11.revert();
        double double16 = rotation11.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.09950371902099892d, 0.7053456158585982d, 0.41353925772895467d, (-4.0605492752594503E-4d), true);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) 1L, 0.0d, (double) 100.0f, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation42.getAxis();
        double double44 = rotation42.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D58);
        double[][] doubleArray60 = rotation59.getMatrix();
        double[][] doubleArray61 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(doubleArray61, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation27.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation63.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray67 = rotation63.getAngles(rotationOrder66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotation9);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D37, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        double double61 = rotation58.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation57.applyTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D44, vector3D51, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation68.applyInverseTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D31, vector3D51, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D73, (double) (short) 100);
        double[][] doubleArray78 = rotation77.getMatrix();
        double double79 = rotation77.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        double[][] doubleArray34 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, 0.9999250084364456d);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray34, 2.9422605910525994d);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double32 = rotation31.getQ0();
        double double33 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation34.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation31.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation25.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, (-0.5d));
        double double64 = rotation63.getQ0();
        double double65 = rotation63.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.5d) + "'", double32 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9689124217106447d + "'", double64 == 0.9689124217106447d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        double double46 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation47.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation5.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, 0.0d, (double) '4', 0.26237485370392877d, false);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation5.applyTo(rotation65);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.5707963267948963d + "'", double46 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation66);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation27.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation6.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D39, 1.5707963267948963d);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D39, 0.7053456158585982d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        java.lang.Class<?> wildcardClass8 = rotation5.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.110352820159525, 0.605491903246008, 3.110352820159525]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, 3.03025163924883d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation69.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D74, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation62.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation55.applyInverseTo(rotation62);
        double double82 = rotation81.getQ0();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation81.revert();
        double double84 = rotation81.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D22, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation59.applyTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D46, vector3D53, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation34.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D46);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) (-1), (-1.0d), (double) 0, true);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyInverseTo(rotation74);
        double double76 = rotation75.getQ3();
        double double77 = rotation75.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.47591484164276077d) + "'", double76 == (-0.47591484164276077d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.22889320619821607d + "'", double77 == 0.22889320619821607d);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 1.0d, 1.0d, (double) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 1);
        double double14 = rotation13.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation19.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation20.applyTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation13.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ1();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.0d);
        double double49 = rotation48.getAngle();
        double double50 = rotation48.getAngle();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation52.applyInverseTo(rotation59);
        double double62 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation70.revert();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ2();
        double double76 = rotation74.getQ0();
        double[][] doubleArray77 = rotation74.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation74.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation73.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        double double84 = rotation82.getQ2();
        double double85 = rotation82.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation82.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.applyTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation63.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation59.applyInverseTo(rotation63);
        double[][] doubleArray90 = rotation59.getMatrix();
        double double91 = rotation59.getQ1();
        double double92 = rotation59.getAngle();
        double double93 = rotation59.getQ2();
        double double94 = rotation59.getQ1();
        org.apache.commons.math.geometry.Rotation rotation95 = rotation48.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation13.applyInverseTo(rotation95);
        org.apache.commons.math.geometry.Rotation rotation97 = rotation6.applyTo(rotation13);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertNotNull(rotation97);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double[][] doubleArray16 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation5.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(100.0d, (double) 100.0f, (double) (byte) -1, (double) 10, false);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation37.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        double double60 = rotation57.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        double double62 = rotation57.getQ3();
        double double63 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation37.applyTo(rotation57);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(rotation64);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (double) (byte) 0, 0.7053441835437086d, 0.019227214231343204d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        double double17 = rotation14.getQ1();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.019227214231343204d);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyTo(rotation20);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation23);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation27.revert();
        double[][] doubleArray30 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 3.03025163924883d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        double double8 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.7071067811865475d + "'", double8 == 0.7071067811865475d);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, 2.562089250717698d, (-0.009999000149975004d), 2.943247885977952d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        double[][] doubleArray21 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray21, (double) (short) 1);
        double double24 = rotation23.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D34, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation23.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ2();
        double double41 = rotation39.getQ0();
        double[][] doubleArray42 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation39.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ2();
        double double52 = rotation50.getQ0();
        double[][] doubleArray53 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation50.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation49.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        double double61 = rotation58.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation50.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation39.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation23.applyInverseTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D64, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation75.getAxis();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D64, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation77.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D78, (double) 1.0f);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation13.applyTo(rotation80);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation81);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        double double9 = rotation4.getAngle();
        double double10 = rotation4.getQ1();
        java.lang.Class<?> wildcardClass11 = rotation4.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.562089250717698d, (-0.05672971756947102d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = rotation28.getAngles(rotationOrder30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ3();
        double double12 = rotation9.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9649660284921133d + "'", double12 == 0.9649660284921133d);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyInverseTo(rotation28);
        double double31 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation36.getQ2();
        double double40 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation28.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation46.getQ2();
        double double50 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation41.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation20.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation66.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation20.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation14.applyTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) 1L, 0.0d, (double) 100.0f, false);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation14.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D82, (double) ' ');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 0, 0.7053456158585982d, 2.943247885977952d, (double) (byte) -1, false);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double[][] doubleArray7 = rotation6.getMatrix();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (-1L), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, 0.0d, 0.9142857142857143d, (double) 100, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        double double14 = rotation11.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation42.applyInverseTo(rotation43);
        double double51 = rotation42.getAngle();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        double[][] doubleArray56 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray56, (double) (short) 1);
        double double59 = rotation58.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyInverseTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D69, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation58.applyInverseTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation42.applyTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation38.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation11.applyInverseTo(vector3D32);
        java.lang.Class<?> wildcardClass78 = rotation11.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.9142857142857143d);
        double double9 = rotation8.getAngle();
        double double10 = rotation8.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) (byte) 0, 0.0994987934600711d, 0.9142857142857143d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        double[][] doubleArray10 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ1();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation19.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation20.applyTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation37.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation15.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation15.revert();
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation5.applyTo(rotation46);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.5d) + "'", double8 == (-0.5d));
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        double[][] doubleArray34 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 1);
        double double37 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation20.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation16.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D52);
        double double55 = rotation54.getQ3();
        double[][] doubleArray56 = rotation54.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) 1L, 0.0d, (double) 100.0f, false);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation93.getAxis();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D84, vector3D94);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation6.applyInverseTo(vector3D26);
        double double28 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        double double53 = rotation50.getQ2();
        double double54 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation42.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation60.getQ2();
        double double64 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ0();
        double[][] doubleArray68 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation55.applyTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation34.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation6.applyTo(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D72, 0.7071067811865475d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = null;
        double[] doubleArray78 = rotation76.getAngles(rotationOrder77);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.5707963267948966, 0.7071067811865475, 1.5707963267948966]");
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0994987934600711d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 10.0d);
        double double24 = rotation23.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        double double12 = rotation7.getQ2();
        double double13 = rotation7.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation7.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray16 = rotation7.getAngles(rotationOrder15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation11.getMatrix();
        double double39 = rotation11.getQ0();
        double double40 = rotation11.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation9.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray12 = rotation9.getAngles(rotationOrder11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ3();
        double double9 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = null;
        double[] doubleArray17 = rotation15.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        double[][] doubleArray23 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(doubleArray23, (double) (short) 1);
        double double26 = rotation25.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D36, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation25.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation15.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation5.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyInverseTo(rotation50);
        double double53 = rotation50.getQ1();
        double[][] doubleArray54 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(doubleArray54, 0.019227214231343204d);
        double double57 = rotation56.getAngle();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        double double71 = rotation68.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation68.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation63.applyTo(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation79.getAxis();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D73, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation56.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D42, vector3D80);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.09950371902099892d + "'", double8 == 0.09950371902099892d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 0.5d);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, 0.7208382876544367d, (double) (byte) 100, 0.0994987934600711d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyInverseTo(rotation56);
        double double59 = rotation56.getQ1();
        double[][] doubleArray60 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(doubleArray60, 0.0d);
        double double63 = rotation62.getAngle();
        double double64 = rotation62.getAngle();
        double double65 = rotation62.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        double double67 = rotation62.getAngle();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation48.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation42.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation69.revert();
        double double71 = rotation70.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        java.lang.Class<?> wildcardClass6 = rotation0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        double double12 = rotation7.getQ2();
        double double13 = rotation7.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation7.getAxis();
        double double15 = rotation7.getQ0();
        double double16 = rotation7.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        double[][] doubleArray34 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 1);
        double double37 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation20.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation16.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D52);
        double[][] doubleArray55 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) (byte) 100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray55);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        double[][] doubleArray10 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray10, 0.7002759405293947d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray10);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        double double53 = rotation22.getAngle();
        double double54 = rotation22.getQ0();
        double double55 = rotation22.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.9422652488599566d + "'", double53 == 2.9422652488599566d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0994987934600711d + "'", double54 == 0.0994987934600711d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0994987934600711d + "'", double55 == 0.0994987934600711d);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        double double9 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.revert();
        double double11 = rotation4.getQ1();
        double double12 = rotation4.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D59, vector3D66, vector3D77);
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation47.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation79.revert();
        double double83 = rotation79.getQ2();
        double double84 = rotation79.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        double double30 = rotation27.getQ2();
        double double31 = rotation27.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation47.applyTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation27.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation56.applyInverseTo(rotation63);
        double double66 = rotation63.getQ1();
        double[][] doubleArray67 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(doubleArray67, 0.019227214231343204d);
        double double70 = rotation69.getAngle();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ2();
        double double79 = rotation77.getQ0();
        double[][] doubleArray80 = rotation77.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation77.applyInverseTo(rotation81);
        double double84 = rotation81.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation76.applyTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation92.getAxis();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D86, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation69.applyInverseTo(vector3D93);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D95, (-0.5d));
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D95);
        java.lang.Class<?> wildcardClass99 = vector3D40.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }
}

