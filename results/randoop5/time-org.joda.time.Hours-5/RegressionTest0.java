import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        java.lang.Class<?> wildcardClass2 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        // The following exception was thrown during execution in test generation
        try {
            int int3 = hours0.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = hours0.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours2 = org.joda.time.Hours.hoursBetween(readablePartial0, readablePartial1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Weeks weeks1 = hours0.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours7 = org.joda.time.Hours.MAX_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours8 = hours0.plus(hours7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 6 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours2 = org.joda.time.Hours.hoursBetween(readableInstant0, readableInstant1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = hours3.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Weeks weeks2 = hours0.toStandardWeeks();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.Hours hours9 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours3.get(durationFieldType10);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Weeks cannot be compared to class org.joda.time.Hours");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours6.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        java.lang.Class<?> wildcardClass15 = hours7.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        java.lang.Class<?> wildcardClass22 = hours21.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Weeks weeks2 = hours0.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"hi!\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours6.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = hours0.getFieldType(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = hours0.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours1.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        java.lang.Class<?> wildcardClass25 = hours21.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = hours7.getValue(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Weeks weeks2 = hours1.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours1.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = hours6.getFieldType(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = hours5.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Seconds seconds1 = hours0.toStandardSeconds();
        // The following exception was thrown during execution in test generation
        try {
            int int3 = seconds1.getValue(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = hours10.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MIN_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours11 = hours9.minus((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        int int13 = hours0.size();
        java.lang.String str14 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT1H" + "'", str14, "PT1H");
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        java.lang.Class<?> wildcardClass4 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Duration duration8 = hours0.toStandardDuration();
        org.joda.time.Hours hours9 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours10.get(durationFieldType11);
        boolean boolean13 = hours9.equals((java.lang.Object) durationFieldType11);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.multipliedBy(0);
        org.joda.time.Hours hours22 = hours9.plus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = hours22.getFieldType();
        boolean boolean24 = hours0.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        int int7 = hours6.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = hours0.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        int int6 = hours0.getHours();
        java.lang.Class<?> wildcardClass7 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 7 + "'", int6 == 7);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.multipliedBy(1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        java.lang.String str5 = hours0.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = hours0.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT7H" + "'", str5, "PT7H");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        java.lang.Class<?> wildcardClass4 = hours3.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.dividedBy(1);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = hours8.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours4 = hours1.multipliedBy((int) (short) 1);
        java.lang.Class<?> wildcardClass5 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.PeriodType periodType6 = hours5.getPeriodType();
        int int7 = hours5.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT1H");
        int int3 = hours1.getValue(0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        int int17 = hours0.size();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours18.isSupported(durationFieldType24);
        org.joda.time.PeriodType periodType26 = hours18.getPeriodType();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        int int31 = hours29.getValue((int) (short) 0);
        org.joda.time.Hours hours32 = hours28.minus(hours29);
        org.joda.time.Hours hours33 = hours27.minus(hours28);
        int int34 = hours27.size();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        org.joda.time.Hours hours39 = hours35.minus(hours36);
        boolean boolean41 = hours36.equals((java.lang.Object) (short) 10);
        int int42 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.Hours hours43 = hours18.plus(hours27);
        int int44 = hours27.getHours();
        boolean boolean45 = hours0.equals((java.lang.Object) int44);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 6 + "'", int44 == 6);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        int int32 = hours8.get(durationFieldType29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType34 = hours8.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 700 + "'", int32 == 700);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration1 = hours0.toStandardDuration();
        java.lang.Class<?> wildcardClass2 = duration1.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        // The following exception was thrown during execution in test generation
        try {
            int int3 = hours1.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        java.lang.Class<?> wildcardClass5 = hours3.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.minus(8);
        org.joda.time.DurationFieldType durationFieldType4 = hours3.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours6 = hours3.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = hours7.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.dividedBy(1);
        org.joda.time.Hours hours9 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        int int22 = hours9.getHours();
        boolean boolean23 = hours1.isGreaterThan(hours9);
        java.lang.Class<?> wildcardClass24 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours3.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = hours12.getValue(700);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 700");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = hours21.getValue(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        int int6 = hours5.getHours();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours5.compareTo(baseSingleFieldPeriod7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        int int6 = hours5.getHours();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours5.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.Hours hours25 = hours12.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        boolean boolean11 = hours7.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours12 = hours7.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        org.joda.time.Hours hours10 = hours3.dividedBy((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours12 = hours10.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = hours4.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = hours2.getFieldType(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        int int13 = hours0.size();
        org.joda.time.Hours hours14 = org.joda.time.Hours.MAX_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours15 = hours0.plus(hours14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 1 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours21 = hours0.multipliedBy((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        boolean boolean22 = hours1.equals((java.lang.Object) hours16);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = hours1.getValue((-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        int int5 = hours4.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        int int6 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.MutablePeriod mutablePeriod7 = hours1.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(7);
        org.joda.time.Hours hours10 = hours0.minus(hours1);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours1.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours1.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Minutes minutes5 = hours0.toStandardMinutes();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = hours0.getValue(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours26 = hours20.minus(hours22);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours34.get(durationFieldType38);
        int int40 = hours22.get(durationFieldType38);
        boolean boolean41 = hours0.equals((java.lang.Object) hours22);
        int int42 = hours22.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = hours17.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MIN_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours2 = hours0.multipliedBy(6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 6");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(7);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Period period9 = hours1.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        boolean boolean14 = hours0.equals((java.lang.Object) 7);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = hours4.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        int int9 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Duration duration8 = hours0.toStandardDuration();
        java.lang.Class<?> wildcardClass9 = duration8.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.PeriodType periodType36 = hours26.getPeriodType();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours26.minus(hours37);
        org.joda.time.Hours hours41 = hours20.minus(hours40);
        org.joda.time.Hours hours43 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean44 = hours41.isLessThan(hours43);
        boolean boolean45 = hours14.isLessThan(hours43);
        int int46 = hours14.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = hours17.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.DurationFieldType durationFieldType24 = hours16.getFieldType((int) (short) 0);
        org.joda.time.Period period25 = hours16.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.Duration duration26 = hours22.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod27 = hours22.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        java.lang.String str31 = hours28.toString();
        boolean boolean32 = hours22.isGreaterThan(hours28);
        org.joda.time.Hours hours34 = hours28.minus(10);
        int int35 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        java.lang.String str36 = hours34.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT8H" + "'", str31, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-2H" + "'", str36, "PT-2H");
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        boolean boolean17 = hours12.isSupported(durationFieldType16);
        boolean boolean18 = hours2.isSupported(durationFieldType16);
        boolean boolean19 = hours0.isSupported(durationFieldType16);
        org.joda.time.MutablePeriod mutablePeriod20 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(mutablePeriod20);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours10 = org.joda.time.Hours.THREE;
        org.joda.time.Period period11 = hours10.toPeriod();
        org.joda.time.Weeks weeks12 = hours10.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Hours cannot be compared to class org.joda.time.Weeks");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Days days4 = hours1.toStandardDays();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(10);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        java.lang.Class<?> wildcardClass13 = hours11.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.Class<?> wildcardClass21 = hours3.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period9 = hours8.toPeriod();
        org.joda.time.Hours hours11 = hours8.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Period period14 = hours13.toPeriod();
        org.joda.time.Hours hours16 = hours13.plus((int) (byte) -1);
        org.joda.time.Hours hours17 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.joda.time.Hours hours19 = hours7.plus(hours17);
        org.joda.time.Hours hours20 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = hours17.getFieldType();
        org.joda.time.DurationFieldType durationFieldType21 = hours17.getFieldType();
        boolean boolean22 = hours0.isSupported(durationFieldType21);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = hours0.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Period period3 = hours0.toPeriod();
        java.lang.Class<?> wildcardClass4 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Duration duration37 = hours34.toStandardDuration();
        java.lang.Class<?> wildcardClass38 = hours34.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.dividedBy(1);
        org.joda.time.Hours hours9 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        int int22 = hours9.getHours();
        boolean boolean23 = hours1.isGreaterThan(hours9);
        org.joda.time.Hours hours25 = hours1.multipliedBy(100);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = hours13.negated();
        java.lang.Class<?> wildcardClass15 = hours13.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        java.lang.Class<?> wildcardClass50 = hours46.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = hours0.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = hours8.minus(8);
        org.joda.time.DurationFieldType durationFieldType11 = hours10.getFieldType();
        boolean boolean12 = hours6.isGreaterThan(hours10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = hours6.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        java.lang.Class<?> wildcardClass4 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(6);
        org.joda.time.Hours hours2 = org.joda.time.Hours.ONE;
        int int3 = hours2.getHours();
        org.joda.time.Hours hours5 = hours2.plus(10);
        int int6 = hours2.size();
        org.joda.time.Hours hours7 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours8 = hours7.negated();
        org.joda.time.DurationFieldType durationFieldType9 = hours7.getFieldType();
        boolean boolean10 = hours2.isLessThan(hours7);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.PeriodType periodType19 = hours11.getPeriodType();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours21.minus(hours22);
        org.joda.time.Hours hours26 = hours20.minus(hours21);
        int int27 = hours20.size();
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        int int31 = hours29.getValue((int) (short) 0);
        org.joda.time.Hours hours32 = hours28.minus(hours29);
        boolean boolean34 = hours29.equals((java.lang.Object) (short) 10);
        int int35 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours36 = hours11.plus(hours20);
        org.joda.time.Hours hours37 = hours2.minus(hours11);
        int int38 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours2 = hours0.plus(0);
        int int4 = hours2.getValue(0);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        org.joda.time.Hours hours9 = hours5.minus(hours6);
        boolean boolean11 = hours6.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours12 = null;
        org.joda.time.Hours hours13 = hours6.minus(hours12);
        java.lang.String str14 = hours13.toString();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Hours hours30 = hours27.plus(8);
        org.joda.time.Hours hours31 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = hours31.getFieldType();
        boolean boolean35 = hours30.isSupported(durationFieldType34);
        int int36 = hours24.get(durationFieldType34);
        java.lang.String str37 = hours24.toString();
        org.joda.time.Hours hours39 = hours24.dividedBy((-8));
        boolean boolean40 = hours13.isLessThan(hours24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours41 = hours2.minus(hours24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -8");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-2147483648) + "'", int4 == (-2147483648));
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT8H" + "'", str14, "PT8H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT8H" + "'", str37, "PT8H");
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours16.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours19 = hours16.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.plus((int) '4');
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Hours hours30 = hours27.plus(8);
        org.joda.time.Hours hours31 = hours18.minus(hours30);
        org.joda.time.Hours hours32 = hours31.negated();
        boolean boolean33 = hours16.isLessThan(hours31);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = hours16.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Weeks weeks2 = hours0.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = weeks2.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        boolean boolean17 = hours12.isSupported(durationFieldType16);
        boolean boolean18 = hours2.isSupported(durationFieldType16);
        boolean boolean19 = hours0.isSupported(durationFieldType16);
        org.joda.time.Hours hours21 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours23 = hours21.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours24.isSupported(durationFieldType30);
        org.joda.time.Hours hours33 = hours24.minus((int) (short) -1);
        org.joda.time.PeriodType periodType34 = hours24.getPeriodType();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours24.minus(hours35);
        org.joda.time.Hours hours39 = hours21.plus(hours38);
        boolean boolean40 = hours0.equals((java.lang.Object) hours38);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = hours0.getValue(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours5 = hours1.plus((int) (short) 0);
        java.lang.Class<?> wildcardClass6 = hours5.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Period period15 = hours7.toPeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = hours16.isSupported(durationFieldType22);
        org.joda.time.Hours hours25 = hours16.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod26 = hours16.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours39.isSupported(durationFieldType41);
        org.joda.time.Hours hours43 = hours36.minus(hours39);
        org.joda.time.Hours hours44 = hours28.plus(hours43);
        boolean boolean45 = hours16.isLessThan(hours43);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours48.isSupported(durationFieldType50);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        int int55 = hours53.getValue((int) (short) 0);
        org.joda.time.Hours hours56 = hours52.minus(hours53);
        boolean boolean57 = hours48.isLessThan(hours53);
        org.joda.time.Hours hours58 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours58.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = hours58.getFieldType();
        boolean boolean62 = hours48.isSupported(durationFieldType61);
        boolean boolean63 = hours43.isSupported(durationFieldType61);
        boolean boolean64 = hours7.isSupported(durationFieldType61);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.dividedBy((int) (byte) -1);
        int int7 = hours6.getHours();
        boolean boolean8 = hours3.isGreaterThan(hours6);
        org.joda.time.PeriodType periodType9 = hours3.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Duration duration30 = hours27.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration30);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = hours0.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours32.minus(hours33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        boolean boolean48 = hours32.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period50 = hours49.toPeriod();
        org.joda.time.Hours hours52 = hours49.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.plus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        int int72 = hours54.get(durationFieldType70);
        boolean boolean73 = hours32.equals((java.lang.Object) hours54);
        boolean boolean74 = hours19.isLessThan(hours54);
        org.joda.time.Hours hours75 = hours54.negated();
        java.lang.Class<?> wildcardClass76 = hours75.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        int int13 = hours8.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours32.minus(hours33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        boolean boolean48 = hours32.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period50 = hours49.toPeriod();
        org.joda.time.Hours hours52 = hours49.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.plus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        int int72 = hours54.get(durationFieldType70);
        boolean boolean73 = hours32.equals((java.lang.Object) hours54);
        boolean boolean74 = hours19.isLessThan(hours54);
        org.joda.time.Hours hours75 = hours54.negated();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int77 = hours75.compareTo(baseSingleFieldPeriod76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours75);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = hours0.getValue(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        int int10 = hours3.getHours();
        java.lang.Class<?> wildcardClass11 = hours3.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        int int7 = hours1.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = hours7.minus(hours14);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.MutablePeriod mutablePeriod9 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.size();
        org.joda.time.Hours hours27 = hours13.minus((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = hours27.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours11 = hours9.negated();
        int int12 = hours11.getHours();
        java.lang.Class<?> wildcardClass13 = hours11.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-8) + "'", int12 == (-8));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours6 = hours5.negated();
        org.joda.time.DurationFieldType durationFieldType7 = hours5.getFieldType();
        boolean boolean8 = hours0.isLessThan(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.PeriodType periodType17 = hours9.getPeriodType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = hours18.minus(hours19);
        int int25 = hours18.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        int int33 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours34 = hours9.plus(hours18);
        org.joda.time.Hours hours35 = hours0.minus(hours9);
        org.joda.time.Duration duration36 = hours35.toStandardDuration();
        int int37 = hours35.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-6) + "'", int37 == (-6));
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.minus((int) (short) 0);
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours17.plus(hours35);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        int int54 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = hours49.isSupported(durationFieldType55);
        org.joda.time.Hours hours58 = hours49.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours59 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours60.get(durationFieldType61);
        boolean boolean63 = hours59.equals((java.lang.Object) durationFieldType61);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        int int69 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.Hours hours71 = hours67.multipliedBy(0);
        org.joda.time.Hours hours72 = hours59.plus(hours71);
        org.joda.time.DurationFieldType durationFieldType73 = hours72.getFieldType();
        boolean boolean74 = hours49.equals((java.lang.Object) durationFieldType73);
        int int75 = hours35.get(durationFieldType73);
        int int76 = hours16.get(durationFieldType73);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 8 + "'", int75 == 8);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 14 + "'", int76 == 14);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.PeriodType periodType30 = hours26.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-7H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = hours55.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType58 = hours56.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = hours4.negated();
        org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType();
        boolean boolean7 = hours0.equals((java.lang.Object) hours4);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = hours4.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        java.lang.Class<?> wildcardClass15 = hours14.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.PeriodType periodType13 = hours11.getPeriodType();
        org.joda.time.Hours hours14 = hours9.plus(hours11);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.minus((int) (short) 0);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = hours27.isSupported(durationFieldType29);
        org.joda.time.Hours hours31 = hours24.minus(hours27);
        org.joda.time.Hours hours32 = hours16.plus(hours31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.Hours hours39 = hours16.plus(hours36);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period41 = hours40.toPeriod();
        org.joda.time.Hours hours43 = hours40.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.THREE;
        org.joda.time.Period period46 = hours45.toPeriod();
        org.joda.time.Hours hours48 = hours45.plus((int) (byte) -1);
        org.joda.time.Hours hours49 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType50 = hours49.getFieldType();
        org.joda.time.Hours hours51 = hours39.plus(hours49);
        org.joda.time.Hours hours53 = hours51.multipliedBy((int) (byte) -1);
        boolean boolean54 = hours11.equals((java.lang.Object) (byte) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Duration duration5 = hours0.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = hours55.negated();
        java.lang.Class<?> wildcardClass57 = hours55.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.Hours hours8 = hours6.dividedBy(700);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours20.get(durationFieldType24);
        org.joda.time.Hours hours27 = hours20.minus((int) (short) 0);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        int int34 = hours33.getHours();
        org.joda.time.Hours hours36 = hours33.plus(10);
        org.joda.time.Hours hours37 = hours27.minus(hours36);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours37);
        boolean boolean39 = hours0.isLessThan(hours37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours41 = hours37.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = hours0.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = hours18.negated();
        org.joda.time.Period period20 = hours18.toPeriod();
        boolean boolean21 = hours0.equals((java.lang.Object) hours18);
        java.lang.Class<?> wildcardClass22 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = hours1.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = hours1.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period9 = hours8.toPeriod();
        org.joda.time.Hours hours11 = hours8.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Period period14 = hours13.toPeriod();
        org.joda.time.Hours hours16 = hours13.plus((int) (byte) -1);
        org.joda.time.Hours hours17 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.joda.time.Hours hours19 = hours7.plus(hours17);
        org.joda.time.Period period20 = hours7.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = hours10.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        boolean boolean20 = hours15.isSupported(durationFieldType19);
        int int21 = hours9.get(durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours32 = hours9.plus(hours22);
        java.lang.String str33 = hours9.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT8H" + "'", str33, "PT8H");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Duration duration57 = hours12.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = hours12.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Period period24 = hours16.toPeriod();
        org.joda.time.Hours hours25 = hours0.plus(hours16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = hours0.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours23 = hours21.minus((int) 'a');
        java.lang.Class<?> wildcardClass24 = hours21.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.Hours hours11 = hours1.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = hours14.getFieldType();
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours19 = hours13.negated();
        boolean boolean20 = hours3.isGreaterThan(hours19);
        org.joda.time.Period period21 = hours3.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours26 = hours20.minus(hours22);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours34.get(durationFieldType38);
        int int40 = hours22.get(durationFieldType38);
        boolean boolean41 = hours0.equals((java.lang.Object) hours22);
        org.joda.time.Period period42 = hours22.toPeriod();
        org.joda.time.Period period43 = hours22.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours30.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod38 = hours30.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = hours48.negated();
        org.joda.time.Period period50 = hours48.toPeriod();
        boolean boolean51 = hours30.equals((java.lang.Object) hours48);
        boolean boolean52 = hours26.equals((java.lang.Object) boolean51);
        int int53 = hours26.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        int int10 = hours8.size();
        org.joda.time.MutablePeriod mutablePeriod11 = hours8.toMutablePeriod();
        java.lang.Class<?> wildcardClass12 = mutablePeriod11.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours6.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        java.lang.Class<?> wildcardClass10 = hours8.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours2.minus((int) (byte) 10);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.multipliedBy((int) (byte) 100);
        boolean boolean14 = hours2.equals((java.lang.Object) (byte) 100);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours34 = hours20.negated();
        org.joda.time.Hours hours35 = hours34.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType37 = hours35.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        int int11 = hours0.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = hours0.toMutablePeriod();
        int int9 = hours0.getHours();
        java.lang.Class<?> wildcardClass10 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Duration duration4 = hours3.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = hours26.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType22 = hours9.getPeriodType();
        int int23 = hours9.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        boolean boolean20 = hours15.isSupported(durationFieldType19);
        int int21 = hours9.get(durationFieldType19);
        java.lang.String str22 = hours9.toString();
        org.joda.time.Hours hours24 = hours9.dividedBy((-8));
        int int25 = hours24.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = hours7.minus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = hours15.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours4 = hours3.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds5 = hours3.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 3600");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.minus((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours10.getFieldType(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        java.lang.Class<?> wildcardClass18 = hours16.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Minutes minutes3 = hours1.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        org.joda.time.Duration duration5 = hours4.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        boolean boolean15 = hours13.equals((java.lang.Object) 1.0f);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.Minutes minutes4 = hours0.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = hours0.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = hours18.negated();
        org.joda.time.Period period20 = hours18.toPeriod();
        boolean boolean21 = hours0.equals((java.lang.Object) hours18);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = hours0.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours14 = hours12.dividedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = hours1.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = hours13.negated();
        org.joda.time.Hours hours16 = hours13.minus(3);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours7 = org.joda.time.Hours.THREE;
        org.joda.time.Period period8 = hours7.toPeriod();
        org.joda.time.Hours hours10 = hours7.plus((int) (byte) -1);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        boolean boolean33 = hours27.isGreaterThan(hours31);
        org.joda.time.DurationFieldType durationFieldType35 = hours27.getFieldType((int) (short) 0);
        int int36 = hours27.size();
        org.joda.time.Hours hours37 = hours7.plus(hours27);
        org.joda.time.Hours hours39 = hours7.dividedBy((int) (short) 10);
        int int40 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        java.lang.String str5 = hours4.toString();
        int int7 = hours4.getValue(0);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = hours4.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-1H" + "'", str5, "PT-1H");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Duration duration14 = hours13.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(16);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.MAX_VALUE;
        int int38 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        int int39 = hours8.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.dividedBy((int) (byte) -1);
        int int7 = hours6.getHours();
        boolean boolean8 = hours3.isGreaterThan(hours6);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = hours3.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours16.isSupported(durationFieldType18);
        org.joda.time.Hours hours20 = hours13.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(hours20);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours28 = hours5.plus(hours25);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period30 = hours29.toPeriod();
        org.joda.time.Hours hours32 = hours29.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.THREE;
        org.joda.time.Period period35 = hours34.toPeriod();
        org.joda.time.Hours hours37 = hours34.plus((int) (byte) -1);
        org.joda.time.Hours hours38 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType39 = hours38.getFieldType();
        org.joda.time.Hours hours40 = hours28.plus(hours38);
        org.joda.time.Hours hours42 = hours40.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours44 = hours40.plus(6);
        boolean boolean45 = hours3.equals((java.lang.Object) hours44);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.THREE;
        org.joda.time.Period period11 = hours10.toPeriod();
        org.joda.time.Hours hours13 = hours10.plus((int) (byte) -1);
        org.joda.time.Hours hours14 = hours8.minus(hours10);
        org.joda.time.PeriodType periodType15 = hours10.getPeriodType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours17 = hours16.negated();
        org.joda.time.DurationFieldType durationFieldType18 = hours16.getFieldType();
        boolean boolean19 = hours10.isSupported(durationFieldType18);
        boolean boolean20 = hours0.equals((java.lang.Object) boolean19);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours30.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod38 = hours30.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = hours48.negated();
        org.joda.time.Period period50 = hours48.toPeriod();
        boolean boolean51 = hours30.equals((java.lang.Object) hours48);
        boolean boolean52 = hours26.equals((java.lang.Object) boolean51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        int int57 = hours55.getValue((int) (short) 0);
        org.joda.time.Hours hours58 = hours54.minus(hours55);
        org.joda.time.Hours hours59 = hours53.minus(hours54);
        org.joda.time.Hours hours61 = hours54.dividedBy(1);
        org.joda.time.Duration duration62 = hours54.toStandardDuration();
        boolean boolean63 = hours26.equals((java.lang.Object) hours54);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = hours64.getValue(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Hours hours58 = hours12.minus((-1));
        java.lang.Class<?> wildcardClass59 = hours12.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Duration duration8 = hours0.toStandardDuration();
        java.lang.Class<?> wildcardClass9 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(1);
        org.joda.time.Hours hours3 = hours1.dividedBy((int) (short) 1);
        java.lang.Class<?> wildcardClass4 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours2.minus((int) (byte) 10);
        org.joda.time.Hours hours5 = hours2.negated();
        org.joda.time.Hours hours7 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType8 = hours7.getPeriodType();
        int int9 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = hours5.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = hours6.getValue(700);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 700");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.Hours hours11 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        boolean boolean17 = hours13.equals((java.lang.Object) durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours21.multipliedBy(0);
        org.joda.time.Hours hours26 = hours13.plus(hours25);
        org.joda.time.Hours hours28 = hours26.minus((int) (byte) 100);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours31 = hours26.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 3 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(6);
        java.lang.Class<?> wildcardClass2 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours5.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours5.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Hours hours14 = org.joda.time.Hours.hoursIn(readableInterval13);
        int int15 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        int int25 = hours16.get(durationFieldType24);
        boolean boolean26 = hours14.isSupported(durationFieldType24);
        org.joda.time.PeriodType periodType27 = hours14.getPeriodType();
        boolean boolean28 = hours1.equals((java.lang.Object) hours14);
        org.joda.time.Hours hours30 = hours1.minus((-1));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Duration duration8 = hours7.toStandardDuration();
        java.lang.String str9 = hours7.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT7H" + "'", str9, "PT7H");
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        java.lang.String str2 = hours1.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-1H" + "'", str2, "PT-1H");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        java.lang.Object obj9 = new java.lang.Object();
        boolean boolean10 = hours0.equals(obj9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        int int1 = hours0.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = hours5.getFieldType((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = hours5.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = hours12.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType();
        int int23 = hours14.get(durationFieldType22);
        boolean boolean24 = hours12.isSupported(durationFieldType22);
        int int25 = hours5.get(durationFieldType22);
        org.joda.time.Period period26 = hours5.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours33 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours44.isSupported(durationFieldType46);
        org.joda.time.Hours hours48 = hours41.minus(hours44);
        org.joda.time.Hours hours49 = hours33.plus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        boolean boolean54 = hours48.isGreaterThan(hours52);
        org.joda.time.DurationFieldType durationFieldType56 = hours48.getFieldType((int) (short) 0);
        boolean boolean57 = hours18.isSupported(durationFieldType56);
        int int58 = hours18.size();
        org.joda.time.Period period59 = hours18.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.PeriodType periodType27 = hours25.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Duration duration8 = hours0.toStandardDuration();
        org.joda.time.Hours hours10 = hours0.plus(92);
        java.lang.Class<?> wildcardClass11 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours4 = hours3.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = hours4.getValue(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(1);
        org.joda.time.Hours hours3 = hours1.dividedBy((int) (short) 1);
        java.lang.Class<?> wildcardClass4 = hours3.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours29 = hours25.multipliedBy(0);
        org.joda.time.Duration duration30 = hours25.toStandardDuration();
        org.joda.time.Hours hours32 = hours25.dividedBy((int) (short) -1);
        int int33 = hours32.size();
        boolean boolean34 = hours21.isLessThan(hours32);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = hours32.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours5 = hours1.plus((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours7 = hours1.minus((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 1");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours6 = hours1.plus((int) (byte) 1);
        org.joda.time.Hours hours8 = hours1.dividedBy(100);
        org.joda.time.Hours hours9 = hours8.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = hours9.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.PeriodType periodType36 = hours26.getPeriodType();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours26.minus(hours37);
        org.joda.time.Hours hours41 = hours20.minus(hours40);
        org.joda.time.Hours hours43 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean44 = hours41.isLessThan(hours43);
        boolean boolean45 = hours14.isLessThan(hours43);
        org.joda.time.Hours hours46 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours43);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hours46);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.dividedBy(1);
        org.joda.time.Duration duration9 = hours1.toStandardDuration();
        java.lang.String str10 = hours1.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT7H" + "'", str10, "PT7H");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(1);
        org.joda.time.Hours hours3 = hours1.dividedBy((int) (short) 1);
        boolean boolean5 = hours1.equals((java.lang.Object) 700);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = hours9.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours19.get(durationFieldType23);
        boolean boolean25 = hours17.isGreaterThan(hours19);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours6 = hours5.negated();
        org.joda.time.DurationFieldType durationFieldType7 = hours5.getFieldType();
        boolean boolean8 = hours0.isLessThan(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.PeriodType periodType17 = hours9.getPeriodType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = hours18.minus(hours19);
        int int25 = hours18.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        int int33 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours34 = hours9.plus(hours18);
        org.joda.time.Hours hours35 = hours0.minus(hours9);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = hours35.getValue((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        boolean boolean17 = hours12.isSupported(durationFieldType16);
        boolean boolean18 = hours2.isSupported(durationFieldType16);
        boolean boolean19 = hours0.isSupported(durationFieldType16);
        org.joda.time.Period period20 = hours0.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod3 = hours0.toMutablePeriod();
        java.lang.Class<?> wildcardClass4 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = hours0.negated();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        java.lang.Class<?> wildcardClass5 = hours4.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Hours hours31 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours33 = hours31.dividedBy(16);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours34.isSupported(durationFieldType40);
        org.joda.time.Hours hours43 = hours34.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod44 = hours34.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.minus((int) (short) 0);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours57.isSupported(durationFieldType59);
        org.joda.time.Hours hours61 = hours54.minus(hours57);
        org.joda.time.Hours hours62 = hours46.plus(hours61);
        boolean boolean63 = hours34.isLessThan(hours61);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod65 = hours64.toMutablePeriod();
        org.joda.time.Hours hours66 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours67 = hours64.minus(hours66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = hours66.isSupported(durationFieldType68);
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        int int73 = hours71.getValue((int) (short) 0);
        org.joda.time.Hours hours74 = hours70.minus(hours71);
        boolean boolean75 = hours66.isLessThan(hours71);
        org.joda.time.Hours hours76 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = hours76.get(durationFieldType77);
        org.joda.time.DurationFieldType durationFieldType79 = hours76.getFieldType();
        boolean boolean80 = hours66.isSupported(durationFieldType79);
        boolean boolean81 = hours61.isSupported(durationFieldType79);
        int int82 = hours31.get(durationFieldType79);
        int int83 = hours27.get(durationFieldType79);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 8 + "'", int73 == 8);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = hours2.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        int int23 = hours17.getHours();
        boolean boolean24 = hours0.equals((java.lang.Object) int23);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int26 = hours0.compareTo(baseSingleFieldPeriod25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours2.minus((int) (byte) 10);
        org.joda.time.Hours hours5 = hours2.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = hours2.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        boolean boolean20 = hours15.isSupported(durationFieldType19);
        int int21 = hours9.get(durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours32 = hours9.plus(hours22);
        int int33 = hours22.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.DurationFieldType durationFieldType9 = hours7.getFieldType();
        org.joda.time.Period period10 = hours7.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus((-25));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = hours13.minus((int) (byte) 100);
        org.joda.time.Hours hours16 = hours15.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Days days1 = hours0.toStandardDays();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours23 = hours21.minus((int) 'a');
        org.joda.time.Duration duration24 = hours23.toStandardDuration();
        java.lang.Class<?> wildcardClass25 = duration24.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = hours4.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType8 = hours0.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(durationFieldType8);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours8.dividedBy(14);
        int int30 = hours8.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        java.lang.Class<?> wildcardClass27 = hours26.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        org.joda.time.Hours hours24 = org.joda.time.Hours.ONE;
        int int25 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        boolean boolean27 = hours23.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours28 = hours15.minus(hours23);
        java.lang.String str29 = hours28.toString();
        org.joda.time.Period period30 = hours28.toPeriod();
        int int31 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType33 = hours28.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-7H" + "'", str29, "PT-7H");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.DurationFieldType durationFieldType16 = hours0.getFieldType();
        org.joda.time.Period period17 = hours0.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = hours0.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        boolean boolean22 = hours1.equals((java.lang.Object) hours16);
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = hours24.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours29 = hours27.dividedBy((int) (byte) -1);
        int int30 = hours29.getHours();
        boolean boolean31 = hours26.isGreaterThan(hours29);
        boolean boolean32 = hours1.isGreaterThan(hours29);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Minutes minutes2 = hours1.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = hours17.getFieldType();
        org.joda.time.DurationFieldType durationFieldType21 = hours17.getFieldType();
        boolean boolean22 = hours0.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours0.multipliedBy((-7));
        org.joda.time.Hours hours26 = hours0.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        int int4 = hours3.size();
        org.joda.time.Hours hours6 = hours3.dividedBy(8);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = hours55.negated();
        int int57 = hours55.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 15 + "'", int57 == 15);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        int int59 = hours57.getValue((int) (short) 0);
        org.joda.time.Hours hours60 = hours56.minus(hours57);
        boolean boolean62 = hours57.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours63 = null;
        org.joda.time.Hours hours64 = hours57.minus(hours63);
        org.joda.time.Hours hours65 = hours64.negated();
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.Duration duration70 = hours66.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod71 = hours66.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        int int74 = hours72.getValue((int) (short) 0);
        java.lang.String str75 = hours72.toString();
        boolean boolean76 = hours66.isGreaterThan(hours72);
        org.joda.time.Hours hours78 = hours72.minus(10);
        org.joda.time.Hours hours79 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours80 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod81 = hours80.toMutablePeriod();
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours83 = hours80.minus(hours82);
        int int84 = hours79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours82);
        org.joda.time.Hours hours85 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours79);
        org.joda.time.DurationFieldType durationFieldType86 = null;
        int int87 = hours79.get(durationFieldType86);
        boolean boolean88 = hours78.equals((java.lang.Object) hours79);
        java.lang.String str89 = hours78.toString();
        org.joda.time.DurationFieldType durationFieldType91 = hours78.getFieldType(0);
        boolean boolean92 = hours64.isGreaterThan(hours78);
        boolean boolean93 = hours20.isGreaterThan(hours78);
        org.joda.time.Hours hours95 = hours78.minus((-7));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 8 + "'", int74 == 8);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT8H" + "'", str75, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT-2H" + "'", str89, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(hours95);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        org.joda.time.Hours hours17 = hours7.dividedBy((-25));
        int int18 = hours17.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        java.lang.String str24 = hours16.toString();
        java.lang.Class<?> wildcardClass25 = hours16.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT-1H" + "'", str24, "PT-1H");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Duration duration34 = hours30.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod35 = hours30.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        java.lang.String str39 = hours36.toString();
        boolean boolean40 = hours30.isGreaterThan(hours36);
        org.joda.time.Hours hours42 = hours36.minus(10);
        org.joda.time.Hours hours43 = hours36.negated();
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.multipliedBy(1);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        int int54 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        boolean boolean55 = hours27.isGreaterThan(hours51);
        org.joda.time.Hours hours57 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours58.minus((int) (short) 0);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours68.isSupported(durationFieldType70);
        org.joda.time.Hours hours72 = hours65.minus(hours68);
        org.joda.time.Hours hours73 = hours57.plus(hours72);
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        boolean boolean78 = hours72.isGreaterThan(hours76);
        org.joda.time.Hours hours79 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours80 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours81 = org.joda.time.Hours.EIGHT;
        int int83 = hours81.getValue((int) (short) 0);
        org.joda.time.Hours hours84 = hours80.minus(hours81);
        org.joda.time.Hours hours85 = hours79.minus(hours80);
        org.joda.time.Hours hours87 = hours80.dividedBy(1);
        org.joda.time.Duration duration88 = hours80.toStandardDuration();
        boolean boolean89 = hours76.isGreaterThan(hours80);
        org.joda.time.Hours hours90 = hours76.negated();
        org.joda.time.Hours hours91 = hours90.negated();
        int int92 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours90);
        java.lang.String str93 = hours90.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT8H" + "'", str39, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 8 + "'", int83 == 8);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "PT-8H" + "'", str93, "PT-8H");
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        org.joda.time.Weeks weeks3 = hours1.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.PeriodType periodType1 = hours0.getPeriodType();
        org.joda.time.Hours hours2 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        int int3 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Period period5 = hours0.toPeriod();
        org.joda.time.Duration duration6 = hours0.toStandardDuration();
        org.joda.time.Duration duration7 = hours0.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours9 = hours0.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration7);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        java.lang.String str3 = hours0.toString();
        org.joda.time.Days days4 = hours0.toStandardDays();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT8H" + "'", str3, "PT8H");
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.MutablePeriod mutablePeriod2 = hours0.toMutablePeriod();
        org.joda.time.Days days3 = hours0.toStandardDays();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        java.lang.Class<?> wildcardClass5 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        int int5 = hours4.size();
        java.lang.String str6 = hours4.toString();
        org.joda.time.MutablePeriod mutablePeriod7 = hours4.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-1H" + "'", str6, "PT-1H");
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours34);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        org.joda.time.Hours hours26 = null;
        boolean boolean27 = hours21.isLessThan(hours26);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = hours13.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(3);
        int int5 = hours4.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        boolean boolean28 = hours23.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours29 = null;
        org.joda.time.Hours hours30 = hours23.minus(hours29);
        java.lang.String str31 = hours30.toString();
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        int int41 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        int int42 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = hours33.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT8H" + "'", str31, "PT8H");
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        java.lang.String str23 = hours16.toString();
        org.joda.time.Hours hours24 = hours16.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = hours16.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-1H" + "'", str23, "PT-1H");
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.PeriodType periodType36 = hours26.getPeriodType();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours26.minus(hours37);
        org.joda.time.Hours hours41 = hours20.minus(hours40);
        org.joda.time.Hours hours43 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean44 = hours41.isLessThan(hours43);
        boolean boolean45 = hours14.isLessThan(hours43);
        org.joda.time.Hours hours47 = hours43.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hours47);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.multipliedBy((int) (short) 10);
        org.joda.time.Period period15 = hours5.toPeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours24 = hours22.multipliedBy((int) (byte) 10);
        boolean boolean25 = hours5.isLessThan(hours24);
        int int26 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.Hours hours28 = hours5.plus((-8));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        int int4 = hours2.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        int int6 = hours5.getHours();
        org.joda.time.Hours hours8 = hours5.plus(10);
        org.joda.time.Period period9 = hours8.toPeriod();
        boolean boolean10 = hours2.isLessThan(hours8);
        org.joda.time.Duration duration11 = hours2.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.PeriodType periodType13 = hours12.getPeriodType();
        org.joda.time.Hours hours15 = hours12.multipliedBy(100);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        boolean boolean30 = hours25.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours31 = null;
        org.joda.time.Hours hours32 = hours25.minus(hours31);
        org.joda.time.Hours hours33 = hours32.negated();
        java.lang.String str34 = hours33.toString();
        boolean boolean35 = hours20.equals((java.lang.Object) hours33);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT-8H" + "'", str34, "PT-8H");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.PeriodType periodType47 = hours9.getPeriodType();
        java.lang.Class<?> wildcardClass48 = periodType47.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        java.lang.String str10 = hours9.toString();
        int int11 = hours9.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT-8H" + "'", str10, "PT-8H");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours19 = hours7.dividedBy(6);
        org.joda.time.Hours hours21 = hours7.minus((int) '#');
        org.joda.time.Hours hours22 = hours7.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours7.dividedBy((int) '4');
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.Hours hours47 = hours7.minus(hours41);
        org.joda.time.PeriodType periodType48 = hours7.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(periodType48);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.DurationFieldType durationFieldType6 = hours0.getFieldType(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.joda.time.DurationFieldType durationFieldType5 = hours3.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Duration duration12 = hours10.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Period period11 = hours8.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Hours hours21 = org.joda.time.Hours.hoursIn(readableInterval20);
        int int22 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        int int26 = hours24.getValue((int) (short) 0);
        org.joda.time.Hours hours27 = hours23.minus(hours24);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        int int32 = hours23.get(durationFieldType31);
        boolean boolean33 = hours21.isSupported(durationFieldType31);
        boolean boolean34 = hours8.isSupported(durationFieldType31);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        java.lang.String str9 = hours8.toString();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        int int19 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Duration duration21 = hours20.toStandardDuration();
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = hours22.getFieldType();
        boolean boolean26 = hours20.isSupported(durationFieldType25);
        int int27 = hours8.get(durationFieldType25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-2H");
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        org.joda.time.Hours hours24 = org.joda.time.Hours.ONE;
        int int25 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        boolean boolean27 = hours23.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours28 = hours15.minus(hours23);
        java.lang.String str29 = hours28.toString();
        org.joda.time.Period period30 = hours28.toPeriod();
        int int31 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        int int32 = hours13.getHours();
        int int33 = hours13.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-7H" + "'", str29, "PT-7H");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-7) + "'", int32 == (-7));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-7) + "'", int33 == (-7));
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours19 = hours7.dividedBy(6);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Hours hours21 = org.joda.time.Hours.hoursIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = hours21.getFieldType();
        org.joda.time.Hours hours24 = hours21.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours26 = hours21.plus((int) (byte) 1);
        org.joda.time.Hours hours27 = hours26.negated();
        int int28 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        int int29 = hours26.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours15 = hours12.plus(700);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours15.plus(hours16);
        boolean boolean18 = hours7.isGreaterThan(hours17);
        org.joda.time.PeriodType periodType19 = hours17.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        java.lang.String str3 = hours0.toString();
        org.joda.time.MutablePeriod mutablePeriod4 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT8H" + "'", str3, "PT8H");
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = hours1.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = hours1.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod5 = hours1.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours23 = hours21.minus((int) 'a');
        org.joda.time.Duration duration24 = hours23.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = hours23.getValue((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours18 = hours16.dividedBy(5);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours42 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        boolean boolean46 = hours42.equals((java.lang.Object) durationFieldType44);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        int int52 = hours47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        org.joda.time.Hours hours54 = hours50.multipliedBy(0);
        org.joda.time.Hours hours55 = hours42.plus(hours54);
        org.joda.time.DurationFieldType durationFieldType56 = hours55.getFieldType();
        boolean boolean57 = hours32.equals((java.lang.Object) durationFieldType56);
        int int58 = hours18.get(durationFieldType56);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period60 = hours59.toPeriod();
        org.joda.time.Hours hours62 = hours59.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod63 = hours62.toMutablePeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.THREE;
        org.joda.time.Period period65 = hours64.toPeriod();
        org.joda.time.Hours hours67 = hours64.plus((int) (byte) -1);
        org.joda.time.Hours hours68 = hours62.minus(hours64);
        org.joda.time.PeriodType periodType69 = hours64.getPeriodType();
        org.joda.time.Hours hours70 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration71 = hours70.toStandardDuration();
        boolean boolean72 = hours64.isLessThan(hours70);
        boolean boolean73 = hours18.isGreaterThan(hours70);
        org.joda.time.Hours hours74 = hours18.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 8 + "'", int58 == 8);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours74);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        boolean boolean22 = hours17.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours23 = null;
        org.joda.time.Hours hours24 = hours17.minus(hours23);
        org.joda.time.Hours hours25 = hours24.negated();
        org.joda.time.Hours hours26 = hours3.minus(hours24);
        int int27 = hours3.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.MutablePeriod mutablePeriod9 = hours3.toMutablePeriod();
        org.joda.time.Hours hours11 = hours3.multipliedBy((int) (byte) 100);
        java.lang.Object obj12 = new java.lang.Object();
        boolean boolean13 = hours3.equals(obj12);
        org.joda.time.Hours hours14 = hours2.minus(hours3);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        boolean boolean19 = hours14.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = hours14.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.size();
        org.joda.time.Hours hours27 = hours13.minus((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = hours27.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(periodType28);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.DurationFieldType durationFieldType9 = hours7.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = hours7.getValue(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours6.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours6.minus((int) (short) -1);
        org.joda.time.PeriodType periodType16 = hours6.getPeriodType();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours6.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(7);
        org.joda.time.Hours hours23 = hours6.negated();
        org.joda.time.Hours hours25 = hours23.multipliedBy(100);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours33 = null;
        org.joda.time.Hours hours34 = hours27.minus(hours33);
        org.joda.time.Hours hours35 = hours34.negated();
        org.joda.time.Hours hours36 = hours23.plus(hours34);
        boolean boolean37 = hours5.isGreaterThan(hours34);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.Days days2 = hours1.toStandardDays();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.PeriodType periodType20 = hours0.getPeriodType();
        java.lang.Class<?> wildcardClass21 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        boolean boolean17 = hours12.isSupported(durationFieldType16);
        boolean boolean18 = hours2.isSupported(durationFieldType16);
        boolean boolean19 = hours0.isSupported(durationFieldType16);
        org.joda.time.Hours hours21 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours23 = hours21.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours24.isSupported(durationFieldType30);
        org.joda.time.Hours hours33 = hours24.minus((int) (short) -1);
        org.joda.time.PeriodType periodType34 = hours24.getPeriodType();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours24.minus(hours35);
        org.joda.time.Hours hours39 = hours21.plus(hours38);
        boolean boolean40 = hours0.equals((java.lang.Object) hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.DurationFieldType durationFieldType47 = hours41.getFieldType();
        boolean boolean48 = hours0.isSupported(durationFieldType47);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours4 = hours3.negated();
        java.lang.String str5 = hours3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours7 = hours3.minus(15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483647 + -15");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-2147483647H" + "'", str5, "PT-2147483647H");
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.Duration duration26 = hours22.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod27 = hours22.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        java.lang.String str31 = hours28.toString();
        boolean boolean32 = hours22.isGreaterThan(hours28);
        org.joda.time.Hours hours34 = hours28.minus(10);
        int int35 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        int int36 = hours17.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT8H" + "'", str31, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.Duration duration38 = hours37.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        java.lang.Class<?> wildcardClass56 = hours20.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.minus((int) ' ');
        org.joda.time.Hours hours5 = hours3.dividedBy(14);
        org.joda.time.Duration duration6 = hours5.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours6.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours6.minus((int) (short) -1);
        org.joda.time.PeriodType periodType16 = hours6.getPeriodType();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours6.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(7);
        org.joda.time.Hours hours23 = hours6.negated();
        boolean boolean24 = hours5.isLessThan(hours23);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = hours23.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        int int5 = hours4.getHours();
        org.joda.time.Hours hours7 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours9 = hours7.minus(8);
        org.joda.time.Hours hours10 = hours4.minus(hours7);
        java.lang.Class<?> wildcardClass11 = hours4.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-8) + "'", int5 == (-8));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        java.lang.String str14 = hours12.toString();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.Hours hours25 = hours24.negated();
        org.joda.time.Duration duration26 = hours25.toStandardDuration();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.Hours hours39 = hours36.plus(8);
        org.joda.time.Hours hours40 = hours27.minus(hours39);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        boolean boolean48 = hours41.isSupported(durationFieldType47);
        org.joda.time.Hours hours50 = hours41.minus((int) (short) -1);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        org.joda.time.Hours hours56 = hours53.plus(8);
        org.joda.time.Hours hours57 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = hours57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = hours57.getFieldType();
        boolean boolean61 = hours56.isSupported(durationFieldType60);
        int int62 = hours50.get(durationFieldType60);
        int int63 = hours39.get(durationFieldType60);
        int int64 = hours25.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType65 = hours25.getFieldType();
        boolean boolean66 = hours12.isSupported(durationFieldType65);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        int int68 = hours67.getHours();
        org.joda.time.Hours hours70 = hours67.plus(10);
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = hours71.get(durationFieldType75);
        org.joda.time.Hours hours78 = hours71.multipliedBy(1);
        boolean boolean79 = hours67.isGreaterThan(hours71);
        org.joda.time.Hours hours80 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours67);
        boolean boolean81 = hours12.equals((java.lang.Object) hours67);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0H" + "'", str14, "PT0H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8 + "'", int62 == 8);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 16 + "'", int63 == 16);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-8) + "'", int64 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        int int5 = hours4.getHours();
        org.joda.time.Hours hours7 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours9 = hours7.minus(8);
        org.joda.time.Hours hours10 = hours4.minus(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours35 = hours12.plus(hours32);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours36.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn(readableInterval44);
        int int46 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        boolean boolean47 = hours32.isGreaterThan(hours43);
        org.joda.time.Hours hours49 = hours32.multipliedBy(16);
        org.joda.time.Hours hours51 = hours32.multipliedBy((int) (short) 0);
        org.joda.time.Period period52 = hours51.toPeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        int int56 = hours54.getValue((int) (short) 0);
        org.joda.time.Hours hours57 = hours53.minus(hours54);
        org.joda.time.Hours hours58 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours58.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = hours58.getFieldType();
        int int62 = hours53.get(durationFieldType61);
        boolean boolean63 = hours51.isSupported(durationFieldType61);
        boolean boolean64 = hours10.isSupported(durationFieldType61);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-8) + "'", int5 == (-8));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7 + "'", int62 == 7);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT12H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.PeriodType periodType4 = hours0.getPeriodType();
        org.joda.time.Hours hours6 = hours0.minus((int) 'a');
        java.lang.String str7 = hours6.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-90H" + "'", str7, "PT-90H");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours21.isSupported(durationFieldType23);
        org.joda.time.Hours hours25 = hours18.minus(hours21);
        org.joda.time.Hours hours26 = hours10.plus(hours25);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        boolean boolean31 = hours25.isGreaterThan(hours29);
        org.joda.time.DurationFieldType durationFieldType33 = hours25.getFieldType((int) (short) 0);
        int int34 = hours25.size();
        org.joda.time.Hours hours35 = hours5.plus(hours25);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.Hours hours42 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours36);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.Hours hours48 = hours45.plus(8);
        org.joda.time.Hours hours49 = hours36.minus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        int int53 = hours51.getValue((int) (short) 0);
        org.joda.time.Hours hours54 = hours50.minus(hours51);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Hours hours60 = hours57.plus(8);
        org.joda.time.Hours hours61 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours61.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = hours61.getFieldType();
        boolean boolean65 = hours60.isSupported(durationFieldType64);
        boolean boolean66 = hours50.isSupported(durationFieldType64);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period68 = hours67.toPeriod();
        org.joda.time.Hours hours70 = hours67.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.THREE;
        org.joda.time.Period period73 = hours72.toPeriod();
        org.joda.time.Hours hours75 = hours72.plus((int) (byte) -1);
        org.joda.time.Hours hours76 = hours70.minus(hours72);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod78 = hours77.toMutablePeriod();
        org.joda.time.Hours hours79 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours80 = hours77.minus(hours79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = hours77.get(durationFieldType81);
        org.joda.time.Hours hours84 = hours77.minus((int) (short) 0);
        org.joda.time.Hours hours85 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType86 = null;
        int int87 = hours85.get(durationFieldType86);
        org.joda.time.DurationFieldType durationFieldType88 = hours85.getFieldType();
        int int89 = hours84.get(durationFieldType88);
        int int90 = hours72.get(durationFieldType88);
        boolean boolean91 = hours50.equals((java.lang.Object) hours72);
        boolean boolean92 = hours48.equals((java.lang.Object) hours72);
        boolean boolean93 = hours35.isLessThan(hours72);
        boolean boolean94 = hours0.isGreaterThan(hours72);
        org.joda.time.Hours hours95 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 7 + "'", int89 == 7);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(hours95);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.PeriodType periodType8 = hours0.getPeriodType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.MutablePeriod mutablePeriod15 = hours9.toMutablePeriod();
        org.joda.time.Hours hours17 = hours9.multipliedBy((int) (byte) 100);
        boolean boolean18 = hours0.isGreaterThan(hours9);
        int int19 = hours9.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = hours9.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours0.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = hours25.getFieldType();
        org.joda.time.DurationFieldType durationFieldType30 = hours25.getFieldType();
        int int31 = hours21.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours21.multipliedBy((-8));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours34 = hours0.plus(hours21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 7");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(hours33);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = hours24.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = hours27.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = hours27.minus((int) (short) -1);
        org.joda.time.PeriodType periodType37 = hours27.getPeriodType();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours27.minus(hours38);
        org.joda.time.Hours hours42 = hours24.plus(hours41);
        org.joda.time.Period period43 = hours24.toPeriod();
        org.joda.time.Hours hours44 = hours12.minus(hours24);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(hours44);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours6 = hours1.plus((int) (byte) 1);
        java.lang.Object obj7 = null;
        boolean boolean8 = hours6.equals(obj7);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours16 = hours7.minus((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours22 = hours19.plus(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        boolean boolean27 = hours22.isSupported(durationFieldType26);
        int int28 = hours16.get(durationFieldType26);
        boolean boolean29 = hours6.isSupported(durationFieldType26);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        boolean boolean39 = hours6.equals((java.lang.Object) hours38);
        org.joda.time.Hours hours41 = hours6.plus((-1));
        org.joda.time.PeriodType periodType42 = hours41.getPeriodType();
        org.joda.time.Duration duration43 = hours41.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-8));
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours11.getFieldType();
        boolean boolean14 = hours5.isSupported(durationFieldType13);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours5);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours5.minus(hours16);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours21.minus(hours22);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours27.minus(hours28);
        org.joda.time.Hours hours32 = hours26.minus(hours27);
        int int33 = hours26.size();
        org.joda.time.Duration duration34 = hours26.toStandardDuration();
        boolean boolean35 = hours22.isGreaterThan(hours26);
        org.joda.time.MutablePeriod mutablePeriod36 = hours26.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType37 = hours26.getFieldType();
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period39 = hours38.toPeriod();
        org.joda.time.Hours hours41 = hours38.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Period period44 = hours43.toPeriod();
        org.joda.time.Hours hours46 = hours43.plus((int) (byte) -1);
        org.joda.time.Hours hours47 = hours41.minus(hours43);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.minus((int) (short) 0);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        int int60 = hours55.get(durationFieldType59);
        int int61 = hours43.get(durationFieldType59);
        int int62 = hours26.get(durationFieldType59);
        boolean boolean63 = hours17.isGreaterThan(hours26);
        org.joda.time.Hours hours65 = hours26.multipliedBy(10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 6 + "'", int62 == 6);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours65);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        java.lang.String str5 = hours1.toString();
        org.joda.time.PeriodType periodType6 = hours1.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT100H" + "'", str5, "PT100H");
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours6.multipliedBy((int) (byte) 10);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.Hours hours14 = hours11.plus(8);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        boolean boolean19 = hours14.isSupported(durationFieldType18);
        int int20 = hours6.get(durationFieldType18);
        org.joda.time.Hours hours21 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertNotNull(hours21);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours23 = hours21.minus((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int25 = hours21.getValue((-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = hours16.negated();
        org.joda.time.Hours hours25 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours36.isSupported(durationFieldType38);
        org.joda.time.Hours hours40 = hours33.minus(hours36);
        org.joda.time.Hours hours41 = hours25.plus(hours40);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        boolean boolean46 = hours40.isGreaterThan(hours44);
        java.lang.String str47 = hours40.toString();
        org.joda.time.Hours hours48 = hours16.plus(hours40);
        boolean boolean49 = hours9.equals((java.lang.Object) hours16);
        org.joda.time.PeriodType periodType50 = hours16.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT-1H" + "'", str47, "PT-1H");
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        java.lang.String str57 = hours12.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT16H" + "'", str57, "PT16H");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        int int59 = hours57.getValue((int) (short) 0);
        org.joda.time.Hours hours60 = hours56.minus(hours57);
        boolean boolean62 = hours57.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours63 = null;
        org.joda.time.Hours hours64 = hours57.minus(hours63);
        org.joda.time.Hours hours65 = hours64.negated();
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.Duration duration70 = hours66.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod71 = hours66.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        int int74 = hours72.getValue((int) (short) 0);
        java.lang.String str75 = hours72.toString();
        boolean boolean76 = hours66.isGreaterThan(hours72);
        org.joda.time.Hours hours78 = hours72.minus(10);
        org.joda.time.Hours hours79 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours80 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod81 = hours80.toMutablePeriod();
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours83 = hours80.minus(hours82);
        int int84 = hours79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours82);
        org.joda.time.Hours hours85 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours79);
        org.joda.time.DurationFieldType durationFieldType86 = null;
        int int87 = hours79.get(durationFieldType86);
        boolean boolean88 = hours78.equals((java.lang.Object) hours79);
        java.lang.String str89 = hours78.toString();
        org.joda.time.DurationFieldType durationFieldType91 = hours78.getFieldType(0);
        boolean boolean92 = hours64.isGreaterThan(hours78);
        boolean boolean93 = hours20.isGreaterThan(hours78);
        int int94 = hours20.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 8 + "'", int74 == 8);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT8H" + "'", str75, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT-2H" + "'", str89, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        java.lang.String str9 = hours8.toString();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        java.lang.String str32 = hours19.toString();
        org.joda.time.Hours hours34 = hours19.dividedBy((-8));
        boolean boolean35 = hours8.isLessThan(hours19);
        org.joda.time.Hours hours36 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Period period37 = hours8.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT8H" + "'", str32, "PT8H");
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        int int11 = hours0.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Hours hours58 = hours12.minus((-1));
        org.joda.time.Duration duration59 = hours12.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours11.getFieldType();
        boolean boolean14 = hours5.isSupported(durationFieldType13);
        int int15 = hours5.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = hours4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = hours4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = hours4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType9 = hours4.getFieldType();
        int int10 = hours0.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours0.multipliedBy((-8));
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours14.minus((int) 'a');
        org.joda.time.Hours hours22 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        boolean boolean24 = hours21.equals((java.lang.Object) hours22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        org.joda.time.Hours hours31 = hours25.minus(hours26);
        int int32 = hours25.size();
        org.joda.time.Duration duration33 = hours25.toStandardDuration();
        org.joda.time.Hours hours34 = hours21.minus(hours25);
        boolean boolean35 = hours12.isLessThan(hours25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType5 = hours0.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours12 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        org.joda.time.Hours hours14 = hours6.plus(0);
        boolean boolean15 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours16 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours18 = hours16.plus(0);
        int int20 = hours18.getValue(0);
        boolean boolean21 = hours0.isLessThan(hours18);
        int int22 = hours0.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2147483648) + "'", int20 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = hours0.toMutablePeriod();
        org.joda.time.Hours hours9 = hours0.negated();
        org.joda.time.Hours hours10 = hours9.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours16.isSupported(durationFieldType18);
        org.joda.time.Hours hours20 = hours13.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(hours20);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        boolean boolean26 = hours20.isGreaterThan(hours24);
        org.joda.time.DurationFieldType durationFieldType28 = hours20.getFieldType((int) (short) 0);
        int int29 = hours20.size();
        org.joda.time.Hours hours30 = hours0.plus(hours20);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = hours0.compareTo(baseSingleFieldPeriod31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(hours30);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.hours((-1));
        int int5 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.Hours hours7 = hours1.plus(7);
        org.joda.time.Hours hours9 = hours1.dividedBy(9);
        int int10 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours6 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        boolean boolean20 = hours17.isSupported(durationFieldType19);
        org.joda.time.Hours hours21 = hours14.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(hours21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        boolean boolean27 = hours21.isGreaterThan(hours25);
        org.joda.time.DurationFieldType durationFieldType29 = hours21.getFieldType((int) (short) 0);
        int int30 = hours4.get(durationFieldType29);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Period period9 = hours7.toPeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours10.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours10.multipliedBy(1);
        int int18 = hours17.getHours();
        org.joda.time.DurationFieldType durationFieldType19 = hours17.getFieldType();
        int int20 = hours7.get(durationFieldType19);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours3 = hours1.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours17 = hours15.minus((int) ' ');
        org.joda.time.Hours hours19 = hours17.dividedBy(14);
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Duration duration21 = hours20.toStandardDuration();
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = hours22.getFieldType();
        boolean boolean26 = hours20.isSupported(durationFieldType25);
        boolean boolean27 = hours17.isSupported(durationFieldType25);
        int int28 = hours13.get(durationFieldType25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.minus(8);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        org.joda.time.Hours hours8 = hours6.minus((int) (byte) 10);
        org.joda.time.Hours hours9 = hours6.negated();
        boolean boolean10 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        int int12 = hours11.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        org.joda.time.Hours hours22 = hours18.minus(hours19);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        int int27 = hours18.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours18.multipliedBy(7);
        org.joda.time.Hours hours31 = hours29.minus((-2));
        boolean boolean32 = hours9.equals((java.lang.Object) hours29);
        org.joda.time.Hours hours33 = hours9.negated();
        org.joda.time.DurationFieldType durationFieldType34 = hours33.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(durationFieldType34);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.PeriodType periodType13 = hours11.getPeriodType();
        org.joda.time.Hours hours14 = hours9.plus(hours11);
        java.lang.String str15 = hours11.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT52H" + "'", str15, "PT52H");
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-90H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours42 = hours17.multipliedBy(9);
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours18 = hours16.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours20 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours20.get(durationFieldType21);
        boolean boolean23 = hours19.equals((java.lang.Object) durationFieldType21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours31 = hours27.multipliedBy(0);
        org.joda.time.Hours hours32 = hours19.plus(hours31);
        org.joda.time.Hours hours34 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.minus((int) (short) 0);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        boolean boolean48 = hours45.isSupported(durationFieldType47);
        org.joda.time.Hours hours49 = hours42.minus(hours45);
        org.joda.time.Hours hours50 = hours34.plus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        boolean boolean55 = hours49.isGreaterThan(hours53);
        org.joda.time.Hours hours56 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours49);
        int int57 = hours31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours58.multipliedBy(1);
        int int66 = hours65.getHours();
        org.joda.time.DurationFieldType durationFieldType67 = hours65.getFieldType();
        org.joda.time.Hours hours68 = hours49.plus(hours65);
        org.joda.time.Hours hours70 = hours65.dividedBy((int) (short) -1);
        org.joda.time.Hours hours72 = hours65.plus(0);
        boolean boolean73 = hours16.isLessThan(hours65);
        org.joda.time.Hours hours74 = hours16.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 7 + "'", int66 == 7);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours74);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        org.joda.time.Period period26 = hours21.toPeriod();
        int int27 = hours21.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        org.joda.time.Hours hours22 = hours18.minus(hours19);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        int int27 = hours18.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours18.multipliedBy(7);
        org.joda.time.Hours hours31 = hours29.minus((-2));
        boolean boolean32 = hours9.equals((java.lang.Object) hours29);
        org.joda.time.Hours hours33 = hours9.negated();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod34 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = hours33.compareTo(baseSingleFieldPeriod34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours15.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(7);
        org.joda.time.Hours hours32 = hours14.minus(hours31);
        org.joda.time.Hours hours34 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Period period36 = hours34.toPeriod();
        org.joda.time.Period period37 = hours34.toPeriod();
        org.joda.time.Hours hours38 = hours32.plus(hours34);
        org.joda.time.PeriodType periodType39 = hours32.getPeriodType();
        int int40 = hours32.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        int int10 = hours1.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours32.minus(hours33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        boolean boolean48 = hours32.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period50 = hours49.toPeriod();
        org.joda.time.Hours hours52 = hours49.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.plus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        int int72 = hours54.get(durationFieldType70);
        boolean boolean73 = hours32.equals((java.lang.Object) hours54);
        boolean boolean74 = hours19.isLessThan(hours54);
        org.joda.time.Hours hours76 = hours19.plus(92);
        org.joda.time.Hours hours78 = hours76.minus((int) (byte) 10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.minus((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int12 = hours7.getValue(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        java.lang.String str5 = hours0.toString();
        org.joda.time.Hours hours7 = hours0.minus((-6));
        org.joda.time.PeriodType periodType8 = hours0.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT7H" + "'", str5, "PT7H");
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.getHours();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ONE;
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.plus(10);
        org.joda.time.Hours hours50 = hours40.minus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        boolean boolean52 = hours26.isLessThan(hours51);
        boolean boolean53 = hours13.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        org.joda.time.Hours hours59 = hours54.negated();
        boolean boolean60 = hours26.equals((java.lang.Object) hours59);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = hours61.getFieldType();
        boolean boolean66 = hours26.isSupported(durationFieldType65);
        org.joda.time.Period period67 = hours26.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = hours7.minus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.PeriodType periodType16 = hours12.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours14 = hours4.minus((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours16 = hours4.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration12 = hours11.toStandardDuration();
        boolean boolean13 = hours5.isLessThan(hours11);
        org.joda.time.Hours hours15 = hours11.minus((int) (byte) 100);
        org.joda.time.PeriodType periodType16 = hours11.getPeriodType();
        int int17 = hours11.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours42 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        boolean boolean46 = hours42.equals((java.lang.Object) durationFieldType44);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        int int52 = hours47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        org.joda.time.Hours hours54 = hours50.multipliedBy(0);
        org.joda.time.Hours hours55 = hours42.plus(hours54);
        org.joda.time.DurationFieldType durationFieldType56 = hours55.getFieldType();
        boolean boolean57 = hours32.equals((java.lang.Object) durationFieldType56);
        int int58 = hours18.get(durationFieldType56);
        org.joda.time.Hours hours60 = hours18.multipliedBy((int) (short) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 8 + "'", int58 == 8);
        org.junit.Assert.assertNotNull(hours60);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.PeriodType periodType34 = hours24.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(periodType34);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        int int5 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        boolean boolean24 = hours12.isGreaterThan(hours16);
        int int25 = hours12.size();
        org.joda.time.Hours hours27 = hours12.plus((int) (short) 0);
        org.joda.time.Hours hours28 = hours9.plus(hours27);
        int int30 = hours28.getValue(0);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = hours28.getValue(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 9 + "'", int30 == 9);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.MutablePeriod mutablePeriod15 = hours5.toMutablePeriod();
        org.joda.time.Hours hours17 = hours5.multipliedBy(10);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = hours17.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = hours16.getFieldType();
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = hours19.minus((int) (short) -1);
        org.joda.time.PeriodType periodType29 = hours19.getPeriodType();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours19.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(7);
        org.joda.time.Hours hours36 = hours19.negated();
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours37.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours37.minus((int) (short) 0);
        org.joda.time.Hours hours45 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = hours45.getFieldType();
        int int49 = hours44.get(durationFieldType48);
        int int50 = hours19.get(durationFieldType48);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        int int56 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours54);
        org.joda.time.Hours hours57 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours51);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = hours51.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours51.get(durationFieldType60);
        org.joda.time.Hours hours63 = hours51.minus(0);
        org.joda.time.DurationFieldType durationFieldType64 = hours63.getFieldType();
        boolean boolean65 = hours19.isSupported(durationFieldType64);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.Duration duration70 = hours66.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod71 = hours66.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        int int74 = hours72.getValue((int) (short) 0);
        java.lang.String str75 = hours72.toString();
        boolean boolean76 = hours66.isGreaterThan(hours72);
        org.joda.time.Hours hours78 = hours72.minus(10);
        org.joda.time.Hours hours79 = hours72.negated();
        org.joda.time.Duration duration80 = hours72.toStandardDuration();
        int int81 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours72);
        int int82 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours72);
        org.joda.time.Period period83 = hours72.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7 + "'", int49 == 7);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 8 + "'", int74 == 8);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT8H" + "'", str75, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 10);
        boolean boolean20 = hours0.isLessThan(hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.plus(10);
        org.joda.time.Hours hours25 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours26 = hours25.negated();
        org.joda.time.DurationFieldType durationFieldType27 = hours25.getFieldType();
        boolean boolean28 = hours21.equals((java.lang.Object) hours25);
        org.joda.time.Hours hours30 = hours21.minus((int) '4');
        org.joda.time.Hours hours31 = hours0.minus(hours30);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = hours0.getValue((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours33 = hours0.dividedBy(8);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.Hours hours42 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours34);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = hours43.isSupported(durationFieldType49);
        org.joda.time.Hours hours52 = hours43.minus((int) (short) -1);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        org.joda.time.Hours hours58 = hours55.plus(8);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours59.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = hours59.getFieldType();
        boolean boolean63 = hours58.isSupported(durationFieldType62);
        int int64 = hours52.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours34.plus(hours52);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod68 = hours67.toMutablePeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours70 = hours67.minus(hours69);
        int int71 = hours66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours69);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        boolean boolean73 = hours66.isSupported(durationFieldType72);
        org.joda.time.Hours hours75 = hours66.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours76 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours77 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = hours77.get(durationFieldType78);
        boolean boolean80 = hours76.equals((java.lang.Object) durationFieldType78);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod83 = hours82.toMutablePeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours85 = hours82.minus(hours84);
        int int86 = hours81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours84);
        org.joda.time.Hours hours88 = hours84.multipliedBy(0);
        org.joda.time.Hours hours89 = hours76.plus(hours88);
        org.joda.time.DurationFieldType durationFieldType90 = hours89.getFieldType();
        boolean boolean91 = hours66.equals((java.lang.Object) durationFieldType90);
        int int92 = hours52.get(durationFieldType90);
        int int93 = hours33.get(durationFieldType90);
        java.lang.Class<?> wildcardClass94 = hours33.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8 + "'", int64 == 8);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 8 + "'", int92 == 8);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        boolean boolean11 = hours2.isLessThan(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = hours12.getFieldType();
        boolean boolean16 = hours2.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period19 = hours18.toPeriod();
        org.joda.time.Hours hours21 = hours18.minus(8);
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours27 = hours25.minus((int) (byte) 100);
        boolean boolean28 = hours18.equals((java.lang.Object) hours27);
        boolean boolean29 = hours2.isGreaterThan(hours18);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours32 = hours30.plus(1);
        org.joda.time.Hours hours34 = hours30.dividedBy((int) (byte) -1);
        int int35 = hours30.size();
        org.joda.time.Hours hours36 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours38 = hours36.plus(0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.PeriodType periodType49 = hours39.getPeriodType();
        int int50 = hours39.getHours();
        org.joda.time.DurationFieldType durationFieldType52 = hours39.getFieldType((int) (short) 0);
        boolean boolean53 = hours38.isSupported(durationFieldType52);
        int int54 = hours30.get(durationFieldType52);
        boolean boolean55 = hours2.isSupported(durationFieldType52);
        java.lang.Class<?> wildcardClass56 = durationFieldType52.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.PeriodType periodType16 = hours15.getPeriodType();
        org.joda.time.Hours hours18 = hours15.minus(14);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.minus(8);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        org.joda.time.Hours hours8 = hours6.minus((int) (byte) 10);
        org.joda.time.Hours hours9 = hours6.negated();
        boolean boolean10 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours29);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = hours29.minus(hours41);
        org.joda.time.Hours hours43 = hours42.negated();
        boolean boolean44 = hours27.isLessThan(hours42);
        boolean boolean45 = hours1.isGreaterThan(hours27);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        boolean boolean17 = hours13.equals((java.lang.Object) durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours21.multipliedBy(0);
        org.joda.time.Hours hours26 = hours13.plus(hours25);
        org.joda.time.Hours hours28 = hours26.minus((int) (byte) 100);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        int int30 = hours11.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(1);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Minutes minutes3 = hours1.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = hours7.getFieldType();
        int int11 = hours2.get(durationFieldType10);
        boolean boolean12 = hours0.isSupported(durationFieldType10);
        int int13 = hours0.getHours();
        org.joda.time.Hours hours15 = hours0.dividedBy((int) ' ');
        org.joda.time.Duration duration16 = hours0.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        int int24 = hours23.size();
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = hours25.isSupported(durationFieldType31);
        org.joda.time.Hours hours34 = hours25.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod35 = hours25.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours38.get(durationFieldType42);
        org.joda.time.Hours hours45 = hours38.minus((int) (short) 0);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours48.isSupported(durationFieldType50);
        org.joda.time.Hours hours52 = hours45.minus(hours48);
        org.joda.time.Hours hours53 = hours37.plus(hours52);
        boolean boolean54 = hours25.isLessThan(hours52);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours57.isSupported(durationFieldType59);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        int int64 = hours62.getValue((int) (short) 0);
        org.joda.time.Hours hours65 = hours61.minus(hours62);
        boolean boolean66 = hours57.isLessThan(hours62);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        boolean boolean71 = hours57.isSupported(durationFieldType70);
        boolean boolean72 = hours52.isSupported(durationFieldType70);
        boolean boolean73 = hours23.isSupported(durationFieldType70);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8 + "'", int64 == 8);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = hours24.getValue(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours13 = hours11.minus((-2));
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.minus((int) (short) 0);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours24.isSupported(durationFieldType26);
        org.joda.time.Hours hours28 = hours21.minus(hours24);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours29.minus((int) (short) -1);
        org.joda.time.PeriodType periodType39 = hours29.getPeriodType();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        org.joda.time.Hours hours43 = hours29.minus(hours40);
        org.joda.time.Hours hours45 = hours29.plus(7);
        org.joda.time.Hours hours46 = hours28.minus(hours45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType49 = hours48.getFieldType();
        org.joda.time.Period period50 = hours48.toPeriod();
        org.joda.time.Period period51 = hours48.toPeriod();
        org.joda.time.Hours hours52 = hours46.plus(hours48);
        boolean boolean53 = hours13.isLessThan(hours46);
        org.joda.time.Duration duration54 = hours46.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration54);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        java.lang.Class<?> wildcardClass1 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours7.dividedBy((int) '4');
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.Hours hours47 = hours7.minus(hours41);
        org.joda.time.Hours hours48 = hours41.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        java.lang.String str9 = hours8.toString();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        java.lang.String str32 = hours19.toString();
        org.joda.time.Hours hours34 = hours19.dividedBy((-8));
        boolean boolean35 = hours8.isLessThan(hours19);
        java.lang.Class<?> wildcardClass36 = hours19.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT8H" + "'", str32, "PT8H");
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        int int6 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.MutablePeriod mutablePeriod7 = hours1.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(7);
        org.joda.time.Hours hours10 = hours0.minus(hours1);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours35 = hours12.plus(hours32);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours36.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn(readableInterval44);
        int int46 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        boolean boolean47 = hours32.isGreaterThan(hours43);
        org.joda.time.Hours hours49 = hours32.multipliedBy(16);
        org.joda.time.Hours hours51 = hours32.multipliedBy((int) (short) 0);
        org.joda.time.Period period52 = hours51.toPeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        int int56 = hours54.getValue((int) (short) 0);
        org.joda.time.Hours hours57 = hours53.minus(hours54);
        org.joda.time.Hours hours58 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours58.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = hours58.getFieldType();
        int int62 = hours53.get(durationFieldType61);
        boolean boolean63 = hours51.isSupported(durationFieldType61);
        org.joda.time.Hours hours64 = hours1.minus(hours51);
        org.joda.time.Period period65 = hours64.toPeriod();
        org.joda.time.DurationFieldType durationFieldType66 = hours64.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7 + "'", int62 == 7);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(durationFieldType66);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.PeriodType periodType20 = hours0.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod21 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = hours13.negated();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours15.get(durationFieldType19);
        org.joda.time.Hours hours22 = hours15.multipliedBy(1);
        int int23 = hours22.getHours();
        org.joda.time.Hours hours25 = hours22.minus((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        boolean boolean27 = hours13.equals((java.lang.Object) mutablePeriod26);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = hours13.compareTo(baseSingleFieldPeriod28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours7 = hours4.plus(5);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = hours23.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours28 = org.joda.time.Hours.hours((-1));
        int int29 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.Period period50 = hours10.toPeriod();
        java.lang.String str51 = hours10.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT-8H" + "'", str51, "PT-8H");
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        int int4 = hours2.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        int int6 = hours5.getHours();
        org.joda.time.Hours hours8 = hours5.plus(10);
        org.joda.time.Period period9 = hours8.toPeriod();
        boolean boolean10 = hours2.isLessThan(hours8);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = hours8.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours0.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT1H");
        java.lang.String str2 = hours1.toString();
        org.joda.time.Minutes minutes3 = hours1.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT1H" + "'", str2, "PT1H");
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Period period6 = hours0.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = hours0.getFieldType(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = hours4.negated();
        org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType();
        boolean boolean7 = hours0.equals((java.lang.Object) hours4);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours15 = hours9.negated();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Duration duration25 = hours24.toStandardDuration();
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean27 = hours9.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours9);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = hours9.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Period period22 = hours13.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = hours16.negated();
        org.joda.time.Hours hours25 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours36.isSupported(durationFieldType38);
        org.joda.time.Hours hours40 = hours33.minus(hours36);
        org.joda.time.Hours hours41 = hours25.plus(hours40);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        boolean boolean46 = hours40.isGreaterThan(hours44);
        java.lang.String str47 = hours40.toString();
        org.joda.time.Hours hours48 = hours16.plus(hours40);
        boolean boolean49 = hours9.equals((java.lang.Object) hours16);
        org.joda.time.PeriodType periodType50 = hours9.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT-1H" + "'", str47, "PT-1H");
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours36.isSupported(durationFieldType38);
        org.joda.time.Hours hours40 = hours33.minus(hours36);
        org.joda.time.Hours hours41 = hours25.plus(hours40);
        int int42 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.MutablePeriod mutablePeriod43 = hours40.toMutablePeriod();
        boolean boolean44 = hours16.isLessThan(hours40);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType46 = hours40.getFieldType(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.getHours();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ONE;
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.plus(10);
        org.joda.time.Hours hours50 = hours40.minus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        boolean boolean52 = hours26.isLessThan(hours51);
        boolean boolean53 = hours13.equals((java.lang.Object) hours26);
        java.lang.Class<?> wildcardClass54 = hours26.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = hours13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = hours13.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.Period period4 = hours0.toPeriod();
        org.joda.time.Hours hours5 = hours0.negated();
        java.lang.String str6 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2H" + "'", str6, "PT2H");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        int int15 = hours10.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        int int4 = hours2.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        org.joda.time.Hours hours13 = hours9.minus(hours10);
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = hours14.getFieldType();
        int int18 = hours9.get(durationFieldType17);
        boolean boolean19 = hours8.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours8.negated();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        int int23 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours2.plus(hours8);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours40 = hours36.plus(6);
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours40);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType43 = hours40.getFieldType(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours29 = hours27.minus(8);
        org.joda.time.Hours hours30 = hours24.minus(hours27);
        boolean boolean31 = hours15.isLessThan(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.Duration duration36 = hours32.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod37 = hours32.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        java.lang.String str41 = hours38.toString();
        boolean boolean42 = hours32.isGreaterThan(hours38);
        boolean boolean43 = hours30.isLessThan(hours32);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT8H" + "'", str41, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = hours0.toStandardMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.PeriodType periodType25 = hours24.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours33 = hours26.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod34 = hours26.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.Hours hours45 = hours44.negated();
        org.joda.time.Period period46 = hours44.toPeriod();
        boolean boolean47 = hours26.equals((java.lang.Object) hours44);
        org.joda.time.Hours hours48 = hours24.plus(hours44);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = hours48.getValue((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours16 = org.joda.time.Hours.MAX_VALUE;
        int int17 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.Hours hours19 = hours18.negated();
        boolean boolean20 = hours5.isLessThan(hours18);
        java.lang.Class<?> wildcardClass21 = hours18.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.minus((int) ' ');
        int int11 = hours10.getHours();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        org.joda.time.Hours hours16 = hours12.minus(hours13);
        boolean boolean18 = hours13.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours19 = null;
        org.joda.time.Hours hours20 = hours13.minus(hours19);
        org.joda.time.Hours hours21 = hours20.negated();
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.Duration duration26 = hours22.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod27 = hours22.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        java.lang.String str31 = hours28.toString();
        boolean boolean32 = hours22.isGreaterThan(hours28);
        org.joda.time.Hours hours34 = hours28.minus(10);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours35.get(durationFieldType42);
        boolean boolean44 = hours34.equals((java.lang.Object) hours35);
        java.lang.String str45 = hours34.toString();
        org.joda.time.DurationFieldType durationFieldType47 = hours34.getFieldType(0);
        boolean boolean48 = hours20.isGreaterThan(hours34);
        boolean boolean49 = hours10.isLessThan(hours34);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-25) + "'", int11 == (-25));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT8H" + "'", str31, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT-2H" + "'", str45, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours3 = hours1.dividedBy(16);
        org.joda.time.Hours hours5 = org.joda.time.Hours.parseHours("PT0H");
        boolean boolean6 = hours3.equals((java.lang.Object) "PT0H");
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours40.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        boolean boolean49 = hours40.isLessThan(hours45);
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = hours50.getFieldType();
        boolean boolean54 = hours40.isSupported(durationFieldType53);
        int int55 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.Hours hours57 = hours22.plus(700);
        org.joda.time.Period period58 = hours57.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        int int5 = hours4.getHours();
        org.joda.time.Hours hours6 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours7.get(durationFieldType8);
        boolean boolean10 = hours6.equals((java.lang.Object) durationFieldType8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours18 = hours14.multipliedBy(0);
        org.joda.time.Hours hours19 = hours6.plus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = hours19.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours21);
        org.joda.time.DurationFieldType durationFieldType28 = hours21.getFieldType();
        int int29 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours30 = hours4.minus(hours19);
        org.joda.time.Duration duration31 = hours4.toStandardDuration();
        org.joda.time.PeriodType periodType32 = hours4.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours3.minus((int) (short) -1);
        org.joda.time.Hours hours13 = hours12.negated();
        org.joda.time.Hours hours15 = hours13.plus(16);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        int int17 = hours1.get(durationFieldType16);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 16 + "'", int17 == 16);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours57 = hours55.dividedBy(100);
        int int58 = hours55.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours7 = hours4.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = hours17.getFieldType();
        org.joda.time.DurationFieldType durationFieldType21 = hours17.getFieldType();
        boolean boolean22 = hours0.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(6);
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = hours7.getFieldType();
        int int11 = hours2.get(durationFieldType10);
        boolean boolean12 = hours0.isSupported(durationFieldType10);
        int int13 = hours0.getHours();
        org.joda.time.Hours hours15 = hours0.dividedBy((int) ' ');
        org.joda.time.Hours hours17 = hours15.plus(0);
        org.joda.time.Hours hours19 = hours15.plus(7);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        org.joda.time.Hours hours17 = hours7.dividedBy((-25));
        org.joda.time.Hours hours18 = null;
        org.joda.time.Hours hours19 = hours7.minus(hours18);
        org.joda.time.PeriodType periodType20 = hours19.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours18 = hours5.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours4 = hours1.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType5 = hours4.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Duration duration8 = hours0.toStandardDuration();
        org.joda.time.Hours hours10 = hours0.plus(92);
        org.joda.time.DurationFieldType durationFieldType11 = hours0.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours29 = hours27.minus(8);
        org.joda.time.Hours hours30 = hours24.minus(hours27);
        boolean boolean31 = hours15.isLessThan(hours30);
        java.lang.Class<?> wildcardClass32 = hours30.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours40.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        boolean boolean49 = hours40.isLessThan(hours45);
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = hours50.getFieldType();
        boolean boolean54 = hours40.isSupported(durationFieldType53);
        int int55 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.Duration duration56 = hours40.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(duration56);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours21.minus(hours22);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours27.minus(hours28);
        org.joda.time.Hours hours32 = hours26.minus(hours27);
        int int33 = hours26.size();
        org.joda.time.Duration duration34 = hours26.toStandardDuration();
        boolean boolean35 = hours22.isGreaterThan(hours26);
        org.joda.time.MutablePeriod mutablePeriod36 = hours26.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType37 = hours26.getFieldType();
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period39 = hours38.toPeriod();
        org.joda.time.Hours hours41 = hours38.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Period period44 = hours43.toPeriod();
        org.joda.time.Hours hours46 = hours43.plus((int) (byte) -1);
        org.joda.time.Hours hours47 = hours41.minus(hours43);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.minus((int) (short) 0);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        int int60 = hours55.get(durationFieldType59);
        int int61 = hours43.get(durationFieldType59);
        int int62 = hours26.get(durationFieldType59);
        boolean boolean63 = hours17.isGreaterThan(hours26);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        int int69 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.Hours hours71 = hours64.minus((int) 'a');
        org.joda.time.Hours hours73 = hours71.minus((int) (short) 1);
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = hours74.get(durationFieldType78);
        org.joda.time.Hours hours81 = hours74.minus((int) (short) 0);
        org.joda.time.Hours hours82 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType83 = null;
        int int84 = hours82.get(durationFieldType83);
        org.joda.time.DurationFieldType durationFieldType85 = hours82.getFieldType();
        int int86 = hours81.get(durationFieldType85);
        org.joda.time.PeriodType periodType87 = hours81.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType88 = hours81.getFieldType();
        int int89 = hours73.get(durationFieldType88);
        boolean boolean90 = hours26.isSupported(durationFieldType88);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 6 + "'", int62 == 6);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 7 + "'", int86 == 7);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-91) + "'", int89 == (-91));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        int int59 = hours57.getValue((int) (short) 0);
        org.joda.time.Hours hours60 = hours56.minus(hours57);
        boolean boolean62 = hours57.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours63 = null;
        org.joda.time.Hours hours64 = hours57.minus(hours63);
        org.joda.time.Hours hours65 = hours64.negated();
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.Duration duration70 = hours66.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod71 = hours66.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        int int74 = hours72.getValue((int) (short) 0);
        java.lang.String str75 = hours72.toString();
        boolean boolean76 = hours66.isGreaterThan(hours72);
        org.joda.time.Hours hours78 = hours72.minus(10);
        org.joda.time.Hours hours79 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours80 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod81 = hours80.toMutablePeriod();
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours83 = hours80.minus(hours82);
        int int84 = hours79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours82);
        org.joda.time.Hours hours85 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours79);
        org.joda.time.DurationFieldType durationFieldType86 = null;
        int int87 = hours79.get(durationFieldType86);
        boolean boolean88 = hours78.equals((java.lang.Object) hours79);
        java.lang.String str89 = hours78.toString();
        org.joda.time.DurationFieldType durationFieldType91 = hours78.getFieldType(0);
        boolean boolean92 = hours64.isGreaterThan(hours78);
        boolean boolean93 = hours20.isGreaterThan(hours78);
        int int94 = hours20.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 8 + "'", int74 == 8);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT8H" + "'", str75, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT-2H" + "'", str89, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 8 + "'", int94 == 8);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) -1);
        org.joda.time.Minutes minutes2 = hours1.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Duration duration9 = hours8.toStandardDuration();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours12 = hours10.minus((int) (byte) 100);
        int int13 = hours10.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(3);
        org.joda.time.Hours hours6 = hours0.plus((int) (byte) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Period period15 = hours7.toPeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours17 = org.joda.time.Hours.MAX_VALUE;
        int int18 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours17.negated();
        org.joda.time.Hours hours20 = hours19.negated();
        boolean boolean21 = hours7.isLessThan(hours20);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.Hours hours48 = hours9.dividedBy((int) (short) 1);
        java.lang.Class<?> wildcardClass49 = hours48.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        org.joda.time.Hours hours22 = hours18.minus(hours19);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        int int27 = hours18.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours18.multipliedBy(7);
        org.joda.time.Hours hours31 = hours29.minus((-2));
        boolean boolean32 = hours9.equals((java.lang.Object) hours29);
        org.joda.time.Hours hours33 = hours9.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.MutablePeriod mutablePeriod42 = hours36.toMutablePeriod();
        org.joda.time.Hours hours43 = hours35.minus(hours36);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.Hours hours50 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours44);
        org.joda.time.Hours hours51 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = hours52.get(durationFieldType53);
        boolean boolean55 = hours51.equals((java.lang.Object) durationFieldType53);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        int int61 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.Hours hours63 = hours59.multipliedBy(0);
        org.joda.time.Hours hours64 = hours51.plus(hours63);
        boolean boolean65 = hours50.isGreaterThan(hours63);
        boolean boolean66 = hours43.isLessThan(hours63);
        org.joda.time.Hours hours67 = hours33.plus(hours43);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType69 = hours33.getFieldType(17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 17");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        int int24 = hours12.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.PeriodType periodType8 = hours0.getPeriodType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        org.joda.time.Hours hours21 = hours17.minus(hours18);
        boolean boolean23 = hours18.equals((java.lang.Object) (short) 10);
        int int24 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours25 = hours0.plus(hours9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = hours0.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours32.minus(hours33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        boolean boolean48 = hours32.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period50 = hours49.toPeriod();
        org.joda.time.Hours hours52 = hours49.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.plus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        int int72 = hours54.get(durationFieldType70);
        boolean boolean73 = hours32.equals((java.lang.Object) hours54);
        boolean boolean74 = hours19.isLessThan(hours54);
        org.joda.time.Hours hours76 = hours19.plus(92);
        org.joda.time.Hours hours77 = null;
        org.joda.time.Hours hours78 = hours19.minus(hours77);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours14 = hours4.minus((int) (short) -1);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.minus((int) (short) 0);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = hours27.isSupported(durationFieldType29);
        org.joda.time.Hours hours31 = hours24.minus(hours27);
        org.joda.time.Hours hours32 = hours16.plus(hours31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        boolean boolean37 = hours31.isGreaterThan(hours35);
        org.joda.time.Hours hours39 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours47 = hours40.minus((int) (short) 0);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        boolean boolean53 = hours50.isSupported(durationFieldType52);
        org.joda.time.Hours hours54 = hours47.minus(hours50);
        org.joda.time.Hours hours55 = hours39.plus(hours54);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod57 = hours56.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours59 = hours56.minus(hours58);
        boolean boolean60 = hours54.isGreaterThan(hours58);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = hours61.get(durationFieldType65);
        org.joda.time.Hours hours68 = hours61.minus((int) (short) 0);
        org.joda.time.Hours hours69 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours61);
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        int int75 = hours70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours73);
        org.joda.time.DurationFieldType durationFieldType76 = null;
        boolean boolean77 = hours70.isSupported(durationFieldType76);
        org.joda.time.Hours hours79 = hours70.minus((int) (short) -1);
        org.joda.time.Hours hours80 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod81 = hours80.toMutablePeriod();
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours83 = hours80.minus(hours82);
        org.joda.time.Hours hours85 = hours82.plus(8);
        org.joda.time.Hours hours86 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType87 = null;
        int int88 = hours86.get(durationFieldType87);
        org.joda.time.DurationFieldType durationFieldType89 = hours86.getFieldType();
        boolean boolean90 = hours85.isSupported(durationFieldType89);
        int int91 = hours79.get(durationFieldType89);
        org.joda.time.Hours hours92 = hours61.plus(hours79);
        org.joda.time.Hours hours93 = hours58.plus(hours61);
        int int94 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours58);
        boolean boolean95 = hours4.isGreaterThan(hours35);
        org.joda.time.Hours hours97 = hours35.dividedBy(700);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 8 + "'", int91 == 8);
        org.junit.Assert.assertNotNull(hours92);
        org.junit.Assert.assertNotNull(hours93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(hours97);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.dividedBy((int) (byte) -1);
        int int3 = hours0.getHours();
        org.joda.time.Hours hours5 = hours0.minus(6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period7 = hours6.toPeriod();
        org.joda.time.Hours hours8 = hours3.plus(hours6);
        org.joda.time.Hours hours9 = hours8.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours40 = hours36.plus(6);
        org.joda.time.Hours hours42 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = hours53.isSupported(durationFieldType55);
        org.joda.time.Hours hours57 = hours50.minus(hours53);
        org.joda.time.Hours hours58 = hours42.plus(hours57);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        boolean boolean63 = hours57.isGreaterThan(hours61);
        java.lang.String str64 = hours57.toString();
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Hours hours66 = org.joda.time.Hours.hoursIn(readableInterval65);
        org.joda.time.DurationFieldType durationFieldType67 = hours66.getFieldType();
        org.joda.time.Hours hours69 = hours66.dividedBy((int) (byte) 10);
        boolean boolean70 = hours57.equals((java.lang.Object) (byte) 10);
        org.joda.time.Hours hours71 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Period period73 = hours71.toPeriod();
        org.joda.time.Hours hours74 = hours57.plus(hours71);
        org.joda.time.Hours hours75 = hours40.minus(hours71);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT-1H" + "'", str64, "PT-1H");
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Period period7 = hours6.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        int int55 = hours54.getHours();
        org.joda.time.Hours hours57 = hours54.plus(10);
        org.joda.time.Hours hours58 = hours48.minus(hours57);
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours60 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = hours17.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.Days days4 = hours0.toStandardDays();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType5 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType6 = hours0.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Period period22 = hours21.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours8.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours12.dividedBy(100);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours17.isSupported(durationFieldType23);
        org.joda.time.Hours hours26 = hours17.minus((int) (short) -1);
        org.joda.time.PeriodType periodType27 = hours17.getPeriodType();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours17.minus(hours28);
        org.joda.time.Hours hours33 = hours17.plus(7);
        org.joda.time.Hours hours34 = hours17.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = hours17.toMutablePeriod();
        org.joda.time.Hours hours36 = hours16.plus(hours17);
        org.joda.time.Hours hours37 = hours8.plus(hours36);
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.Hours hours15 = hours13.negated();
        org.joda.time.DurationFieldType durationFieldType16 = hours15.getFieldType();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours21 = hours19.negated();
        int int22 = hours21.getHours();
        int int23 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours32.getFieldType();
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.PeriodType periodType37 = hours31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType38 = hours31.getFieldType();
        boolean boolean39 = hours15.isSupported(durationFieldType38);
        boolean boolean40 = hours0.equals((java.lang.Object) durationFieldType38);
        int int41 = hours0.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-8) + "'", int22 == (-8));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        int int9 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = hours4.isSupported(durationFieldType10);
        org.joda.time.Hours hours13 = hours4.minus((int) (short) -1);
        org.joda.time.PeriodType periodType14 = hours4.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours4.minus(hours15);
        org.joda.time.Hours hours19 = hours1.plus(hours18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = hours18.getFieldType(15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 15");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        java.lang.String str2 = hours1.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0H" + "'", str2, "PT0H");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        int int30 = hours25.get(durationFieldType29);
        int int31 = hours0.get(durationFieldType29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours32.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours32.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours32.minus(0);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        boolean boolean46 = hours0.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours0.minus(10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hours48);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours13 = org.joda.time.Hours.MAX_VALUE;
        int int14 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.Hours hours15 = hours13.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours16 = hours1.plus(hours13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 8 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours6 = hours1.plus((int) (byte) 1);
        org.joda.time.Hours hours8 = hours1.dividedBy(100);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours11 = hours8.minus((-2));
        org.joda.time.Hours hours12 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours14 = hours12.plus(0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours15.get(durationFieldType19);
        org.joda.time.Hours hours22 = hours15.multipliedBy(1);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        int int24 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours25.dividedBy(100);
        org.joda.time.Hours hours31 = hours29.plus((int) (byte) 10);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        boolean boolean54 = hours31.isSupported(durationFieldType51);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours55.get(durationFieldType59);
        org.joda.time.Hours hours62 = hours55.minus((int) (short) 0);
        org.joda.time.Hours hours63 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours55);
        boolean boolean64 = hours31.equals((java.lang.Object) hours63);
        org.joda.time.Hours hours66 = hours31.plus((-1));
        org.joda.time.Hours hours67 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = hours68.get(durationFieldType69);
        boolean boolean71 = hours67.equals((java.lang.Object) durationFieldType69);
        org.joda.time.Hours hours72 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod74 = hours73.toMutablePeriod();
        org.joda.time.Hours hours75 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours76 = hours73.minus(hours75);
        int int77 = hours72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours75);
        org.joda.time.Hours hours79 = hours75.multipliedBy(0);
        org.joda.time.Hours hours80 = hours67.plus(hours79);
        org.joda.time.DurationFieldType durationFieldType81 = hours80.getFieldType();
        boolean boolean82 = hours31.equals((java.lang.Object) durationFieldType81);
        int int83 = hours23.get(durationFieldType81);
        boolean boolean84 = hours14.isSupported(durationFieldType81);
        org.joda.time.Hours hours85 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours14);
        org.joda.time.Hours hours86 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours85);
        org.joda.time.Hours hours87 = hours8.plus(hours86);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours87);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        int int17 = hours0.size();
        org.joda.time.MutablePeriod mutablePeriod18 = hours0.toMutablePeriod();
        int int19 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        java.lang.Class<?> wildcardClass7 = durationFieldType6.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours0.dividedBy((-2));
        org.joda.time.Hours hours6 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        boolean boolean20 = hours17.isSupported(durationFieldType19);
        org.joda.time.Hours hours21 = hours14.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(hours21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        boolean boolean27 = hours21.isGreaterThan(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours29.minus(hours30);
        org.joda.time.Hours hours34 = hours28.minus(hours29);
        org.joda.time.Hours hours36 = hours29.dividedBy(1);
        org.joda.time.Duration duration37 = hours29.toStandardDuration();
        boolean boolean38 = hours25.isGreaterThan(hours29);
        org.joda.time.Hours hours39 = hours25.negated();
        org.joda.time.Hours hours40 = hours39.negated();
        boolean boolean41 = hours0.isLessThan(hours39);
        org.joda.time.Hours hours43 = hours0.dividedBy(3);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        int int53 = hours51.getValue((int) (short) 0);
        org.joda.time.Hours hours54 = hours50.minus(hours51);
        org.joda.time.Hours hours55 = hours49.minus(hours50);
        int int56 = hours49.size();
        org.joda.time.Duration duration57 = hours49.toStandardDuration();
        boolean boolean58 = hours45.isGreaterThan(hours49);
        org.joda.time.Hours hours60 = hours49.plus((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType61 = hours60.getFieldType();
        int int62 = hours0.get(durationFieldType61);
        java.lang.Class<?> wildcardClass63 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        boolean boolean28 = hours23.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours29 = null;
        org.joda.time.Hours hours30 = hours23.minus(hours29);
        java.lang.String str31 = hours30.toString();
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        int int41 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        int int42 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = hours43.isSupported(durationFieldType49);
        org.joda.time.Hours hours52 = hours43.minus((int) (short) -1);
        org.joda.time.Hours hours53 = hours52.negated();
        org.joda.time.DurationFieldType durationFieldType54 = hours52.getFieldType();
        boolean boolean55 = hours33.equals((java.lang.Object) hours52);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT8H" + "'", str31, "PT8H");
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours9 = hours7.minus((int) (short) 1);
        org.joda.time.Hours hours11 = hours7.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours6 = hours1.plus((int) (byte) 1);
        org.joda.time.Hours hours8 = hours1.dividedBy(100);
        org.joda.time.Hours hours9 = hours8.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = hours9.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours5 = hours1.plus((int) (short) 0);
        org.joda.time.PeriodType periodType6 = hours5.getPeriodType();
        org.joda.time.Hours hours8 = hours5.dividedBy((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes9 = hours5.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.PeriodType periodType22 = hours17.getPeriodType();
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours((int) ' ');
        int int25 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period28 = hours27.toPeriod();
        org.joda.time.Hours hours30 = hours27.minus(8);
        org.joda.time.Hours hours32 = hours30.minus((-1));
        org.joda.time.DurationFieldType durationFieldType33 = hours30.getFieldType();
        int int34 = hours24.get(durationFieldType33);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType11 = hours10.getFieldType();
        org.joda.time.Period period12 = hours10.toPeriod();
        org.joda.time.Period period13 = hours10.toPeriod();
        org.joda.time.Hours hours15 = hours10.plus(0);
        org.joda.time.Hours hours17 = hours10.minus((int) (short) 0);
        org.joda.time.Hours hours18 = hours1.plus(hours17);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours16.isSupported(durationFieldType18);
        org.joda.time.Hours hours20 = hours13.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(hours20);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        boolean boolean26 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.Hours hours51 = hours48.plus(8);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = hours52.get(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType55 = hours52.getFieldType();
        boolean boolean56 = hours51.isSupported(durationFieldType55);
        int int57 = hours45.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours27.plus(hours45);
        org.joda.time.Hours hours59 = hours24.plus(hours27);
        org.joda.time.Hours hours61 = hours59.dividedBy(100);
        int int62 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours61);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        int int17 = hours9.getHours();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = hours9.getValue((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours6 = hours4.multipliedBy(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -44 * 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.minus((int) (short) -1);
        org.joda.time.PeriodType periodType15 = hours5.getPeriodType();
        int int16 = hours5.getHours();
        org.joda.time.DurationFieldType durationFieldType18 = hours5.getFieldType((int) (short) 0);
        int int19 = hours5.size();
        int int20 = hours5.size();
        org.joda.time.DurationFieldType durationFieldType21 = hours5.getFieldType();
        org.joda.time.Hours hours23 = hours5.multipliedBy(100);
        org.joda.time.Hours hours24 = hours2.minus(hours23);
        org.joda.time.PeriodType periodType25 = hours23.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Period period9 = hours1.toPeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Hours hours11 = null;
        boolean boolean12 = hours10.isGreaterThan(hours11);
        java.lang.String str13 = hours10.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647H" + "'", str13, "PT2147483647H");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = hours14.minus(hours15);
        org.joda.time.Hours hours21 = hours13.plus(hours15);
        org.joda.time.DurationFieldType durationFieldType22 = hours13.getFieldType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours18 = hours16.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = hours19.minus((int) (short) -1);
        org.joda.time.PeriodType periodType29 = hours19.getPeriodType();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours19.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(7);
        int int36 = hours19.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours39 = hours37.plus(0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        int int45 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours40.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = hours40.minus((int) (short) -1);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.Hours hours55 = hours52.plus(8);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        boolean boolean60 = hours55.isSupported(durationFieldType59);
        int int61 = hours49.get(durationFieldType59);
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        int int67 = hours62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = hours62.isSupported(durationFieldType68);
        org.joda.time.Hours hours71 = hours62.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours72 = hours49.plus(hours62);
        org.joda.time.DurationFieldType durationFieldType73 = hours72.getFieldType();
        boolean boolean74 = hours39.isSupported(durationFieldType73);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod78 = hours77.toMutablePeriod();
        org.joda.time.Hours hours79 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours80 = hours77.minus(hours79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        boolean boolean82 = hours79.isSupported(durationFieldType81);
        org.joda.time.Hours hours83 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        int int86 = hours84.getValue((int) (short) 0);
        org.joda.time.Hours hours87 = hours83.minus(hours84);
        boolean boolean88 = hours79.isLessThan(hours84);
        org.joda.time.Hours hours89 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = hours89.get(durationFieldType90);
        org.joda.time.DurationFieldType durationFieldType92 = hours89.getFieldType();
        boolean boolean93 = hours79.isSupported(durationFieldType92);
        int int94 = hours76.get(durationFieldType92);
        boolean boolean95 = hours39.isSupported(durationFieldType92);
        boolean boolean96 = hours19.isSupported(durationFieldType92);
        boolean boolean97 = hours16.isGreaterThan(hours19);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = hours19.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8 + "'", int86 == 8);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = hours1.getFieldType((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours0.dividedBy((int) (byte) -1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        int int6 = hours5.getHours();
        org.joda.time.Hours hours8 = hours5.plus(10);
        org.joda.time.Period period9 = hours8.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period12 = hours11.toPeriod();
        org.joda.time.Hours hours13 = hours8.plus(hours11);
        int int14 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        org.joda.time.Hours hours10 = hours3.plus((-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours10.getFieldType((-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        int int13 = hours0.size();
        org.joda.time.Hours hours15 = hours0.plus((int) (short) 0);
        org.joda.time.PeriodType periodType16 = hours0.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Days days2 = hours1.toStandardDays();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Hours hours3 = hours0.dividedBy(7);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = hours3.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Duration duration13 = hours12.toStandardDuration();
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours38 = hours15.plus(hours35);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Hours hours48 = org.joda.time.Hours.hoursIn(readableInterval47);
        int int49 = hours46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        boolean boolean50 = hours35.isGreaterThan(hours46);
        boolean boolean51 = hours12.equals((java.lang.Object) hours46);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Period period6 = hours0.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours0.getValue(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        boolean boolean11 = hours2.isLessThan(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = hours12.getFieldType();
        boolean boolean16 = hours2.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period19 = hours18.toPeriod();
        org.joda.time.Hours hours21 = hours18.minus(8);
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours27 = hours25.minus((int) (byte) 100);
        boolean boolean28 = hours18.equals((java.lang.Object) hours27);
        boolean boolean29 = hours2.isGreaterThan(hours18);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours32 = hours30.plus(1);
        org.joda.time.Hours hours34 = hours30.dividedBy((int) (byte) -1);
        int int35 = hours30.size();
        org.joda.time.Hours hours36 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours38 = hours36.plus(0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.PeriodType periodType49 = hours39.getPeriodType();
        int int50 = hours39.getHours();
        org.joda.time.DurationFieldType durationFieldType52 = hours39.getFieldType((int) (short) 0);
        boolean boolean53 = hours38.isSupported(durationFieldType52);
        int int54 = hours30.get(durationFieldType52);
        boolean boolean55 = hours2.isSupported(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType56 = hours2.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(durationFieldType56);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours3 = hours1.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = hours4.getFieldType(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        int int2 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = hours14.minus(hours15);
        org.joda.time.Hours hours21 = hours13.plus(hours15);
        org.joda.time.DurationFieldType durationFieldType22 = hours13.getFieldType();
        java.lang.Class<?> wildcardClass23 = durationFieldType22.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = hours7.getFieldType();
        int int11 = hours2.get(durationFieldType10);
        boolean boolean12 = hours0.isSupported(durationFieldType10);
        int int13 = hours0.getHours();
        org.joda.time.Hours hours15 = hours0.dividedBy((int) ' ');
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        boolean boolean22 = hours17.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours23 = null;
        org.joda.time.Hours hours24 = hours17.minus(hours23);
        org.joda.time.Hours hours25 = hours24.negated();
        java.lang.String str26 = hours25.toString();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours27.minus(hours28);
        boolean boolean33 = hours28.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours34 = null;
        org.joda.time.Hours hours35 = hours28.minus(hours34);
        org.joda.time.Hours hours36 = hours35.negated();
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.Hours hours38 = hours25.minus(hours37);
        boolean boolean39 = hours15.isGreaterThan(hours38);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT-8H" + "'", str26, "PT-8H");
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Duration duration14 = hours6.toStandardDuration();
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        int int16 = hours15.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        int int55 = hours54.getHours();
        org.joda.time.Hours hours57 = hours54.plus(10);
        org.joda.time.Hours hours58 = hours48.minus(hours57);
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours60 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        int int65 = hours63.getValue((int) (short) 0);
        org.joda.time.Hours hours66 = hours62.minus(hours63);
        org.joda.time.Hours hours67 = hours61.minus(hours62);
        int int68 = hours61.size();
        org.joda.time.PeriodType periodType69 = hours61.getPeriodType();
        org.joda.time.Hours hours70 = hours60.minus(hours61);
        java.lang.String str71 = hours70.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT-7H" + "'", str71, "PT-7H");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 10);
        boolean boolean20 = hours0.isLessThan(hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.plus(10);
        org.joda.time.Hours hours25 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours26 = hours25.negated();
        org.joda.time.DurationFieldType durationFieldType27 = hours25.getFieldType();
        boolean boolean28 = hours21.equals((java.lang.Object) hours25);
        org.joda.time.Hours hours30 = hours21.minus((int) '4');
        org.joda.time.Hours hours31 = hours0.minus(hours30);
        org.joda.time.Hours hours33 = hours0.plus(5);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.Duration duration38 = hours34.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod39 = hours34.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        java.lang.String str43 = hours40.toString();
        boolean boolean44 = hours34.isGreaterThan(hours40);
        org.joda.time.Hours hours46 = hours40.minus(10);
        org.joda.time.Hours hours47 = hours40.negated();
        org.joda.time.Hours hours49 = hours47.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType51 = hours47.getFieldType(0);
        boolean boolean52 = hours33.isSupported(durationFieldType51);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT8H" + "'", str43, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        org.joda.time.Period period8 = hours6.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours6 = hours5.negated();
        org.joda.time.DurationFieldType durationFieldType7 = hours5.getFieldType();
        boolean boolean8 = hours0.isLessThan(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.PeriodType periodType17 = hours9.getPeriodType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = hours18.minus(hours19);
        int int25 = hours18.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        int int33 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours34 = hours9.plus(hours18);
        org.joda.time.Hours hours35 = hours0.minus(hours9);
        java.lang.Class<?> wildcardClass36 = hours9.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        org.joda.time.Hours hours3 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        java.lang.String str4 = hours1.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT7H" + "'", str4, "PT7H");
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        java.lang.Class<?> wildcardClass5 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.PeriodType periodType15 = hours14.getPeriodType();
        org.joda.time.Hours hours17 = hours14.multipliedBy(16);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours15 = hours12.plus(700);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours15.plus(hours16);
        boolean boolean18 = hours7.isGreaterThan(hours17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours19.get(durationFieldType23);
        org.joda.time.Hours hours26 = hours19.minus((int) (short) 0);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = hours27.getFieldType();
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.PeriodType periodType32 = hours26.getPeriodType();
        org.joda.time.Hours hours34 = hours26.multipliedBy(8);
        int int35 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.Hours hours46 = hours45.negated();
        org.joda.time.Hours hours47 = hours45.negated();
        int int48 = hours47.getHours();
        org.joda.time.DurationFieldType durationFieldType50 = hours47.getFieldType(0);
        int int51 = hours34.get(durationFieldType50);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-8) + "'", int48 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 56 + "'", int51 == 56);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours34 = hours20.negated();
        org.joda.time.Hours hours35 = hours34.negated();
        org.joda.time.Hours hours37 = hours35.multipliedBy((int) 'a');
        org.joda.time.Hours hours38 = hours37.negated();
        java.lang.Class<?> wildcardClass39 = hours37.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        int int5 = hours4.size();
        org.joda.time.Period period6 = hours4.toPeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Hours hours24 = hours8.plus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours31 = hours8.plus(hours28);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours32.get(durationFieldType36);
        org.joda.time.Hours hours39 = hours32.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Hours hours41 = org.joda.time.Hours.hoursIn(readableInterval40);
        int int42 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours41);
        boolean boolean43 = hours28.isGreaterThan(hours39);
        org.joda.time.Hours hours44 = hours4.minus(hours28);
        org.joda.time.PeriodType periodType45 = hours44.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = hours13.getFieldType(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Days days1 = hours0.toStandardDays();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours10.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours10.minus((int) (short) 0);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = hours20.isSupported(durationFieldType22);
        org.joda.time.Hours hours24 = hours17.minus(hours20);
        org.joda.time.Hours hours25 = hours9.plus(hours24);
        int int26 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours28 = hours24.plus((int) ' ');
        org.joda.time.PeriodType periodType29 = hours24.getPeriodType();
        org.joda.time.Hours hours31 = org.joda.time.Hours.hours((int) ' ');
        int int32 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.MutablePeriod mutablePeriod39 = hours33.toMutablePeriod();
        org.joda.time.Hours hours41 = hours33.minus(7);
        org.joda.time.Hours hours42 = hours31.plus(hours41);
        boolean boolean43 = hours6.isGreaterThan(hours41);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours44.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours44.multipliedBy(7);
        org.joda.time.Hours hours57 = hours55.minus((-2));
        boolean boolean58 = hours41.isLessThan(hours55);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        java.lang.Class<?> wildcardClass16 = hours13.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        int int28 = hours8.getHours();
        org.joda.time.PeriodType periodType29 = hours8.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.PeriodType periodType1 = hours0.getPeriodType();
        org.joda.time.Hours hours2 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = hours2.getValue(14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 14");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.minus((int) (short) 0);
        org.joda.time.Hours hours47 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = hours47.getFieldType();
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours52.getHours();
        org.joda.time.Hours hours55 = hours52.plus(10);
        org.joda.time.Hours hours56 = hours46.minus(hours55);
        org.joda.time.Hours hours58 = hours46.dividedBy(6);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Hours hours60 = org.joda.time.Hours.hoursIn(readableInterval59);
        org.joda.time.DurationFieldType durationFieldType61 = hours60.getFieldType();
        org.joda.time.Hours hours63 = hours60.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours65 = hours60.plus((int) (byte) 1);
        org.joda.time.Hours hours66 = hours65.negated();
        int int67 = hours58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        boolean boolean68 = hours12.equals((java.lang.Object) hours58);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        boolean boolean70 = hours12.isSupported(durationFieldType69);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-2147483647H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.multipliedBy((int) (byte) 10);
        org.joda.time.Period period9 = hours8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = hours8.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Duration duration37 = hours34.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod38 = hours34.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.Hours hours48 = hours9.dividedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = hours9.getValue(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        java.lang.String str36 = hours25.toString();
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = hours38.getFieldType();
        org.joda.time.Hours hours41 = hours38.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours43 = hours38.plus((int) (byte) 1);
        org.joda.time.Hours hours45 = hours38.dividedBy(100);
        int int46 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        boolean boolean47 = hours8.isLessThan(hours25);
        org.joda.time.Period period48 = hours8.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-2H" + "'", str36, "PT-2H");
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.MutablePeriod mutablePeriod15 = hours5.toMutablePeriod();
        org.joda.time.Hours hours17 = hours5.multipliedBy(10);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours18.isSupported(durationFieldType24);
        org.joda.time.Hours hours27 = hours18.minus((int) (short) -1);
        org.joda.time.PeriodType periodType28 = hours18.getPeriodType();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        int int31 = hours29.getValue((int) (short) 0);
        org.joda.time.Hours hours32 = hours18.minus(hours29);
        org.joda.time.Hours hours34 = hours18.plus(7);
        org.joda.time.Hours hours35 = hours18.negated();
        org.joda.time.Hours hours37 = hours35.multipliedBy(100);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        int int41 = hours39.getValue((int) (short) 0);
        org.joda.time.Hours hours42 = hours38.minus(hours39);
        boolean boolean44 = hours39.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours45 = null;
        org.joda.time.Hours hours46 = hours39.minus(hours45);
        org.joda.time.Hours hours47 = hours46.negated();
        org.joda.time.Hours hours48 = hours35.plus(hours46);
        org.joda.time.Hours hours50 = hours48.minus(5);
        boolean boolean51 = hours17.isGreaterThan(hours48);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-7));
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.Hours hours40 = hours21.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.Duration duration45 = hours41.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod46 = hours41.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        java.lang.String str50 = hours47.toString();
        boolean boolean51 = hours41.isGreaterThan(hours47);
        org.joda.time.Hours hours53 = hours47.minus(10);
        org.joda.time.Hours hours54 = hours47.negated();
        org.joda.time.Hours hours56 = hours54.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType58 = hours54.getFieldType(0);
        java.lang.Class<?> wildcardClass59 = hours54.getClass();
        boolean boolean60 = hours40.equals((java.lang.Object) wildcardClass59);
        org.joda.time.Duration duration61 = hours40.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT8H" + "'", str50, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration61);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.Period period4 = hours0.toPeriod();
        org.joda.time.Days days5 = hours0.toStandardDays();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.getHours();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ONE;
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.plus(10);
        org.joda.time.Hours hours50 = hours40.minus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        boolean boolean52 = hours26.isLessThan(hours51);
        boolean boolean53 = hours13.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        org.joda.time.Hours hours59 = hours54.negated();
        boolean boolean60 = hours26.equals((java.lang.Object) hours59);
        int int62 = hours59.getValue(0);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod65 = hours64.toMutablePeriod();
        org.joda.time.Hours hours66 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours67 = hours64.minus(hours66);
        int int68 = hours63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours66);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        boolean boolean70 = hours63.isSupported(durationFieldType69);
        org.joda.time.Hours hours72 = hours63.multipliedBy((int) (short) 10);
        boolean boolean73 = hours59.isLessThan(hours63);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        java.lang.String str36 = hours25.toString();
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = hours38.getFieldType();
        org.joda.time.Hours hours41 = hours38.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours43 = hours38.plus((int) (byte) 1);
        org.joda.time.Hours hours45 = hours38.dividedBy(100);
        int int46 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        boolean boolean47 = hours8.isLessThan(hours25);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = hours25.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-2H" + "'", str36, "PT-2H");
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours19 = hours17.multipliedBy((-4));
        org.joda.time.Hours hours21 = hours19.dividedBy((-4));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours20.get(durationFieldType24);
        org.joda.time.Hours hours27 = hours20.minus((int) (short) 0);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        int int34 = hours33.getHours();
        org.joda.time.Hours hours36 = hours33.plus(10);
        org.joda.time.Hours hours37 = hours27.minus(hours36);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours37);
        boolean boolean39 = hours0.isLessThan(hours37);
        java.lang.Class<?> wildcardClass40 = hours37.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.PeriodType periodType54 = hours48.getPeriodType();
        org.joda.time.Hours hours56 = hours48.multipliedBy(8);
        org.joda.time.Hours hours58 = hours48.dividedBy((-25));
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours61 = hours17.multipliedBy(16);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours61);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        int int6 = hours4.getHours();
        org.joda.time.Hours hours8 = hours4.plus(92);
        org.joda.time.MutablePeriod mutablePeriod9 = hours4.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.Hours hours10 = null;
        boolean boolean11 = hours9.isGreaterThan(hours10);
        int int12 = hours9.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        org.joda.time.Hours hours17 = hours15.minus(0);
        org.joda.time.DurationFieldType durationFieldType19 = hours15.getFieldType(0);
        org.joda.time.Hours hours21 = hours15.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours21);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours40 = hours36.plus(6);
        org.joda.time.Hours hours42 = hours40.multipliedBy((int) ' ');
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.dividedBy((int) 'a');
        java.lang.Class<?> wildcardClass6 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        int int17 = hours11.getHours();
        org.joda.time.MutablePeriod mutablePeriod18 = hours11.toMutablePeriod();
        boolean boolean19 = hours0.isGreaterThan(hours11);
        java.lang.Class<?> wildcardClass20 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours9.dividedBy(100);
        boolean boolean14 = hours1.isLessThan(hours13);
        int int15 = hours1.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        int int12 = hours0.size();
        org.joda.time.Hours hours14 = hours0.plus(5);
        int int15 = hours14.getHours();
        java.lang.String str16 = hours14.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 12 + "'", int15 == 12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT12H" + "'", str16, "PT12H");
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType50 = hours10.getFieldType();
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        int int52 = hours51.getHours();
        org.joda.time.Hours hours54 = hours51.plus(10);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Duration duration59 = hours55.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod60 = hours55.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        java.lang.String str64 = hours61.toString();
        boolean boolean65 = hours55.isGreaterThan(hours61);
        org.joda.time.Hours hours67 = hours61.minus(10);
        org.joda.time.Hours hours68 = hours61.negated();
        org.joda.time.Hours hours70 = hours68.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType(0);
        boolean boolean73 = hours51.equals((java.lang.Object) durationFieldType72);
        boolean boolean74 = hours10.isLessThan(hours51);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours78 = hours76.minus((int) ' ');
        org.joda.time.Hours hours80 = hours78.dividedBy((int) (short) -1);
        org.joda.time.Hours hours81 = hours10.plus(hours80);
        org.joda.time.DurationFieldType durationFieldType82 = hours10.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType82);
    }
}

