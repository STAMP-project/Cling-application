import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics((int) (short) 100);
        double double3 = descriptiveStatistics1.getPercentile(10.000000000000002d);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        descriptiveStatistics4.setSumsqImpl(univariateStatistic7);
        double double9 = descriptiveStatistics4.getMean();
        long long10 = descriptiveStatistics4.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics4.getVarianceImpl();
        java.lang.String str12 = descriptiveStatistics4.toString();
        double double13 = descriptiveStatistics4.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics4.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        double double18 = descriptiveStatistics15.getSum();
        long long19 = descriptiveStatistics15.getN();
        double double20 = descriptiveStatistics15.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics15.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics15.getGeometricMeanImpl();
        double double23 = descriptiveStatistics15.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics15.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        double double28 = descriptiveStatistics25.getSum();
        double double29 = descriptiveStatistics25.getMin();
        double[] doubleArray30 = descriptiveStatistics25.getSortedValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        double double33 = descriptiveStatistics31.getMax();
        double double34 = descriptiveStatistics31.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics31.getMeanImpl();
        descriptiveStatistics25.setMaxImpl(univariateStatistic35);
        descriptiveStatistics15.setMeanImpl(univariateStatistic35);
        descriptiveStatistics4.setSkewnessImpl(univariateStatistic35);
        descriptiveStatistics1.setMinImpl(univariateStatistic35);
        java.lang.String str40 = descriptiveStatistics1.toString();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str40, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double21 = descriptiveStatistics0.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        java.lang.String str24 = descriptiveStatistics22.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        double double27 = descriptiveStatistics25.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics25.getKurtosisImpl();
        descriptiveStatistics22.setVarianceImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics22.getPercentileImpl();
        double double31 = descriptiveStatistics22.getGeometricMean();
        descriptiveStatistics22.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        double[] doubleArray36 = descriptiveStatistics34.getSortedValues();
        descriptiveStatistics34.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics34.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics40 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = null;
        descriptiveStatistics40.setMaxImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        double double45 = descriptiveStatistics43.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics43.getKurtosisImpl();
        descriptiveStatistics40.setMaxImpl(univariateStatistic46);
        descriptiveStatistics34.setMinImpl(univariateStatistic46);
        descriptiveStatistics22.setKurtosisImpl(univariateStatistic46);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics50 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics50.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        java.lang.String str54 = descriptiveStatistics52.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics52.getSkewnessImpl();
        descriptiveStatistics50.setSkewnessImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = null;
        descriptiveStatistics57.setMaxImpl(univariateStatistic58);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double61 = descriptiveStatistics60.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics60.getMeanImpl();
        descriptiveStatistics57.setMeanImpl(univariateStatistic62);
        descriptiveStatistics50.setKurtosisImpl(univariateStatistic62);
        double double65 = descriptiveStatistics50.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics66 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = descriptiveStatistics66.getKurtosisImpl();
        java.lang.String str68 = descriptiveStatistics66.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics69 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics69.getKurtosisImpl();
        double double71 = descriptiveStatistics69.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic72 = descriptiveStatistics69.getKurtosisImpl();
        descriptiveStatistics66.setVarianceImpl(univariateStatistic72);
        descriptiveStatistics50.setKurtosisImpl(univariateStatistic72);
        descriptiveStatistics22.setMinImpl(univariateStatistic72);
        descriptiveStatistics0.setMeanImpl(univariateStatistic72);
        double double77 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics78 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics78.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics80 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics80.getKurtosisImpl();
        descriptiveStatistics78.setSumsqImpl(univariateStatistic81);
        double double83 = descriptiveStatistics78.getMean();
        long long84 = descriptiveStatistics78.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic85 = descriptiveStatistics78.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic86 = descriptiveStatistics78.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic87 = descriptiveStatistics78.getSumsqImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic87);
        double double89 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str24, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str54, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(univariateStatistic67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str68, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(univariateStatistic72);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertNotNull(univariateStatistic81);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic85);
        org.junit.Assert.assertNotNull(univariateStatistic86);
        org.junit.Assert.assertNotNull(univariateStatistic87);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double21 = descriptiveStatistics0.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getSkewnessImpl();
        descriptiveStatistics0.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double25 = descriptiveStatistics0.getElement((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 10 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        double double10 = descriptiveStatistics8.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getKurtosisImpl();
        descriptiveStatistics5.setVarianceImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics5.getPercentileImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic13);
        double double15 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        double double19 = descriptiveStatistics16.getSum();
        double double20 = descriptiveStatistics16.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        double double23 = descriptiveStatistics21.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics21.getKurtosisImpl();
        descriptiveStatistics16.setMinImpl(univariateStatistic24);
        java.lang.Class<?> wildcardClass26 = descriptiveStatistics16.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass26);
        double double28 = descriptiveStatistics27.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics27.getMeanImpl();
        double double30 = descriptiveStatistics27.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        double double34 = descriptiveStatistics31.getSum();
        double double35 = descriptiveStatistics31.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        double double38 = descriptiveStatistics36.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics36.getKurtosisImpl();
        descriptiveStatistics31.setMinImpl(univariateStatistic39);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        java.lang.String str43 = descriptiveStatistics41.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        double double46 = descriptiveStatistics44.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics44.getKurtosisImpl();
        descriptiveStatistics41.setVarianceImpl(univariateStatistic47);
        descriptiveStatistics31.setSumImpl(univariateStatistic47);
        descriptiveStatistics27.setSkewnessImpl(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics27.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = null;
        descriptiveStatistics27.setVarianceImpl(univariateStatistic52);
        long long54 = descriptiveStatistics27.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics55 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics55.getKurtosisImpl();
        double double57 = descriptiveStatistics55.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics55.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics55.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics55.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics55.getSkewnessImpl();
        double double62 = descriptiveStatistics55.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics55.getKurtosisImpl();
        descriptiveStatistics27.setMinImpl(univariateStatistic63);
        double double65 = descriptiveStatistics0.apply(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(descriptiveStatistics27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str43, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray2 = descriptiveStatistics0.getSortedValues();
        descriptiveStatistics0.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = null;
        descriptiveStatistics6.setMaxImpl(univariateStatistic7);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        double double11 = descriptiveStatistics9.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics9.getKurtosisImpl();
        descriptiveStatistics6.setMaxImpl(univariateStatistic12);
        descriptiveStatistics0.setMinImpl(univariateStatistic12);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics15.setVarianceImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics15.getPercentileImpl();
        double double24 = descriptiveStatistics15.getGeometricMean();
        descriptiveStatistics15.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics15.getPercentileImpl();
        descriptiveStatistics0.setPercentileImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics0.getKurtosisImpl();
        // The following exception was thrown during execution in test generation
        try {
            double double31 = descriptiveStatistics0.getElement(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 100 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic29);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        double[] doubleArray4 = descriptiveStatistics0.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics7.getSkewnessImpl();
        double double11 = descriptiveStatistics7.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics7.getSkewnessImpl();
        double double13 = descriptiveStatistics7.getMean();
        double[] doubleArray14 = descriptiveStatistics7.getValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        double double18 = descriptiveStatistics15.getSum();
        double double19 = descriptiveStatistics15.getMin();
        descriptiveStatistics15.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        descriptiveStatistics21.setVarianceImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics21.getMeanImpl();
        double double30 = descriptiveStatistics21.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics21.getSumImpl();
        double double32 = descriptiveStatistics15.apply(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics15.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        double double37 = descriptiveStatistics34.getSum();
        double double38 = descriptiveStatistics34.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics34.setMinImpl(univariateStatistic42);
        double double44 = descriptiveStatistics34.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics34.getSkewnessImpl();
        descriptiveStatistics15.setKurtosisImpl(univariateStatistic45);
        descriptiveStatistics7.setKurtosisImpl(univariateStatistic45);
        descriptiveStatistics0.setMaxImpl(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(univariateStatistic45);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getPercentileImpl();
        double double9 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        double double13 = descriptiveStatistics10.getSum();
        double double14 = descriptiveStatistics10.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics10.setMinImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        java.lang.String str22 = descriptiveStatistics20.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        double double25 = descriptiveStatistics23.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics23.getKurtosisImpl();
        descriptiveStatistics20.setVarianceImpl(univariateStatistic26);
        descriptiveStatistics10.setSumImpl(univariateStatistic26);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics10.getSumImpl();
        double double31 = descriptiveStatistics10.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics10.getPercentileImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics0.getSumsqImpl();
        long long35 = descriptiveStatistics0.getN();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str22, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = null;
        descriptiveStatistics0.setMaxImpl(univariateStatistic1);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic6);
        long long8 = descriptiveStatistics0.getN();
        java.lang.Class<?> wildcardClass9 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass9);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass9);
        org.junit.Assert.assertNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(descriptiveStatistics10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        double double8 = descriptiveStatistics5.getSum();
        long long9 = descriptiveStatistics5.getN();
        java.lang.String str10 = descriptiveStatistics5.toString();
        int int11 = descriptiveStatistics5.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        double double15 = descriptiveStatistics12.getSum();
        long long16 = descriptiveStatistics12.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        java.lang.String str19 = descriptiveStatistics17.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        double double22 = descriptiveStatistics20.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics20.getKurtosisImpl();
        descriptiveStatistics17.setVarianceImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics17.getPercentileImpl();
        descriptiveStatistics12.setGeometricMeanImpl(univariateStatistic25);
        double double27 = descriptiveStatistics5.apply(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics5.getSumsqImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics0.getKurtosisImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str19, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic33);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics24.getSumImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics33.getKurtosisImpl();
        descriptiveStatistics31.setSumsqImpl(univariateStatistic34);
        double double36 = descriptiveStatistics31.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics31.getSkewnessImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic37);
        descriptiveStatistics0.addValue((double) '#');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics0.getSumImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic42);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        descriptiveStatistics0.addValue((-1.0d));
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        double double9 = descriptiveStatistics7.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics7.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics11.setSumsqImpl(univariateStatistic14);
        double double16 = descriptiveStatistics11.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics11.getSkewnessImpl();
        descriptiveStatistics7.setKurtosisImpl(univariateStatistic17);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics21.getSkewnessImpl();
        descriptiveStatistics19.setSkewnessImpl(univariateStatistic24);
        double double26 = descriptiveStatistics19.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = null;
        descriptiveStatistics27.setMaxImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double31 = descriptiveStatistics30.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics30.getMeanImpl();
        descriptiveStatistics27.setMeanImpl(univariateStatistic32);
        descriptiveStatistics19.setMeanImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics19.getSumImpl();
        descriptiveStatistics7.setMinImpl(univariateStatistic35);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        double[] doubleArray39 = descriptiveStatistics37.getSortedValues();
        double double40 = descriptiveStatistics37.getGeometricMean();
        double double41 = descriptiveStatistics37.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics42.getKurtosisImpl();
        java.lang.String str44 = descriptiveStatistics42.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        double double47 = descriptiveStatistics45.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics45.getKurtosisImpl();
        descriptiveStatistics42.setVarianceImpl(univariateStatistic48);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics42.getMeanImpl();
        descriptiveStatistics37.setMeanImpl(univariateStatistic50);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics37.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics37.getSumsqImpl();
        descriptiveStatistics7.setKurtosisImpl(univariateStatistic53);
        descriptiveStatistics0.setMinImpl(univariateStatistic53);
        java.lang.String str56 = descriptiveStatistics0.toString();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str44, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "DescriptiveStatistics:\nn: 1\nmin: 1.0\nmax: -1.0\nmean: -1.0\nstd dev: 0.0\nmedian: -1.0\nskewness: NaN\nkurtosis: NaN\n" + "'", str56, "DescriptiveStatistics:\nn: 1\nmin: 1.0\nmax: -1.0\nmean: -1.0\nstd dev: 0.0\nmedian: -1.0\nskewness: NaN\nkurtosis: NaN\n");
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getKurtosis();
        double double11 = descriptiveStatistics0.getMean();
        double double12 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics0.getPercentileImpl();
        java.lang.Class<?> wildcardClass15 = descriptiveStatistics0.getClass();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getKurtosis();
        double double11 = descriptiveStatistics0.getMean();
        double double12 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getSumImpl();
        double double14 = descriptiveStatistics0.getKurtosis();
        double double15 = descriptiveStatistics0.getMax();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMeanImpl();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        java.lang.String str11 = descriptiveStatistics9.toString();
        double double12 = descriptiveStatistics9.getSum();
        double double13 = descriptiveStatistics9.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        double double16 = descriptiveStatistics14.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics14.getKurtosisImpl();
        descriptiveStatistics9.setMinImpl(univariateStatistic17);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        java.lang.String str21 = descriptiveStatistics19.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        double double24 = descriptiveStatistics22.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics19.setVarianceImpl(univariateStatistic25);
        descriptiveStatistics9.setSumImpl(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics9.getSumImpl();
        double double29 = descriptiveStatistics9.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics9.getSumImpl();
        double double31 = descriptiveStatistics9.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics9.getSumImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic32);
        descriptiveStatistics0.setWindowSize((int) (short) 10);
        double double36 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics0.getSumImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str11, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str21, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic38);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics24.getSumImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        double double34 = descriptiveStatistics31.getSum();
        double double35 = descriptiveStatistics31.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics31.getGeometricMeanImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic36);
        double double38 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        java.lang.String str41 = descriptiveStatistics39.toString();
        double double42 = descriptiveStatistics39.getSum();
        long long43 = descriptiveStatistics39.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics39.getMeanImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic44);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        java.lang.String str50 = descriptiveStatistics48.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics48.getSkewnessImpl();
        descriptiveStatistics46.setSkewnessImpl(univariateStatistic51);
        double double53 = descriptiveStatistics46.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = null;
        descriptiveStatistics54.setMaxImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double58 = descriptiveStatistics57.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics57.getMeanImpl();
        descriptiveStatistics54.setMeanImpl(univariateStatistic59);
        descriptiveStatistics46.setMeanImpl(univariateStatistic59);
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic59);
        descriptiveStatistics0.addValue((double) 'a');
        java.lang.Class<?> wildcardClass65 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics66 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass65);
        descriptiveStatistics66.clear();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str41, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str50, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(descriptiveStatistics66);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics24.getSumImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getMinImpl();
        double double31 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics32 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics32.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics34.getSkewnessImpl();
        descriptiveStatistics32.setSkewnessImpl(univariateStatistic37);
        double double39 = descriptiveStatistics32.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics40 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics40.getKurtosisImpl();
        java.lang.String str42 = descriptiveStatistics40.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics40.getSkewnessImpl();
        descriptiveStatistics32.setMeanImpl(univariateStatistic43);
        double[] doubleArray45 = descriptiveStatistics32.getSortedValues();
        double double46 = descriptiveStatistics32.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics32.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        java.lang.String str50 = descriptiveStatistics48.toString();
        double double51 = descriptiveStatistics48.getSum();
        long long52 = descriptiveStatistics48.getN();
        double double53 = descriptiveStatistics48.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics48.getMaxImpl();
        double double55 = descriptiveStatistics48.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics48.getGeometricMeanImpl();
        double double57 = descriptiveStatistics48.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics59 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        double double60 = descriptiveStatistics59.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics59.getMaxImpl();
        descriptiveStatistics48.setMeanImpl(univariateStatistic61);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics63 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics63.getKurtosisImpl();
        java.lang.String str65 = descriptiveStatistics63.toString();
        double double66 = descriptiveStatistics63.getSum();
        double double67 = descriptiveStatistics63.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics63.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics63.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics63.getMeanImpl();
        double[] doubleArray71 = descriptiveStatistics63.getSortedValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic72 = descriptiveStatistics63.getGeometricMeanImpl();
        descriptiveStatistics48.setSumImpl(univariateStatistic72);
        descriptiveStatistics32.setMeanImpl(univariateStatistic72);
        descriptiveStatistics0.setMinImpl(univariateStatistic72);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str42, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str50, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str65, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic72);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        double[] doubleArray4 = descriptiveStatistics0.getValues();
        int int5 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        java.lang.String str10 = descriptiveStatistics8.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getSkewnessImpl();
        descriptiveStatistics6.setSkewnessImpl(univariateStatistic11);
        double double13 = descriptiveStatistics6.getSumsq();
        long long14 = descriptiveStatistics6.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics6.getMeanImpl();
        double double16 = descriptiveStatistics6.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics6.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        java.lang.String str22 = descriptiveStatistics20.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics20.getSkewnessImpl();
        descriptiveStatistics18.setSkewnessImpl(univariateStatistic23);
        double double25 = descriptiveStatistics18.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = null;
        descriptiveStatistics26.setMaxImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double30 = descriptiveStatistics29.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics29.getMeanImpl();
        descriptiveStatistics26.setMeanImpl(univariateStatistic31);
        descriptiveStatistics18.setVarianceImpl(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics18.getMinImpl();
        descriptiveStatistics6.setMinImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics6.getMeanImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str22, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getGeometricMeanImpl();
        double[] doubleArray6 = descriptiveStatistics0.getSortedValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        descriptiveStatistics7.setSumsqImpl(univariateStatistic10);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics7.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics7.getMeanImpl();
        descriptiveStatistics7.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        double double18 = descriptiveStatistics15.getSum();
        double double19 = descriptiveStatistics15.getMin();
        descriptiveStatistics15.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        descriptiveStatistics21.setVarianceImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics21.getMeanImpl();
        double double30 = descriptiveStatistics21.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics21.getSumImpl();
        double double32 = descriptiveStatistics15.apply(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics15.getSumImpl();
        descriptiveStatistics7.setSumsqImpl(univariateStatistic33);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic33);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics0.getSkewnessImpl();
        double double37 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMean();
        double double6 = descriptiveStatistics0.getGeometricMean();
        descriptiveStatistics0.setWindowSize((int) '#');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getVarianceImpl();
        double double11 = descriptiveStatistics0.getSum();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getSumsqImpl();
        double double24 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = null;
        descriptiveStatistics0.setVarianceImpl(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics0.getVarianceImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNull(univariateStatistic27);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMeanImpl();
        double double7 = descriptiveStatistics0.getVariance();
        descriptiveStatistics0.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getKurtosisImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic11);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        double double10 = descriptiveStatistics0.getVariance();
        java.lang.Class<?> wildcardClass11 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass11);
        double[] doubleArray13 = descriptiveStatistics12.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics12.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics12.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        double double21 = descriptiveStatistics19.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics16.setVarianceImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics16.getMeanImpl();
        double double25 = descriptiveStatistics16.getStandardDeviation();
        double double26 = descriptiveStatistics16.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics27.getKurtosisImpl();
        java.lang.String str29 = descriptiveStatistics27.toString();
        double double30 = descriptiveStatistics27.getSum();
        long long31 = descriptiveStatistics27.getN();
        java.lang.String str32 = descriptiveStatistics27.toString();
        int int33 = descriptiveStatistics27.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        double double37 = descriptiveStatistics34.getSum();
        long long38 = descriptiveStatistics34.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        java.lang.String str41 = descriptiveStatistics39.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics42.getKurtosisImpl();
        double double44 = descriptiveStatistics42.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics42.getKurtosisImpl();
        descriptiveStatistics39.setVarianceImpl(univariateStatistic45);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics39.getPercentileImpl();
        descriptiveStatistics34.setGeometricMeanImpl(univariateStatistic47);
        double double49 = descriptiveStatistics27.apply(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics27.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics51 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics51.getKurtosisImpl();
        double double53 = descriptiveStatistics51.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics51.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics51.getSumImpl();
        descriptiveStatistics27.setMaxImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics27.getMinImpl();
        descriptiveStatistics16.setMaxImpl(univariateStatistic57);
        descriptiveStatistics12.setKurtosisImpl(univariateStatistic57);
        long long60 = descriptiveStatistics12.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics12.getSumsqImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(descriptiveStatistics12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str29, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str32, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str41, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic61);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getGeometricMean();
        double double3 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        java.lang.String str6 = descriptiveStatistics4.toString();
        double double7 = descriptiveStatistics4.getSum();
        long long8 = descriptiveStatistics4.getN();
        double double9 = descriptiveStatistics4.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics4.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics4.getGeometricMeanImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getGeometricMeanImpl();
        double[] doubleArray14 = descriptiveStatistics0.getValues();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics0.getMaxImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str6, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic16);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray2 = descriptiveStatistics0.getSortedValues();
        double double3 = descriptiveStatistics0.getGeometricMean();
        double double4 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        double double10 = descriptiveStatistics8.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getKurtosisImpl();
        descriptiveStatistics5.setVarianceImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics5.getMeanImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = null;
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic17);
        descriptiveStatistics0.setWindowSize(1);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getMeanImpl();
        double double23 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        double double8 = descriptiveStatistics5.getSum();
        long long9 = descriptiveStatistics5.getN();
        java.lang.String str10 = descriptiveStatistics5.toString();
        int int11 = descriptiveStatistics5.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        double double15 = descriptiveStatistics12.getSum();
        long long16 = descriptiveStatistics12.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        java.lang.String str19 = descriptiveStatistics17.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        double double22 = descriptiveStatistics20.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics20.getKurtosisImpl();
        descriptiveStatistics17.setVarianceImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics17.getPercentileImpl();
        descriptiveStatistics12.setGeometricMeanImpl(univariateStatistic25);
        double double27 = descriptiveStatistics5.apply(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics5.getSumsqImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = null;
        descriptiveStatistics31.setMinImpl(univariateStatistic33);
        double[] doubleArray35 = descriptiveStatistics31.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics31.getSumsqImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic36);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics0.getVarianceImpl();
        double double39 = descriptiveStatistics0.getVariance();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str19, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        long long25 = descriptiveStatistics21.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        double double31 = descriptiveStatistics29.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics26.setVarianceImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics26.getPercentileImpl();
        descriptiveStatistics21.setGeometricMeanImpl(univariateStatistic34);
        descriptiveStatistics0.setPercentileImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics37.setSumsqImpl(univariateStatistic40);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics37.getPercentileImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic42);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics0.getPercentileImpl();
        descriptiveStatistics0.setWindowSize((int) (byte) -1);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic46);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        descriptiveStatistics8.setSumsqImpl(univariateStatistic11);
        descriptiveStatistics7.setVarianceImpl(univariateStatistic11);
        double double14 = descriptiveStatistics7.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics7.getMinImpl();
        double double16 = descriptiveStatistics7.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics17.setSumsqImpl(univariateStatistic20);
        double double22 = descriptiveStatistics17.getMean();
        long long23 = descriptiveStatistics17.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics17.getMaxImpl();
        descriptiveStatistics7.setMaxImpl(univariateStatistic24);
        descriptiveStatistics0.setMeanImpl(univariateStatistic24);
        descriptiveStatistics0.setWindowSize((int) '#');
        double double29 = descriptiveStatistics0.getSkewness();
        double double30 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        double double33 = descriptiveStatistics31.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics31.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        descriptiveStatistics35.setSumsqImpl(univariateStatistic38);
        double double40 = descriptiveStatistics35.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics35.getSkewnessImpl();
        descriptiveStatistics31.setKurtosisImpl(univariateStatistic41);
        double double43 = descriptiveStatistics31.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        java.lang.String str46 = descriptiveStatistics44.toString();
        double double47 = descriptiveStatistics44.getSum();
        double double48 = descriptiveStatistics44.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        double double51 = descriptiveStatistics49.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics49.getKurtosisImpl();
        descriptiveStatistics44.setMinImpl(univariateStatistic52);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics44.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics44.getSumsqImpl();
        descriptiveStatistics31.setSumImpl(univariateStatistic55);
        double[] doubleArray57 = descriptiveStatistics31.getSortedValues();
        double double59 = descriptiveStatistics31.getPercentile(1.0d);
        double double60 = descriptiveStatistics31.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics31.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics31.getSkewnessImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str46, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertNotNull(univariateStatistic62);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        java.lang.Class<?> wildcardClass10 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass10);
        double double12 = descriptiveStatistics11.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        double double14 = descriptiveStatistics11.getGeometricMean();
        double double15 = descriptiveStatistics11.getSum();
        descriptiveStatistics11.setWindowSize((int) '#');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics11.getKurtosisImpl();
        double[] doubleArray19 = descriptiveStatistics11.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics11.getPercentileImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic20);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics11.setSumsqImpl(univariateStatistic14);
        descriptiveStatistics10.setVarianceImpl(univariateStatistic14);
        double double17 = descriptiveStatistics10.getStandardDeviation();
        double double18 = descriptiveStatistics10.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics21.getSkewnessImpl();
        descriptiveStatistics19.setSkewnessImpl(univariateStatistic24);
        double double26 = descriptiveStatistics19.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = null;
        descriptiveStatistics27.setMaxImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double31 = descriptiveStatistics30.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics30.getMeanImpl();
        descriptiveStatistics27.setMeanImpl(univariateStatistic32);
        descriptiveStatistics19.setMeanImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics19.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        descriptiveStatistics36.setSumsqImpl(univariateStatistic39);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics36.getPercentileImpl();
        double double42 = descriptiveStatistics19.apply(univariateStatistic41);
        descriptiveStatistics10.setSumsqImpl(univariateStatistic41);
        descriptiveStatistics0.setSumsqImpl(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray2 = descriptiveStatistics0.getSortedValues();
        double double3 = descriptiveStatistics0.getGeometricMean();
        double double4 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        double double10 = descriptiveStatistics8.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getKurtosisImpl();
        descriptiveStatistics5.setVarianceImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics5.getMeanImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics0.getGeometricMeanImpl();
        double[] doubleArray18 = descriptiveStatistics0.getSortedValues();
        long long19 = descriptiveStatistics0.getN();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        descriptiveStatistics8.setSumsqImpl(univariateStatistic11);
        descriptiveStatistics7.setVarianceImpl(univariateStatistic11);
        double double14 = descriptiveStatistics7.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics7.getMinImpl();
        double double16 = descriptiveStatistics7.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics17.setSumsqImpl(univariateStatistic20);
        double double22 = descriptiveStatistics17.getMean();
        long long23 = descriptiveStatistics17.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics17.getMaxImpl();
        descriptiveStatistics7.setMaxImpl(univariateStatistic24);
        descriptiveStatistics0.setMeanImpl(univariateStatistic24);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics((int) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getMeanImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic32);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        double double9 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        double double12 = descriptiveStatistics10.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics10.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics10.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics10.getPercentileImpl();
        double double16 = descriptiveStatistics10.getMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        java.lang.String str19 = descriptiveStatistics17.toString();
        double double20 = descriptiveStatistics17.getSum();
        double double21 = descriptiveStatistics17.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics17.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics17.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics24.setSumsqImpl(univariateStatistic27);
        double double30 = descriptiveStatistics24.getPercentile(Double.NaN);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        double double34 = descriptiveStatistics31.getSum();
        long long35 = descriptiveStatistics31.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        java.lang.String str38 = descriptiveStatistics36.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics36.setVarianceImpl(univariateStatistic42);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics36.getPercentileImpl();
        descriptiveStatistics31.setGeometricMeanImpl(univariateStatistic44);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getVarianceImpl();
        double double48 = descriptiveStatistics31.apply(univariateStatistic47);
        double double49 = descriptiveStatistics24.apply(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics50 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics50.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        java.lang.String str54 = descriptiveStatistics52.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics52.getSkewnessImpl();
        descriptiveStatistics50.setSkewnessImpl(univariateStatistic55);
        double double57 = descriptiveStatistics50.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics58 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics58.getKurtosisImpl();
        java.lang.String str60 = descriptiveStatistics58.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics58.getSkewnessImpl();
        descriptiveStatistics50.setMeanImpl(univariateStatistic61);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics63 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics63.getKurtosisImpl();
        double double65 = descriptiveStatistics63.getGeometricMean();
        double double66 = descriptiveStatistics63.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics67 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics67.getKurtosisImpl();
        java.lang.String str69 = descriptiveStatistics67.toString();
        double double70 = descriptiveStatistics67.getSum();
        long long71 = descriptiveStatistics67.getN();
        double double72 = descriptiveStatistics67.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics67.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic74 = descriptiveStatistics67.getGeometricMeanImpl();
        descriptiveStatistics63.setSkewnessImpl(univariateStatistic74);
        descriptiveStatistics50.setSumsqImpl(univariateStatistic74);
        descriptiveStatistics24.setVarianceImpl(univariateStatistic74);
        double double78 = descriptiveStatistics17.apply(univariateStatistic74);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics17.getMinImpl();
        double double80 = descriptiveStatistics10.apply(univariateStatistic79);
        descriptiveStatistics0.setSumsqImpl(univariateStatistic79);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str19, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str38, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(descriptiveStatistics46);
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str54, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str60, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str69, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertNotNull(univariateStatistic74);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMean();
        long long6 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getVarianceImpl();
        java.lang.String str8 = descriptiveStatistics0.toString();
        double double9 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getMinImpl();
        int int11 = descriptiveStatistics0.getWindowSize();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str8, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getPercentileImpl();
        double double9 = descriptiveStatistics0.getGeometricMean();
        descriptiveStatistics0.setWindowSize((int) '4');
        double[] doubleArray12 = descriptiveStatistics0.getSortedValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics0.getVarianceImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic14);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        descriptiveStatistics4.setSumsqImpl(univariateStatistic7);
        double double9 = descriptiveStatistics4.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics4.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic10);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        java.lang.String str16 = descriptiveStatistics14.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics14.getSkewnessImpl();
        descriptiveStatistics12.setSkewnessImpl(univariateStatistic17);
        double double19 = descriptiveStatistics12.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = null;
        descriptiveStatistics20.setMaxImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double24 = descriptiveStatistics23.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics23.getMeanImpl();
        descriptiveStatistics20.setMeanImpl(univariateStatistic25);
        descriptiveStatistics12.setMeanImpl(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics12.getSumImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic28);
        descriptiveStatistics0.setWindowSize((int) (short) 10);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str16, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic28);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getGeometricMeanImpl();
        double double6 = descriptiveStatistics0.getSum();
        double double7 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getMeanImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic9);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMeanImpl();
        descriptiveStatistics0.clear();
        int int8 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics((int) (byte) 10);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        java.lang.String str15 = descriptiveStatistics13.toString();
        double double16 = descriptiveStatistics13.getSum();
        double double17 = descriptiveStatistics13.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics13.setMinImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        java.lang.String str25 = descriptiveStatistics23.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        double double28 = descriptiveStatistics26.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics23.setVarianceImpl(univariateStatistic29);
        descriptiveStatistics13.setSumImpl(univariateStatistic29);
        double double32 = descriptiveStatistics13.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics33.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        descriptiveStatistics33.setSumsqImpl(univariateStatistic36);
        double double38 = descriptiveStatistics33.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics33.getSkewnessImpl();
        descriptiveStatistics13.setSkewnessImpl(univariateStatistic39);
        descriptiveStatistics12.setSkewnessImpl(univariateStatistic39);
        descriptiveStatistics10.setVarianceImpl(univariateStatistic39);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        java.lang.String str47 = descriptiveStatistics45.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics45.getSkewnessImpl();
        descriptiveStatistics43.setSkewnessImpl(univariateStatistic48);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics50 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = null;
        descriptiveStatistics50.setMaxImpl(univariateStatistic51);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics53 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double54 = descriptiveStatistics53.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics53.getMeanImpl();
        descriptiveStatistics50.setMeanImpl(univariateStatistic55);
        descriptiveStatistics43.setKurtosisImpl(univariateStatistic55);
        double double58 = descriptiveStatistics43.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics59 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics59.getKurtosisImpl();
        java.lang.String str61 = descriptiveStatistics59.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics62.getKurtosisImpl();
        double double64 = descriptiveStatistics62.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics62.getKurtosisImpl();
        descriptiveStatistics59.setVarianceImpl(univariateStatistic65);
        descriptiveStatistics43.setKurtosisImpl(univariateStatistic65);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics43.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics43.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics43.getMeanImpl();
        descriptiveStatistics10.setSumsqImpl(univariateStatistic70);
        double double72 = descriptiveStatistics0.apply(univariateStatistic70);
        // The following exception was thrown during execution in test generation
        try {
            double double74 = descriptiveStatistics0.getElement(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 0 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str15, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str25, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str47, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str61, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getPercentileImpl();
        double double9 = descriptiveStatistics0.getGeometricMean();
        descriptiveStatistics0.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        double[] doubleArray14 = descriptiveStatistics12.getSortedValues();
        descriptiveStatistics12.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics12.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = null;
        descriptiveStatistics18.setMaxImpl(univariateStatistic19);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        double double23 = descriptiveStatistics21.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics21.getKurtosisImpl();
        descriptiveStatistics18.setMaxImpl(univariateStatistic24);
        descriptiveStatistics12.setMinImpl(univariateStatistic24);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic24);
        double double28 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        java.lang.String str31 = descriptiveStatistics29.toString();
        double double32 = descriptiveStatistics29.getSum();
        long long33 = descriptiveStatistics29.getN();
        double double34 = descriptiveStatistics29.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics29.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics29.getGeometricMeanImpl();
        double double37 = descriptiveStatistics29.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics40 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics40.getKurtosisImpl();
        java.lang.String str42 = descriptiveStatistics40.toString();
        double double43 = descriptiveStatistics40.getSum();
        double double44 = descriptiveStatistics40.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        double double47 = descriptiveStatistics45.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics45.getKurtosisImpl();
        descriptiveStatistics40.setMinImpl(univariateStatistic48);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics50 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics50.getKurtosisImpl();
        java.lang.String str52 = descriptiveStatistics50.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics53 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics53.getKurtosisImpl();
        double double55 = descriptiveStatistics53.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics53.getKurtosisImpl();
        descriptiveStatistics50.setVarianceImpl(univariateStatistic56);
        descriptiveStatistics40.setSumImpl(univariateStatistic56);
        double double59 = descriptiveStatistics40.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics60.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics62.getKurtosisImpl();
        descriptiveStatistics60.setSumsqImpl(univariateStatistic63);
        double double65 = descriptiveStatistics60.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics60.getSkewnessImpl();
        descriptiveStatistics40.setSkewnessImpl(univariateStatistic66);
        descriptiveStatistics39.setSkewnessImpl(univariateStatistic66);
        descriptiveStatistics29.setMaxImpl(univariateStatistic66);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics29.getMaxImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic70);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic72 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics73 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic74 = descriptiveStatistics73.getKurtosisImpl();
        double double75 = descriptiveStatistics73.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic76 = descriptiveStatistics73.getKurtosisImpl();
        double double77 = descriptiveStatistics73.getSumsq();
        double double78 = descriptiveStatistics73.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics73.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic79);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics81 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic82 = descriptiveStatistics81.getKurtosisImpl();
        java.lang.String str83 = descriptiveStatistics81.toString();
        double double84 = descriptiveStatistics81.getSum();
        double double85 = descriptiveStatistics81.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic86 = descriptiveStatistics81.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic87 = descriptiveStatistics81.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic88 = descriptiveStatistics81.getMeanImpl();
        double[] doubleArray89 = descriptiveStatistics81.getSortedValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic90 = descriptiveStatistics81.getGeometricMeanImpl();
        double double91 = descriptiveStatistics0.apply(univariateStatistic90);
        double double92 = descriptiveStatistics0.getMax();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str31, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str42, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str52, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertNotNull(univariateStatistic72);
        org.junit.Assert.assertNotNull(univariateStatistic74);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(univariateStatistic76);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertNotNull(univariateStatistic82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str83, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(univariateStatistic86);
        org.junit.Assert.assertNotNull(univariateStatistic87);
        org.junit.Assert.assertNotNull(univariateStatistic88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double21 = descriptiveStatistics0.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getPercentileImpl();
        double double23 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics0.getMinImpl();
        java.lang.String str25 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics0.getSkewnessImpl();
        int int27 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics0.getMinImpl();
        long long29 = descriptiveStatistics0.getN();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str25, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMax();
        double double6 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getSumImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic9);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double21 = descriptiveStatistics0.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getPercentileImpl();
        double double23 = descriptiveStatistics0.getSkewness();
        descriptiveStatistics0.addValue(1.0d);
        double[] doubleArray26 = descriptiveStatistics0.getValues();
        double double27 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics0.getMeanImpl();
        int int29 = descriptiveStatistics0.getWindowSize();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = null;
        descriptiveStatistics7.setMaxImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double11 = descriptiveStatistics10.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics10.getMeanImpl();
        descriptiveStatistics7.setMeanImpl(univariateStatistic12);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic12);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        double double19 = descriptiveStatistics16.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics16.getVarianceImpl();
        double double21 = descriptiveStatistics0.apply(univariateStatistic20);
        double double22 = descriptiveStatistics0.getMean();
        double[] doubleArray23 = descriptiveStatistics0.getSortedValues();
        descriptiveStatistics0.setWindowSize((int) (byte) -1);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        descriptiveStatistics4.setSumsqImpl(univariateStatistic7);
        double double9 = descriptiveStatistics4.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics4.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic10);
        java.lang.Class<?> wildcardClass12 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass12);
        double double14 = descriptiveStatistics13.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics13.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics16.setSumsqImpl(univariateStatistic19);
        double double21 = descriptiveStatistics16.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics16.getSkewnessImpl();
        double[] doubleArray23 = descriptiveStatistics16.getSortedValues();
        int int24 = descriptiveStatistics16.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics25.getSkewnessImpl();
        double double29 = descriptiveStatistics25.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics25.getSkewnessImpl();
        double double31 = descriptiveStatistics25.getMean();
        double[] doubleArray32 = descriptiveStatistics25.getValues();
        double double33 = descriptiveStatistics25.getSkewness();
        double double34 = descriptiveStatistics25.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics25.getGeometricMeanImpl();
        double double36 = descriptiveStatistics16.apply(univariateStatistic35);
        descriptiveStatistics13.setKurtosisImpl(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(descriptiveStatistics13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getVarianceImpl();
        double double2 = descriptiveStatistics0.getMax();
        java.lang.Class<?> wildcardClass3 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        descriptiveStatistics6.setSumsqImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics6.getPercentileImpl();
        descriptiveStatistics4.setSkewnessImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics4.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics4.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics4.getSkewnessImpl();
        org.junit.Assert.assertNotNull(descriptiveStatistics0);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(descriptiveStatistics4);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic15);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getVarianceImpl();
        double double2 = descriptiveStatistics0.getSum();
        double double3 = descriptiveStatistics0.getStandardDeviation();
        double double4 = descriptiveStatistics0.getStandardDeviation();
        double[] doubleArray5 = descriptiveStatistics0.getValues();
        org.junit.Assert.assertNotNull(descriptiveStatistics0);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray2 = descriptiveStatistics0.getSortedValues();
        double double3 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = null;
        descriptiveStatistics0.setVarianceImpl(univariateStatistic4);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        double[] doubleArray9 = descriptiveStatistics7.getSortedValues();
        descriptiveStatistics7.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics7.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = null;
        descriptiveStatistics13.setMaxImpl(univariateStatistic14);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        double double18 = descriptiveStatistics16.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics16.getKurtosisImpl();
        descriptiveStatistics13.setMaxImpl(univariateStatistic19);
        descriptiveStatistics7.setMinImpl(univariateStatistic19);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        java.lang.String str24 = descriptiveStatistics22.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        double double27 = descriptiveStatistics25.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics25.getKurtosisImpl();
        descriptiveStatistics22.setVarianceImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics22.getPercentileImpl();
        double double31 = descriptiveStatistics22.getGeometricMean();
        descriptiveStatistics22.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics22.getPercentileImpl();
        descriptiveStatistics7.setPercentileImpl(univariateStatistic34);
        descriptiveStatistics0.setSumImpl(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str24, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic34);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = null;
        descriptiveStatistics8.setMaxImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double12 = descriptiveStatistics11.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        descriptiveStatistics8.setMeanImpl(univariateStatistic13);
        descriptiveStatistics0.setMeanImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        double[] doubleArray18 = descriptiveStatistics16.getSortedValues();
        descriptiveStatistics16.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics16.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        java.lang.String str24 = descriptiveStatistics22.toString();
        double double25 = descriptiveStatistics22.getSum();
        long long26 = descriptiveStatistics22.getN();
        java.lang.String str27 = descriptiveStatistics22.toString();
        int int28 = descriptiveStatistics22.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        java.lang.String str31 = descriptiveStatistics29.toString();
        double double32 = descriptiveStatistics29.getSum();
        long long33 = descriptiveStatistics29.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        double double39 = descriptiveStatistics37.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics37.getKurtosisImpl();
        descriptiveStatistics34.setVarianceImpl(univariateStatistic40);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics34.getPercentileImpl();
        descriptiveStatistics29.setGeometricMeanImpl(univariateStatistic42);
        double double44 = descriptiveStatistics22.apply(univariateStatistic42);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics22.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        double double48 = descriptiveStatistics46.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics46.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics46.getSumImpl();
        descriptiveStatistics22.setMaxImpl(univariateStatistic50);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics22.getMinImpl();
        descriptiveStatistics16.setSumImpl(univariateStatistic52);
        descriptiveStatistics0.setMaxImpl(univariateStatistic52);
        double double55 = descriptiveStatistics0.getSumsq();
        double double56 = descriptiveStatistics0.getKurtosis();
        double double57 = descriptiveStatistics0.getVariance();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str24, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str31, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = null;
        descriptiveStatistics7.setMaxImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double11 = descriptiveStatistics10.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics10.getMeanImpl();
        descriptiveStatistics7.setMeanImpl(univariateStatistic12);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic12);
        double double15 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        double double21 = descriptiveStatistics19.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics16.setVarianceImpl(univariateStatistic22);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics0.getMeanImpl();
        java.lang.String str30 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics0.getPercentileImpl();
        // The following exception was thrown during execution in test generation
        try {
            double double34 = descriptiveStatistics0.getElement(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 100 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str30, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic32);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        long long7 = descriptiveStatistics0.getN();
        int int8 = descriptiveStatistics0.getWindowSize();
        double double9 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        double double18 = descriptiveStatistics0.apply(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        java.lang.String str21 = descriptiveStatistics19.toString();
        double double22 = descriptiveStatistics19.getSum();
        long long23 = descriptiveStatistics19.getN();
        double double24 = descriptiveStatistics19.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics19.getMaxImpl();
        descriptiveStatistics19.clear();
        double[] doubleArray27 = descriptiveStatistics19.getValues();
        double double28 = descriptiveStatistics19.getStandardDeviation();
        double double29 = descriptiveStatistics19.getMin();
        double double30 = descriptiveStatistics19.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics19.getMaxImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics0.getMinImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str21, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic33);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        double double9 = descriptiveStatistics0.getMean();
        double double10 = descriptiveStatistics0.getMin();
        double[] doubleArray11 = descriptiveStatistics0.getValues();
        double double12 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        descriptiveStatistics14.setSumsqImpl(univariateStatistic17);
        descriptiveStatistics13.setVarianceImpl(univariateStatistic17);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics13.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        double double25 = descriptiveStatistics21.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        double double28 = descriptiveStatistics26.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics21.setMinImpl(univariateStatistic29);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        double double36 = descriptiveStatistics34.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics34.getKurtosisImpl();
        descriptiveStatistics31.setVarianceImpl(univariateStatistic37);
        descriptiveStatistics21.setSumImpl(univariateStatistic37);
        double double40 = descriptiveStatistics21.getSum();
        descriptiveStatistics21.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics42.getKurtosisImpl();
        java.lang.String str44 = descriptiveStatistics42.toString();
        double double45 = descriptiveStatistics42.getSum();
        long long46 = descriptiveStatistics42.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics47 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics47.getKurtosisImpl();
        java.lang.String str49 = descriptiveStatistics47.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics50 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics50.getKurtosisImpl();
        double double52 = descriptiveStatistics50.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics50.getKurtosisImpl();
        descriptiveStatistics47.setVarianceImpl(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics47.getPercentileImpl();
        descriptiveStatistics42.setGeometricMeanImpl(univariateStatistic55);
        descriptiveStatistics21.setPercentileImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics21.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        int int61 = descriptiveStatistics60.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics60.getMeanImpl();
        descriptiveStatistics21.setVarianceImpl(univariateStatistic62);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics21.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics21.getKurtosisImpl();
        descriptiveStatistics13.setMeanImpl(univariateStatistic65);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics67 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics67.getKurtosisImpl();
        java.lang.String str69 = descriptiveStatistics67.toString();
        double double70 = descriptiveStatistics67.getSum();
        long long71 = descriptiveStatistics67.getN();
        double double72 = descriptiveStatistics67.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics67.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics74 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics74.getKurtosisImpl();
        double double76 = descriptiveStatistics74.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics74.getKurtosisImpl();
        double double78 = descriptiveStatistics67.apply(univariateStatistic77);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics79 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic80 = null;
        descriptiveStatistics79.setMaxImpl(univariateStatistic80);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics82 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double83 = descriptiveStatistics82.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic84 = descriptiveStatistics82.getMeanImpl();
        descriptiveStatistics79.setMeanImpl(univariateStatistic84);
        descriptiveStatistics67.setKurtosisImpl(univariateStatistic84);
        descriptiveStatistics13.setKurtosisImpl(univariateStatistic84);
        descriptiveStatistics0.setSumsqImpl(univariateStatistic84);
        double double89 = descriptiveStatistics0.getSum();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str44, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str49, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str69, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(univariateStatistic84);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = null;
        descriptiveStatistics8.setMaxImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double12 = descriptiveStatistics11.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        descriptiveStatistics8.setMeanImpl(univariateStatistic13);
        descriptiveStatistics0.setMeanImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        double double19 = descriptiveStatistics16.getSum();
        long long20 = descriptiveStatistics16.getN();
        double double21 = descriptiveStatistics16.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics16.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics16.getMeanImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic23);
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        double double29 = descriptiveStatistics26.getSum();
        double double30 = descriptiveStatistics26.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        double double33 = descriptiveStatistics31.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics31.getKurtosisImpl();
        descriptiveStatistics26.setMinImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        java.lang.String str38 = descriptiveStatistics36.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics36.setVarianceImpl(univariateStatistic42);
        descriptiveStatistics26.setSumImpl(univariateStatistic42);
        double double45 = descriptiveStatistics26.getSum();
        descriptiveStatistics26.clear();
        double double47 = descriptiveStatistics26.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics26.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        double[] doubleArray51 = descriptiveStatistics49.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics49.getSumsqImpl();
        descriptiveStatistics26.setSkewnessImpl(univariateStatistic52);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics26.getSumsqImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic54);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str38, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertNotNull(univariateStatistic54);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        java.lang.String str9 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getSkewnessImpl();
        double double11 = descriptiveStatistics0.getSumsq();
        double double12 = descriptiveStatistics0.getMin();
        double double13 = descriptiveStatistics0.getGeometricMean();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.clear();
        descriptiveStatistics0.setWindowSize((int) 'a');
        double[] doubleArray23 = descriptiveStatistics0.getSortedValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        double double5 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        double double9 = descriptiveStatistics7.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics7.getKurtosisImpl();
        double double11 = descriptiveStatistics0.apply(univariateStatistic10);
        double double12 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double14 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        double double18 = descriptiveStatistics15.getSum();
        double double19 = descriptiveStatistics15.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        double double22 = descriptiveStatistics20.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics20.getKurtosisImpl();
        descriptiveStatistics15.setMinImpl(univariateStatistic23);
        descriptiveStatistics13.setMaxImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics13.getSumsqImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic26);
        java.lang.String str28 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics0.getSkewnessImpl();
        double double30 = descriptiveStatistics0.getGeometricMean();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMean();
        long long6 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getVarianceImpl();
        java.lang.String str8 = descriptiveStatistics0.toString();
        double double9 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getMinImpl();
        double double11 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics0.getSkewnessImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str8, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        java.lang.Class<?> wildcardClass10 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass10);
        double double12 = descriptiveStatistics11.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        double double14 = descriptiveStatistics11.getGeometricMean();
        double double15 = descriptiveStatistics11.getSum();
        descriptiveStatistics11.clear();
        double double18 = descriptiveStatistics11.getPercentile((double) 10.0f);
        double double19 = descriptiveStatistics11.getStandardDeviation();
        // The following exception was thrown during execution in test generation
        try {
            double double21 = descriptiveStatistics11.getElement(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 0 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getVarianceImpl();
        double double2 = descriptiveStatistics0.getSum();
        double double3 = descriptiveStatistics0.getSkewness();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getMaxImpl();
        descriptiveStatistics0.setWindowSize(1);
        org.junit.Assert.assertNotNull(descriptiveStatistics0);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic5);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = null;
        descriptiveStatistics7.setMaxImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double11 = descriptiveStatistics10.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics10.getMeanImpl();
        descriptiveStatistics7.setMeanImpl(univariateStatistic12);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic12);
        double double15 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        double double21 = descriptiveStatistics19.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics16.setVarianceImpl(univariateStatistic22);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics0.getKurtosisImpl();
        descriptiveStatistics0.addValue(0.0d);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        java.lang.String str31 = descriptiveStatistics29.toString();
        double double32 = descriptiveStatistics29.getSum();
        long long33 = descriptiveStatistics29.getN();
        java.lang.String str34 = descriptiveStatistics29.toString();
        int int35 = descriptiveStatistics29.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        java.lang.String str38 = descriptiveStatistics36.toString();
        double double39 = descriptiveStatistics36.getSum();
        long long40 = descriptiveStatistics36.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        java.lang.String str43 = descriptiveStatistics41.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        double double46 = descriptiveStatistics44.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics44.getKurtosisImpl();
        descriptiveStatistics41.setVarianceImpl(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics41.getPercentileImpl();
        descriptiveStatistics36.setGeometricMeanImpl(univariateStatistic49);
        double double51 = descriptiveStatistics29.apply(univariateStatistic49);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics29.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics53 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics53.getKurtosisImpl();
        double double55 = descriptiveStatistics53.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics53.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics53.getSumImpl();
        descriptiveStatistics29.setMaxImpl(univariateStatistic57);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics29.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics60.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics62.getKurtosisImpl();
        descriptiveStatistics60.setSumsqImpl(univariateStatistic63);
        double double65 = descriptiveStatistics60.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics60.getSkewnessImpl();
        descriptiveStatistics29.setVarianceImpl(univariateStatistic66);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics29.getVarianceImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic68);
        double double70 = descriptiveStatistics0.getVariance();
        int int71 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic72 = descriptiveStatistics0.getSumsqImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str31, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str34, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str38, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str43, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic72);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getVarianceImpl();
        double double2 = descriptiveStatistics0.getSum();
        double double3 = descriptiveStatistics0.getSkewness();
        descriptiveStatistics0.clear();
        int int5 = descriptiveStatistics0.getWindowSize();
        org.junit.Assert.assertNotNull(descriptiveStatistics0);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMean();
        double double6 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getSkewnessImpl();
        double double8 = descriptiveStatistics0.getMin();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        double double6 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getVarianceImpl();
        double double8 = descriptiveStatistics0.getSum();
        double double9 = descriptiveStatistics0.getSum();
        double double10 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        int int13 = descriptiveStatistics12.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics12.getSumImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertNotNull(univariateStatistic14);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        double double5 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMaxImpl();
        descriptiveStatistics0.clear();
        double[] doubleArray8 = descriptiveStatistics0.getValues();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        double double10 = descriptiveStatistics0.getMin();
        double double11 = descriptiveStatistics0.getKurtosis();
        double[] doubleArray12 = descriptiveStatistics0.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics16.getSkewnessImpl();
        descriptiveStatistics14.setSkewnessImpl(univariateStatistic19);
        double double21 = descriptiveStatistics14.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double23 = descriptiveStatistics22.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics22.getMeanImpl();
        descriptiveStatistics14.setGeometricMeanImpl(univariateStatistic24);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics14.getGeometricMeanImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic26);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        java.lang.String str30 = descriptiveStatistics28.toString();
        double double31 = descriptiveStatistics28.getSum();
        double double32 = descriptiveStatistics28.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics33.getKurtosisImpl();
        double double35 = descriptiveStatistics33.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics33.getKurtosisImpl();
        descriptiveStatistics28.setMinImpl(univariateStatistic36);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        java.lang.String str40 = descriptiveStatistics38.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        double double43 = descriptiveStatistics41.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics41.getKurtosisImpl();
        descriptiveStatistics38.setVarianceImpl(univariateStatistic44);
        descriptiveStatistics28.setSumImpl(univariateStatistic44);
        double double47 = descriptiveStatistics28.getSum();
        descriptiveStatistics28.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        java.lang.String str51 = descriptiveStatistics49.toString();
        double double52 = descriptiveStatistics49.getSum();
        long long53 = descriptiveStatistics49.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics54.getKurtosisImpl();
        java.lang.String str56 = descriptiveStatistics54.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        double double59 = descriptiveStatistics57.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics57.getKurtosisImpl();
        descriptiveStatistics54.setVarianceImpl(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics54.getPercentileImpl();
        descriptiveStatistics49.setGeometricMeanImpl(univariateStatistic62);
        descriptiveStatistics28.setPercentileImpl(univariateStatistic62);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics28.getVarianceImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic65);
        double double67 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str30, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str40, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str51, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str56, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = null;
        descriptiveStatistics8.setMaxImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double12 = descriptiveStatistics11.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        descriptiveStatistics8.setMeanImpl(univariateStatistic13);
        descriptiveStatistics0.setMeanImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = null;
        descriptiveStatistics17.setMaxImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics17.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics17.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics17.setSumImpl(univariateStatistic23);
        long long25 = descriptiveStatistics17.getN();
        descriptiveStatistics17.addValue((double) (byte) 10);
        descriptiveStatistics17.setWindowSize((int) ' ');
        double double30 = descriptiveStatistics17.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics17.getSumImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 100.0d + "'", double30 == 100.0d);
        org.junit.Assert.assertNotNull(univariateStatistic31);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics20.setSumsqImpl(univariateStatistic23);
        double double25 = descriptiveStatistics20.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics20.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic26);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        descriptiveStatistics28.setSumsqImpl(univariateStatistic31);
        double double33 = descriptiveStatistics28.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics28.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics0.getSumsqImpl();
        int int38 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        descriptiveStatistics43.setSumsqImpl(univariateStatistic46);
        double double48 = descriptiveStatistics43.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics43.getSkewnessImpl();
        descriptiveStatistics39.setKurtosisImpl(univariateStatistic49);
        double double51 = descriptiveStatistics39.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        java.lang.String str54 = descriptiveStatistics52.toString();
        double double55 = descriptiveStatistics52.getSum();
        double double56 = descriptiveStatistics52.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        double double59 = descriptiveStatistics57.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics57.getKurtosisImpl();
        descriptiveStatistics52.setMinImpl(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics52.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics52.getSumsqImpl();
        descriptiveStatistics39.setSumImpl(univariateStatistic63);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics39.getMaxImpl();
        descriptiveStatistics39.addValue(100.0d);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics68 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics68.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics70 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics70.getKurtosisImpl();
        java.lang.String str72 = descriptiveStatistics70.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics70.getSkewnessImpl();
        descriptiveStatistics68.setSkewnessImpl(univariateStatistic73);
        double double75 = descriptiveStatistics68.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics76 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = null;
        descriptiveStatistics76.setMaxImpl(univariateStatistic77);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics79 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double80 = descriptiveStatistics79.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics79.getMeanImpl();
        descriptiveStatistics76.setMeanImpl(univariateStatistic81);
        descriptiveStatistics68.setVarianceImpl(univariateStatistic81);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic84 = descriptiveStatistics68.getMinImpl();
        descriptiveStatistics39.setSumImpl(univariateStatistic84);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic84);
        double double87 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic88 = descriptiveStatistics0.getPercentileImpl();
        // The following exception was thrown during execution in test generation
        try {
            double double90 = descriptiveStatistics0.getElement((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Elements cannot be retrieved from a negative array index");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str54, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str72, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(univariateStatistic81);
        org.junit.Assert.assertNotNull(univariateStatistic84);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(univariateStatistic88);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        double[] doubleArray4 = descriptiveStatistics0.getValues();
        double double6 = descriptiveStatistics0.getPercentile((double) 1);
        double double7 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        java.lang.String str10 = descriptiveStatistics8.toString();
        double double11 = descriptiveStatistics8.getSum();
        double double12 = descriptiveStatistics8.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics8.setMinImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        java.lang.String str20 = descriptiveStatistics18.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        double double23 = descriptiveStatistics21.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics21.getKurtosisImpl();
        descriptiveStatistics18.setVarianceImpl(univariateStatistic24);
        descriptiveStatistics8.setSumImpl(univariateStatistic24);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics8.getSumImpl();
        double double29 = descriptiveStatistics8.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics8.getPercentileImpl();
        double double31 = descriptiveStatistics8.getSkewness();
        descriptiveStatistics8.addValue(1.0d);
        double[] doubleArray34 = descriptiveStatistics8.getValues();
        java.lang.String str35 = descriptiveStatistics8.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics8.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics8.getMeanImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic37);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = null;
        descriptiveStatistics39.setMinImpl(univariateStatistic41);
        double[] doubleArray43 = descriptiveStatistics39.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics39.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics39.getSumsqImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str20, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DescriptiveStatistics:\nn: 1\nmin: NaN\nmax: 1.0\nmean: 1.0\nstd dev: 0.0\nmedian: 1.0\nskewness: NaN\nkurtosis: NaN\n" + "'", str35, "DescriptiveStatistics:\nn: 1\nmin: NaN\nmax: 1.0\nmean: 1.0\nstd dev: 0.0\nmedian: 1.0\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic45);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        int int23 = descriptiveStatistics0.getWindowSize();
        descriptiveStatistics0.addValue((double) (byte) 1);
        descriptiveStatistics0.clear();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getMeanImpl();
        double[] doubleArray8 = descriptiveStatistics0.getSortedValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        double double13 = descriptiveStatistics10.getSum();
        long long14 = descriptiveStatistics10.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics15.setVarianceImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics15.getPercentileImpl();
        descriptiveStatistics10.setGeometricMeanImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getVarianceImpl();
        double double27 = descriptiveStatistics10.apply(univariateStatistic26);
        double double28 = descriptiveStatistics10.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics10.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics10.getSumsqImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic30);
        descriptiveStatistics0.clear();
        descriptiveStatistics0.addValue((double) (byte) 10);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(descriptiveStatistics25);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic30);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        double double9 = descriptiveStatistics0.getMean();
        double double10 = descriptiveStatistics0.getMin();
        double[] doubleArray11 = descriptiveStatistics0.getValues();
        double double12 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        descriptiveStatistics14.setSumsqImpl(univariateStatistic17);
        descriptiveStatistics13.setVarianceImpl(univariateStatistic17);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics13.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        double double25 = descriptiveStatistics21.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        double double28 = descriptiveStatistics26.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics21.setMinImpl(univariateStatistic29);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        double double36 = descriptiveStatistics34.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics34.getKurtosisImpl();
        descriptiveStatistics31.setVarianceImpl(univariateStatistic37);
        descriptiveStatistics21.setSumImpl(univariateStatistic37);
        double double40 = descriptiveStatistics21.getSum();
        descriptiveStatistics21.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics42.getKurtosisImpl();
        java.lang.String str44 = descriptiveStatistics42.toString();
        double double45 = descriptiveStatistics42.getSum();
        long long46 = descriptiveStatistics42.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics47 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics47.getKurtosisImpl();
        java.lang.String str49 = descriptiveStatistics47.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics50 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics50.getKurtosisImpl();
        double double52 = descriptiveStatistics50.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics50.getKurtosisImpl();
        descriptiveStatistics47.setVarianceImpl(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics47.getPercentileImpl();
        descriptiveStatistics42.setGeometricMeanImpl(univariateStatistic55);
        descriptiveStatistics21.setPercentileImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics21.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        int int61 = descriptiveStatistics60.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics60.getMeanImpl();
        descriptiveStatistics21.setVarianceImpl(univariateStatistic62);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics21.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics21.getKurtosisImpl();
        descriptiveStatistics13.setMeanImpl(univariateStatistic65);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics67 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics67.getKurtosisImpl();
        java.lang.String str69 = descriptiveStatistics67.toString();
        double double70 = descriptiveStatistics67.getSum();
        long long71 = descriptiveStatistics67.getN();
        double double72 = descriptiveStatistics67.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics67.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics74 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics74.getKurtosisImpl();
        double double76 = descriptiveStatistics74.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics74.getKurtosisImpl();
        double double78 = descriptiveStatistics67.apply(univariateStatistic77);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics79 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic80 = null;
        descriptiveStatistics79.setMaxImpl(univariateStatistic80);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics82 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double83 = descriptiveStatistics82.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic84 = descriptiveStatistics82.getMeanImpl();
        descriptiveStatistics79.setMeanImpl(univariateStatistic84);
        descriptiveStatistics67.setKurtosisImpl(univariateStatistic84);
        descriptiveStatistics13.setKurtosisImpl(univariateStatistic84);
        descriptiveStatistics0.setSumsqImpl(univariateStatistic84);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic89 = descriptiveStatistics0.getMinImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str44, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str49, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str69, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(univariateStatistic84);
        org.junit.Assert.assertNotNull(univariateStatistic89);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.clear();
        double double21 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics25.getSkewnessImpl();
        descriptiveStatistics23.setSkewnessImpl(univariateStatistic28);
        double double30 = descriptiveStatistics23.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics23.getMinImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics33.getKurtosisImpl();
        java.lang.String str35 = descriptiveStatistics33.toString();
        double double36 = descriptiveStatistics33.getSum();
        double double37 = descriptiveStatistics33.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        double double40 = descriptiveStatistics38.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics38.getKurtosisImpl();
        descriptiveStatistics33.setMinImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        java.lang.String str45 = descriptiveStatistics43.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        double double48 = descriptiveStatistics46.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics46.getKurtosisImpl();
        descriptiveStatistics43.setVarianceImpl(univariateStatistic49);
        descriptiveStatistics33.setSumImpl(univariateStatistic49);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics33.getSumImpl();
        double double53 = descriptiveStatistics33.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics33.getSumImpl();
        double double55 = descriptiveStatistics33.getSumsq();
        double double56 = descriptiveStatistics33.getSkewness();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics59 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics59.getKurtosisImpl();
        descriptiveStatistics57.setSumsqImpl(univariateStatistic60);
        double double62 = descriptiveStatistics57.getMean();
        long long63 = descriptiveStatistics57.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics57.getVarianceImpl();
        java.lang.String str65 = descriptiveStatistics57.toString();
        double double66 = descriptiveStatistics57.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = descriptiveStatistics57.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics68 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics68.getKurtosisImpl();
        java.lang.String str70 = descriptiveStatistics68.toString();
        double double71 = descriptiveStatistics68.getSum();
        long long72 = descriptiveStatistics68.getN();
        double double73 = descriptiveStatistics68.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic74 = descriptiveStatistics68.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics68.getGeometricMeanImpl();
        double double76 = descriptiveStatistics68.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics68.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics78 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics78.getKurtosisImpl();
        java.lang.String str80 = descriptiveStatistics78.toString();
        double double81 = descriptiveStatistics78.getSum();
        double double82 = descriptiveStatistics78.getMin();
        double[] doubleArray83 = descriptiveStatistics78.getSortedValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics84 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic85 = descriptiveStatistics84.getKurtosisImpl();
        double double86 = descriptiveStatistics84.getMax();
        double double87 = descriptiveStatistics84.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic88 = descriptiveStatistics84.getMeanImpl();
        descriptiveStatistics78.setMaxImpl(univariateStatistic88);
        descriptiveStatistics68.setMeanImpl(univariateStatistic88);
        descriptiveStatistics57.setSkewnessImpl(univariateStatistic88);
        descriptiveStatistics33.setSkewnessImpl(univariateStatistic88);
        descriptiveStatistics0.setSumImpl(univariateStatistic88);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic94 = descriptiveStatistics0.getGeometricMeanImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str35, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str45, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str65, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(univariateStatistic67);
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str70, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(univariateStatistic74);
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str80, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic85);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(univariateStatistic88);
        org.junit.Assert.assertNotNull(univariateStatistic94);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getSkewnessImpl();
        double double12 = descriptiveStatistics0.getMin();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        double double6 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getVarianceImpl();
        double double8 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        java.lang.String str13 = descriptiveStatistics11.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics11.getSkewnessImpl();
        descriptiveStatistics9.setSkewnessImpl(univariateStatistic14);
        double double16 = descriptiveStatistics9.getSumsq();
        long long17 = descriptiveStatistics9.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics9.getMeanImpl();
        double double19 = descriptiveStatistics9.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics9.getSumsqImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic20);
        long long22 = descriptiveStatistics0.getN();
        double double23 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str13, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getVarianceImpl();
        double double2 = descriptiveStatistics0.getMax();
        java.lang.Class<?> wildcardClass3 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        descriptiveStatistics6.setSumsqImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics6.getPercentileImpl();
        descriptiveStatistics4.setSkewnessImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getSkewnessImpl();
        descriptiveStatistics13.setSkewnessImpl(univariateStatistic18);
        double double20 = descriptiveStatistics13.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = null;
        descriptiveStatistics21.setMaxImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double25 = descriptiveStatistics24.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics24.getMeanImpl();
        descriptiveStatistics21.setMeanImpl(univariateStatistic26);
        descriptiveStatistics13.setVarianceImpl(univariateStatistic26);
        double double29 = descriptiveStatistics4.apply(univariateStatistic26);
        int int30 = descriptiveStatistics4.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics4.getSumImpl();
        org.junit.Assert.assertNotNull(descriptiveStatistics0);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(descriptiveStatistics4);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic31);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double1 = descriptiveStatistics0.getStandardDeviation();
        double double2 = descriptiveStatistics0.getKurtosis();
        descriptiveStatistics0.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getMinImpl();
        double[] doubleArray6 = descriptiveStatistics0.getSortedValues();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[32.0]");
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getMinImpl();
        double double5 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getGeometricMeanImpl();
        double double7 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = null;
        descriptiveStatistics0.setMeanImpl(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        double double24 = descriptiveStatistics22.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics22.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics22.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics22.getPercentileImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic27);
        double double29 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics0.getKurtosisImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic31);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getStandardDeviation();
        double double11 = descriptiveStatistics0.getMin();
        double double12 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics13.setSumsqImpl(univariateStatistic16);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        java.lang.String str21 = descriptiveStatistics19.toString();
        double double22 = descriptiveStatistics19.getSum();
        long long23 = descriptiveStatistics19.getN();
        java.lang.String str24 = descriptiveStatistics19.toString();
        double[] doubleArray25 = descriptiveStatistics19.getValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        double double29 = descriptiveStatistics26.getSum();
        long long30 = descriptiveStatistics26.getN();
        double double31 = descriptiveStatistics26.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics26.getMaxImpl();
        descriptiveStatistics19.setSumImpl(univariateStatistic32);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        java.lang.String str38 = descriptiveStatistics36.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics36.setVarianceImpl(univariateStatistic42);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics36.getPercentileImpl();
        double double45 = descriptiveStatistics36.getGeometricMean();
        descriptiveStatistics36.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        double[] doubleArray50 = descriptiveStatistics48.getSortedValues();
        descriptiveStatistics48.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics48.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = null;
        descriptiveStatistics54.setMaxImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        double double59 = descriptiveStatistics57.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics57.getKurtosisImpl();
        descriptiveStatistics54.setMaxImpl(univariateStatistic60);
        descriptiveStatistics48.setMinImpl(univariateStatistic60);
        descriptiveStatistics36.setKurtosisImpl(univariateStatistic60);
        descriptiveStatistics0.setSumImpl(univariateStatistic60);
        double double66 = descriptiveStatistics0.getPercentile((double) 97);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str21, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str24, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str38, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getGeometricMean();
        double double3 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        java.lang.String str6 = descriptiveStatistics4.toString();
        double double7 = descriptiveStatistics4.getSum();
        double double8 = descriptiveStatistics4.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        double double11 = descriptiveStatistics9.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics9.getKurtosisImpl();
        descriptiveStatistics4.setMinImpl(univariateStatistic12);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        java.lang.String str16 = descriptiveStatistics14.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        double double19 = descriptiveStatistics17.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics17.getKurtosisImpl();
        descriptiveStatistics14.setVarianceImpl(univariateStatistic20);
        descriptiveStatistics4.setSumImpl(univariateStatistic20);
        double double23 = descriptiveStatistics4.getSum();
        descriptiveStatistics4.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        double double28 = descriptiveStatistics25.getSum();
        long long29 = descriptiveStatistics25.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        java.lang.String str32 = descriptiveStatistics30.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics33.getKurtosisImpl();
        double double35 = descriptiveStatistics33.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics33.getKurtosisImpl();
        descriptiveStatistics30.setVarianceImpl(univariateStatistic36);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics30.getPercentileImpl();
        descriptiveStatistics25.setGeometricMeanImpl(univariateStatistic38);
        descriptiveStatistics4.setPercentileImpl(univariateStatistic38);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        descriptiveStatistics41.setSumsqImpl(univariateStatistic44);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics41.getPercentileImpl();
        descriptiveStatistics4.setGeometricMeanImpl(univariateStatistic46);
        descriptiveStatistics0.setSumImpl(univariateStatistic46);
        double double50 = descriptiveStatistics0.getPercentile((double) 100.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics0.getMeanImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str6, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str16, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str32, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(univariateStatistic51);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getMeanImpl();
        double[] doubleArray8 = descriptiveStatistics0.getSortedValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        double double13 = descriptiveStatistics10.getSum();
        long long14 = descriptiveStatistics10.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics15.setVarianceImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics15.getPercentileImpl();
        descriptiveStatistics10.setGeometricMeanImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getVarianceImpl();
        double double27 = descriptiveStatistics10.apply(univariateStatistic26);
        double double28 = descriptiveStatistics10.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics10.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics10.getSumsqImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic30);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics0.getPercentileImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(descriptiveStatistics25);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic33);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        java.lang.String str8 = descriptiveStatistics6.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        double double11 = descriptiveStatistics9.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics9.getKurtosisImpl();
        descriptiveStatistics6.setVarianceImpl(univariateStatistic12);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics6.getMeanImpl();
        double double15 = descriptiveStatistics6.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics6.getSumImpl();
        double double17 = descriptiveStatistics0.apply(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics0.getSumImpl();
        double double19 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics20.setSumsqImpl(univariateStatistic23);
        double double25 = descriptiveStatistics20.getMean();
        long long26 = descriptiveStatistics20.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics20.getMaxImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic27);
        double double29 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics32 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics32.getKurtosisImpl();
        java.lang.String str34 = descriptiveStatistics32.toString();
        double double35 = descriptiveStatistics32.getGeometricMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics32.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics32.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics32.getKurtosisImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str8, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str34, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic38);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = descriptiveStatistics1.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics1.setSumsqImpl(univariateStatistic4);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic4);
        double double7 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        double double9 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        descriptiveStatistics10.setSumsqImpl(univariateStatistic13);
        double double15 = descriptiveStatistics10.getMean();
        long long16 = descriptiveStatistics10.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics10.getMaxImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic17);
        long long19 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(10);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getMeanImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = null;
        descriptiveStatistics24.setMaxImpl(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics24.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics24.getKurtosisImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic2);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic29);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics24.getSumImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getMinImpl();
        double double31 = descriptiveStatistics0.getKurtosis();
        descriptiveStatistics0.addValue((double) (short) 100);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics0.getMinImpl();
        double double35 = descriptiveStatistics0.getSum();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = null;
        descriptiveStatistics0.setMaxImpl(univariateStatistic1);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double4 = descriptiveStatistics3.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics3.getMeanImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getStandardDeviation();
        double double8 = descriptiveStatistics0.getStandardDeviation();
        double double9 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getSumsqImpl();
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        long long7 = descriptiveStatistics0.getN();
        double double8 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.addValue((double) 100);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getMaxImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(univariateStatistic11);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray2 = descriptiveStatistics0.getSortedValues();
        double double3 = descriptiveStatistics0.getGeometricMean();
        double double4 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        double double10 = descriptiveStatistics8.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getKurtosisImpl();
        descriptiveStatistics5.setVarianceImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics5.getMeanImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic13);
        double double15 = descriptiveStatistics0.getMin();
        double double16 = descriptiveStatistics0.getSkewness();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        double double10 = descriptiveStatistics0.getVariance();
        java.lang.Class<?> wildcardClass11 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass11);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass11);
        double double14 = descriptiveStatistics13.getMax();
        double double15 = descriptiveStatistics13.getKurtosis();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        double double19 = descriptiveStatistics16.getSum();
        double double20 = descriptiveStatistics16.getMin();
        double[] doubleArray21 = descriptiveStatistics16.getSortedValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        double double24 = descriptiveStatistics22.getMax();
        double double25 = descriptiveStatistics22.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics22.getMeanImpl();
        descriptiveStatistics16.setMaxImpl(univariateStatistic26);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        descriptiveStatistics29.setSumsqImpl(univariateStatistic32);
        descriptiveStatistics28.setVarianceImpl(univariateStatistic32);
        double double35 = descriptiveStatistics28.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics28.getMinImpl();
        double double37 = descriptiveStatistics28.getGeometricMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics28.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics28.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics28.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics28.getMinImpl();
        descriptiveStatistics16.setMeanImpl(univariateStatistic41);
        double double43 = descriptiveStatistics13.apply(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(descriptiveStatistics12);
        org.junit.Assert.assertNotNull(descriptiveStatistics13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics24.getSumImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        double double34 = descriptiveStatistics31.getSum();
        double double35 = descriptiveStatistics31.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics31.getGeometricMeanImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic36);
        double double38 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        java.lang.String str41 = descriptiveStatistics39.toString();
        double double42 = descriptiveStatistics39.getSum();
        long long43 = descriptiveStatistics39.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics39.getMeanImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic44);
        descriptiveStatistics0.clear();
        double double47 = descriptiveStatistics0.getStandardDeviation();
        long long48 = descriptiveStatistics0.getN();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str41, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        double[] doubleArray4 = descriptiveStatistics0.getValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics7.getSkewnessImpl();
        descriptiveStatistics5.setSkewnessImpl(univariateStatistic10);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = null;
        descriptiveStatistics12.setMaxImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double16 = descriptiveStatistics15.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics15.getMeanImpl();
        descriptiveStatistics12.setMeanImpl(univariateStatistic17);
        descriptiveStatistics5.setKurtosisImpl(univariateStatistic17);
        double double20 = descriptiveStatistics5.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        descriptiveStatistics21.setVarianceImpl(univariateStatistic27);
        descriptiveStatistics5.setKurtosisImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics5.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics5.getGeometricMeanImpl();
        double double32 = descriptiveStatistics5.getMin();
        int int33 = descriptiveStatistics5.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics5.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics5.getMeanImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic35);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        java.lang.String str39 = descriptiveStatistics37.toString();
        double double40 = descriptiveStatistics37.getSum();
        double double41 = descriptiveStatistics37.getMin();
        descriptiveStatistics37.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        java.lang.String str45 = descriptiveStatistics43.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        double double48 = descriptiveStatistics46.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics46.getKurtosisImpl();
        descriptiveStatistics43.setVarianceImpl(univariateStatistic49);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics43.getMeanImpl();
        double double52 = descriptiveStatistics43.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics43.getSumImpl();
        double double54 = descriptiveStatistics37.apply(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics37.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics56 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics56.getKurtosisImpl();
        java.lang.String str58 = descriptiveStatistics56.toString();
        double double59 = descriptiveStatistics56.getSum();
        double double60 = descriptiveStatistics56.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics61 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics61.getKurtosisImpl();
        double double63 = descriptiveStatistics61.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics61.getKurtosisImpl();
        descriptiveStatistics56.setMinImpl(univariateStatistic64);
        double double66 = descriptiveStatistics56.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = descriptiveStatistics56.getSkewnessImpl();
        descriptiveStatistics37.setKurtosisImpl(univariateStatistic67);
        double double69 = descriptiveStatistics37.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics37.getPercentileImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic70);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str39, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str45, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str58, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(univariateStatistic67);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(univariateStatistic70);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMean();
        long long6 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getMaxImpl();
        double double8 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        java.lang.String str13 = descriptiveStatistics11.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics11.getSkewnessImpl();
        descriptiveStatistics9.setSkewnessImpl(univariateStatistic14);
        double double16 = descriptiveStatistics9.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        java.lang.String str19 = descriptiveStatistics17.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics17.getSkewnessImpl();
        descriptiveStatistics9.setMeanImpl(univariateStatistic20);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getSumsqImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str13, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str19, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic23);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics12.getSkewnessImpl();
        descriptiveStatistics10.setSkewnessImpl(univariateStatistic15);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = null;
        descriptiveStatistics17.setMaxImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double21 = descriptiveStatistics20.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics20.getMeanImpl();
        descriptiveStatistics17.setMeanImpl(univariateStatistic22);
        descriptiveStatistics10.setKurtosisImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics10.getSumImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic25);
        double double27 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.setWindowSize((-1));
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        java.lang.String str10 = descriptiveStatistics8.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getSkewnessImpl();
        descriptiveStatistics6.setSkewnessImpl(univariateStatistic11);
        double double13 = descriptiveStatistics6.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        java.lang.String str16 = descriptiveStatistics14.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics14.getSkewnessImpl();
        descriptiveStatistics6.setMeanImpl(univariateStatistic17);
        double double19 = descriptiveStatistics0.apply(univariateStatistic17);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(1);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics22.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        double double28 = descriptiveStatistics25.getSum();
        double double29 = descriptiveStatistics25.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        double double32 = descriptiveStatistics30.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics30.getKurtosisImpl();
        descriptiveStatistics25.setMinImpl(univariateStatistic33);
        java.lang.Class<?> wildcardClass35 = descriptiveStatistics25.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass35);
        double double37 = descriptiveStatistics36.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics36.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getVarianceImpl();
        descriptiveStatistics36.setKurtosisImpl(univariateStatistic40);
        descriptiveStatistics22.setKurtosisImpl(univariateStatistic40);
        double double43 = descriptiveStatistics22.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics22.getSumsqImpl();
        double double45 = descriptiveStatistics22.getVariance();
        double double46 = descriptiveStatistics22.getMin();
        double double47 = descriptiveStatistics22.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics22.getSkewnessImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str16, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(descriptiveStatistics36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(descriptiveStatistics39);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        int int2 = descriptiveStatistics1.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics1.getMeanImpl();
        double double4 = descriptiveStatistics1.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics1.getVarianceImpl();
        double double6 = descriptiveStatistics1.getGeometricMean();
        double double7 = descriptiveStatistics1.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        java.lang.String str10 = descriptiveStatistics8.toString();
        double double11 = descriptiveStatistics8.getSum();
        double double12 = descriptiveStatistics8.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics8.setMinImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        java.lang.String str20 = descriptiveStatistics18.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        double double23 = descriptiveStatistics21.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics21.getKurtosisImpl();
        descriptiveStatistics18.setVarianceImpl(univariateStatistic24);
        descriptiveStatistics8.setSumImpl(univariateStatistic24);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics8.getSumImpl();
        double double29 = descriptiveStatistics8.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics8.getPercentileImpl();
        double double31 = descriptiveStatistics8.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics8.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics8.getMinImpl();
        descriptiveStatistics1.setMaxImpl(univariateStatistic33);
        double double35 = descriptiveStatistics1.getMean();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str20, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        java.lang.String str5 = descriptiveStatistics0.toString();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getPercentileImpl();
        descriptiveStatistics7.setGeometricMeanImpl(univariateStatistic20);
        double double22 = descriptiveStatistics0.apply(univariateStatistic20);
        double double23 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        java.lang.String str26 = descriptiveStatistics24.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics27.getKurtosisImpl();
        double double29 = descriptiveStatistics27.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics27.getKurtosisImpl();
        descriptiveStatistics24.setVarianceImpl(univariateStatistic30);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics24.getPercentileImpl();
        double double33 = descriptiveStatistics24.getGeometricMean();
        descriptiveStatistics24.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        double[] doubleArray38 = descriptiveStatistics36.getSortedValues();
        descriptiveStatistics36.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics36.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = null;
        descriptiveStatistics42.setMaxImpl(univariateStatistic43);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        double double47 = descriptiveStatistics45.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics45.getKurtosisImpl();
        descriptiveStatistics42.setMaxImpl(univariateStatistic48);
        descriptiveStatistics36.setMinImpl(univariateStatistic48);
        descriptiveStatistics24.setKurtosisImpl(univariateStatistic48);
        descriptiveStatistics0.setSumImpl(univariateStatistic48);
        descriptiveStatistics0.addValue(10.0d);
        double double55 = descriptiveStatistics0.getGeometricMean();
        double double56 = descriptiveStatistics0.getKurtosis();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str5, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str26, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.000000000000002d + "'", double55 == 10.000000000000002d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        java.lang.String str9 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getVarianceImpl();
        double double12 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getPercentileImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = null;
        descriptiveStatistics0.setMeanImpl(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getMaxImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic23);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        descriptiveStatistics4.setSumsqImpl(univariateStatistic7);
        double double9 = descriptiveStatistics4.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics4.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic10);
        double double12 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        java.lang.String str15 = descriptiveStatistics13.toString();
        double double16 = descriptiveStatistics13.getSum();
        double double17 = descriptiveStatistics13.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics13.setMinImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics13.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics13.getSumsqImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic24);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics0.getMaxImpl();
        double[] doubleArray27 = descriptiveStatistics0.getSortedValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str15, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getSumImpl();
        double double11 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        java.lang.String str15 = descriptiveStatistics13.toString();
        double double16 = descriptiveStatistics13.getSum();
        double double17 = descriptiveStatistics13.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics13.setMinImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        java.lang.String str25 = descriptiveStatistics23.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        double double28 = descriptiveStatistics26.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics23.setVarianceImpl(univariateStatistic29);
        descriptiveStatistics13.setSumImpl(univariateStatistic29);
        double double32 = descriptiveStatistics13.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics33.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        descriptiveStatistics33.setSumsqImpl(univariateStatistic36);
        double double38 = descriptiveStatistics33.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics33.getSkewnessImpl();
        descriptiveStatistics13.setSkewnessImpl(univariateStatistic39);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        descriptiveStatistics41.setSumsqImpl(univariateStatistic44);
        double double46 = descriptiveStatistics41.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics41.getSkewnessImpl();
        descriptiveStatistics13.setKurtosisImpl(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        double[] doubleArray51 = descriptiveStatistics49.getSortedValues();
        double double52 = descriptiveStatistics49.getGeometricMean();
        double double53 = descriptiveStatistics49.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics54.getKurtosisImpl();
        java.lang.String str56 = descriptiveStatistics54.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        double double59 = descriptiveStatistics57.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics57.getKurtosisImpl();
        descriptiveStatistics54.setVarianceImpl(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics54.getMeanImpl();
        descriptiveStatistics49.setMeanImpl(univariateStatistic62);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics49.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics49.getSumsqImpl();
        descriptiveStatistics13.setSumsqImpl(univariateStatistic65);
        descriptiveStatistics0.setMaxImpl(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str15, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str25, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str56, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertNotNull(univariateStatistic65);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getStandardDeviation();
        double double11 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics0.getVarianceImpl();
        double double13 = descriptiveStatistics0.getMax();
        int int14 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        double double18 = descriptiveStatistics15.getSum();
        double double19 = descriptiveStatistics15.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        double double22 = descriptiveStatistics20.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics20.getKurtosisImpl();
        descriptiveStatistics15.setMinImpl(univariateStatistic23);
        java.lang.Class<?> wildcardClass25 = descriptiveStatistics15.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass25);
        double double27 = descriptiveStatistics26.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics26.getMeanImpl();
        double double29 = descriptiveStatistics26.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        java.lang.String str32 = descriptiveStatistics30.toString();
        double double33 = descriptiveStatistics30.getSum();
        double double34 = descriptiveStatistics30.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        double double37 = descriptiveStatistics35.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics35.getKurtosisImpl();
        descriptiveStatistics30.setMinImpl(univariateStatistic38);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics40 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics40.getKurtosisImpl();
        java.lang.String str42 = descriptiveStatistics40.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        double double45 = descriptiveStatistics43.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics43.getKurtosisImpl();
        descriptiveStatistics40.setVarianceImpl(univariateStatistic46);
        descriptiveStatistics30.setSumImpl(univariateStatistic46);
        descriptiveStatistics26.setSkewnessImpl(univariateStatistic46);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics26.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = null;
        descriptiveStatistics26.setVarianceImpl(univariateStatistic51);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics26.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics26.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(descriptiveStatistics26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str32, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str42, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNull(univariateStatistic54);
        org.junit.Assert.assertNotNull(univariateStatistic55);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getStandardDeviation();
        double double11 = descriptiveStatistics0.getMin();
        double double12 = descriptiveStatistics0.getVariance();
        double double13 = descriptiveStatistics0.getSkewness();
        double double14 = descriptiveStatistics0.getSum();
        double double15 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        double double19 = descriptiveStatistics16.getSum();
        long long20 = descriptiveStatistics16.getN();
        double double21 = descriptiveStatistics16.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics16.getMaxImpl();
        descriptiveStatistics16.clear();
        double[] doubleArray24 = descriptiveStatistics16.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics16.getPercentileImpl();
        double[] doubleArray26 = descriptiveStatistics16.getSortedValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics27.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        java.lang.String str31 = descriptiveStatistics29.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getSkewnessImpl();
        descriptiveStatistics27.setSkewnessImpl(univariateStatistic32);
        double double34 = descriptiveStatistics27.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = null;
        descriptiveStatistics35.setMaxImpl(univariateStatistic36);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double39 = descriptiveStatistics38.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics38.getMeanImpl();
        descriptiveStatistics35.setMeanImpl(univariateStatistic40);
        descriptiveStatistics27.setMeanImpl(univariateStatistic40);
        descriptiveStatistics27.clear();
        double double44 = descriptiveStatistics27.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics47 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics47.getKurtosisImpl();
        descriptiveStatistics45.setSumsqImpl(univariateStatistic48);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics45.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics45.getMeanImpl();
        descriptiveStatistics45.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics45.getGeometricMeanImpl();
        descriptiveStatistics27.setSkewnessImpl(univariateStatistic53);
        descriptiveStatistics16.setSumImpl(univariateStatistic53);
        descriptiveStatistics0.setMeanImpl(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics0.getSkewnessImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str31, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic57);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        java.lang.String str8 = descriptiveStatistics6.toString();
        double double9 = descriptiveStatistics6.getSum();
        double double10 = descriptiveStatistics6.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        double double13 = descriptiveStatistics11.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics11.getKurtosisImpl();
        descriptiveStatistics6.setMinImpl(univariateStatistic14);
        double double16 = descriptiveStatistics6.getKurtosis();
        double double17 = descriptiveStatistics6.getMean();
        double double18 = descriptiveStatistics6.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics6.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics6.getPercentileImpl();
        double[] doubleArray21 = descriptiveStatistics6.getValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getVarianceImpl();
        double double24 = descriptiveStatistics22.getMax();
        double double25 = descriptiveStatistics22.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        java.lang.String str30 = descriptiveStatistics28.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics28.getSkewnessImpl();
        descriptiveStatistics26.setSkewnessImpl(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = null;
        descriptiveStatistics33.setMaxImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double37 = descriptiveStatistics36.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics36.getMeanImpl();
        descriptiveStatistics33.setMeanImpl(univariateStatistic38);
        descriptiveStatistics26.setKurtosisImpl(univariateStatistic38);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        java.lang.String str43 = descriptiveStatistics41.toString();
        double double44 = descriptiveStatistics41.getSum();
        double double45 = descriptiveStatistics41.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        double double48 = descriptiveStatistics46.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics46.getKurtosisImpl();
        descriptiveStatistics41.setMinImpl(univariateStatistic49);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics51 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics51.getKurtosisImpl();
        java.lang.String str53 = descriptiveStatistics51.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics54.getKurtosisImpl();
        double double56 = descriptiveStatistics54.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics54.getKurtosisImpl();
        descriptiveStatistics51.setVarianceImpl(univariateStatistic57);
        descriptiveStatistics41.setSumImpl(univariateStatistic57);
        double double60 = descriptiveStatistics41.getSum();
        descriptiveStatistics41.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics62.getKurtosisImpl();
        java.lang.String str64 = descriptiveStatistics62.toString();
        double double65 = descriptiveStatistics62.getSum();
        long long66 = descriptiveStatistics62.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics67 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics67.getKurtosisImpl();
        java.lang.String str69 = descriptiveStatistics67.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics70 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics70.getKurtosisImpl();
        double double72 = descriptiveStatistics70.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics70.getKurtosisImpl();
        descriptiveStatistics67.setVarianceImpl(univariateStatistic73);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics67.getPercentileImpl();
        descriptiveStatistics62.setGeometricMeanImpl(univariateStatistic75);
        descriptiveStatistics41.setPercentileImpl(univariateStatistic75);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics78 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics78.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics80 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics80.getKurtosisImpl();
        descriptiveStatistics78.setSumsqImpl(univariateStatistic81);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic83 = descriptiveStatistics78.getPercentileImpl();
        descriptiveStatistics41.setGeometricMeanImpl(univariateStatistic83);
        descriptiveStatistics26.setMinImpl(univariateStatistic83);
        descriptiveStatistics22.setMeanImpl(univariateStatistic83);
        descriptiveStatistics6.setMaxImpl(univariateStatistic83);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic83);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str8, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertNotNull(descriptiveStatistics22);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str30, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str43, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str53, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str64, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str69, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertNotNull(univariateStatistic81);
        org.junit.Assert.assertNotNull(univariateStatistic83);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMeanImpl();
        double double7 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        java.lang.String str10 = descriptiveStatistics8.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        double double13 = descriptiveStatistics11.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics11.getKurtosisImpl();
        descriptiveStatistics8.setVarianceImpl(univariateStatistic14);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics8.getPercentileImpl();
        double double17 = descriptiveStatistics8.getGeometricMean();
        descriptiveStatistics8.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        double[] doubleArray22 = descriptiveStatistics20.getSortedValues();
        descriptiveStatistics20.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics20.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = null;
        descriptiveStatistics26.setMaxImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        double double31 = descriptiveStatistics29.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics26.setMaxImpl(univariateStatistic32);
        descriptiveStatistics20.setMinImpl(univariateStatistic32);
        descriptiveStatistics8.setKurtosisImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        java.lang.String str40 = descriptiveStatistics38.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics38.getSkewnessImpl();
        descriptiveStatistics36.setSkewnessImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = null;
        descriptiveStatistics43.setMaxImpl(univariateStatistic44);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double47 = descriptiveStatistics46.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics46.getMeanImpl();
        descriptiveStatistics43.setMeanImpl(univariateStatistic48);
        descriptiveStatistics36.setKurtosisImpl(univariateStatistic48);
        double double51 = descriptiveStatistics36.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        java.lang.String str54 = descriptiveStatistics52.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics55 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics55.getKurtosisImpl();
        double double57 = descriptiveStatistics55.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics55.getKurtosisImpl();
        descriptiveStatistics52.setVarianceImpl(univariateStatistic58);
        descriptiveStatistics36.setKurtosisImpl(univariateStatistic58);
        descriptiveStatistics8.setMinImpl(univariateStatistic58);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics63 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics63.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics65 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics65.getKurtosisImpl();
        descriptiveStatistics63.setSumsqImpl(univariateStatistic66);
        descriptiveStatistics62.setVarianceImpl(univariateStatistic66);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics62.getPercentileImpl();
        descriptiveStatistics8.setMinImpl(univariateStatistic69);
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic69);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic72 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = null;
        // The following exception was thrown during execution in test generation
        try {
            descriptiveStatistics0.setPercentileImpl(univariateStatistic73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str40, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str54, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertNotNull(univariateStatistic72);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        double double10 = descriptiveStatistics0.getPercentile((double) 100L);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getKurtosisImpl();
        double double12 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getMinImpl();
        double double14 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics0.getMeanImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        java.lang.String str6 = descriptiveStatistics4.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics4.getSkewnessImpl();
        descriptiveStatistics2.setSkewnessImpl(univariateStatistic7);
        double double9 = descriptiveStatistics2.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = null;
        descriptiveStatistics10.setMaxImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double14 = descriptiveStatistics13.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics13.getMeanImpl();
        descriptiveStatistics10.setMeanImpl(univariateStatistic15);
        descriptiveStatistics2.setMeanImpl(univariateStatistic15);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic15);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics21.getSkewnessImpl();
        descriptiveStatistics19.setSkewnessImpl(univariateStatistic24);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = null;
        descriptiveStatistics26.setMaxImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double30 = descriptiveStatistics29.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics29.getMeanImpl();
        descriptiveStatistics26.setMeanImpl(univariateStatistic31);
        descriptiveStatistics19.setKurtosisImpl(univariateStatistic31);
        double double34 = descriptiveStatistics19.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        java.lang.String str37 = descriptiveStatistics35.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        double double40 = descriptiveStatistics38.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics38.getKurtosisImpl();
        descriptiveStatistics35.setVarianceImpl(univariateStatistic41);
        descriptiveStatistics19.setKurtosisImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics19.getPercentileImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic44);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics0.getMeanImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str6, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str37, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic46);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.clear();
        double double21 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getGeometricMeanImpl();
        double[] doubleArray23 = descriptiveStatistics0.getValues();
        double double24 = descriptiveStatistics0.getMean();
        double double25 = descriptiveStatistics0.getMean();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics20.setSumsqImpl(univariateStatistic23);
        double double25 = descriptiveStatistics20.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics20.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic26);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        descriptiveStatistics28.setSumsqImpl(univariateStatistic31);
        double double33 = descriptiveStatistics28.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics28.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics0.getSumsqImpl();
        int int38 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        descriptiveStatistics43.setSumsqImpl(univariateStatistic46);
        double double48 = descriptiveStatistics43.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics43.getSkewnessImpl();
        descriptiveStatistics39.setKurtosisImpl(univariateStatistic49);
        double double51 = descriptiveStatistics39.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        java.lang.String str54 = descriptiveStatistics52.toString();
        double double55 = descriptiveStatistics52.getSum();
        double double56 = descriptiveStatistics52.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        double double59 = descriptiveStatistics57.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics57.getKurtosisImpl();
        descriptiveStatistics52.setMinImpl(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics52.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics52.getSumsqImpl();
        descriptiveStatistics39.setSumImpl(univariateStatistic63);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics39.getMaxImpl();
        descriptiveStatistics39.addValue(100.0d);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics68 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics68.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics70 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics70.getKurtosisImpl();
        java.lang.String str72 = descriptiveStatistics70.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics70.getSkewnessImpl();
        descriptiveStatistics68.setSkewnessImpl(univariateStatistic73);
        double double75 = descriptiveStatistics68.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics76 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = null;
        descriptiveStatistics76.setMaxImpl(univariateStatistic77);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics79 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double80 = descriptiveStatistics79.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics79.getMeanImpl();
        descriptiveStatistics76.setMeanImpl(univariateStatistic81);
        descriptiveStatistics68.setVarianceImpl(univariateStatistic81);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic84 = descriptiveStatistics68.getMinImpl();
        descriptiveStatistics39.setSumImpl(univariateStatistic84);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic84);
        double double87 = descriptiveStatistics0.getStandardDeviation();
        double[] doubleArray88 = descriptiveStatistics0.getValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str54, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str72, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(univariateStatistic81);
        org.junit.Assert.assertNotNull(univariateStatistic84);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getSkewness();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = descriptiveStatistics0.getElement((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 0 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics((int) (byte) 10);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = descriptiveStatistics1.getSumImpl();
        double double3 = descriptiveStatistics1.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics1.getSumsqImpl();
        org.junit.Assert.assertNotNull(univariateStatistic2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic4);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getStandardDeviation();
        double double20 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getSumImpl();
        double double23 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics26.getSkewnessImpl();
        descriptiveStatistics24.setSkewnessImpl(univariateStatistic29);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = null;
        descriptiveStatistics31.setMaxImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double35 = descriptiveStatistics34.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics34.getMeanImpl();
        descriptiveStatistics31.setMeanImpl(univariateStatistic36);
        descriptiveStatistics24.setKurtosisImpl(univariateStatistic36);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        java.lang.String str41 = descriptiveStatistics39.toString();
        double double42 = descriptiveStatistics39.getSum();
        double double43 = descriptiveStatistics39.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        double double46 = descriptiveStatistics44.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics44.getKurtosisImpl();
        descriptiveStatistics39.setMinImpl(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        java.lang.String str51 = descriptiveStatistics49.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        double double54 = descriptiveStatistics52.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics52.getKurtosisImpl();
        descriptiveStatistics49.setVarianceImpl(univariateStatistic55);
        descriptiveStatistics39.setSumImpl(univariateStatistic55);
        double double58 = descriptiveStatistics39.getSum();
        descriptiveStatistics39.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics60.getKurtosisImpl();
        java.lang.String str62 = descriptiveStatistics60.toString();
        double double63 = descriptiveStatistics60.getSum();
        long long64 = descriptiveStatistics60.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics65 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics65.getKurtosisImpl();
        java.lang.String str67 = descriptiveStatistics65.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics68 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics68.getKurtosisImpl();
        double double70 = descriptiveStatistics68.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics68.getKurtosisImpl();
        descriptiveStatistics65.setVarianceImpl(univariateStatistic71);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics65.getPercentileImpl();
        descriptiveStatistics60.setGeometricMeanImpl(univariateStatistic73);
        descriptiveStatistics39.setPercentileImpl(univariateStatistic73);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics76 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics76.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics78 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics78.getKurtosisImpl();
        descriptiveStatistics76.setSumsqImpl(univariateStatistic79);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics76.getPercentileImpl();
        descriptiveStatistics39.setGeometricMeanImpl(univariateStatistic81);
        descriptiveStatistics24.setMinImpl(univariateStatistic81);
        long long84 = descriptiveStatistics24.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic85 = descriptiveStatistics24.getGeometricMeanImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic85);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str41, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str51, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str62, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str67, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertNotNull(univariateStatistic81);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic85);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        double double5 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        descriptiveStatistics8.setSumsqImpl(univariateStatistic11);
        descriptiveStatistics7.setVarianceImpl(univariateStatistic11);
        double double14 = descriptiveStatistics7.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics7.getMinImpl();
        double double16 = descriptiveStatistics7.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics17.setSumsqImpl(univariateStatistic20);
        double double22 = descriptiveStatistics17.getMean();
        long long23 = descriptiveStatistics17.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics17.getMaxImpl();
        descriptiveStatistics7.setMaxImpl(univariateStatistic24);
        descriptiveStatistics0.setMeanImpl(univariateStatistic24);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics0.getMaxImpl();
        long long28 = descriptiveStatistics0.getN();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        double double11 = descriptiveStatistics7.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        double double14 = descriptiveStatistics12.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics12.getKurtosisImpl();
        descriptiveStatistics7.setMinImpl(univariateStatistic15);
        double double17 = descriptiveStatistics7.getStandardDeviation();
        double double18 = descriptiveStatistics7.getVariance();
        long long19 = descriptiveStatistics7.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics7.getMeanImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic20);
        long long22 = descriptiveStatistics0.getN();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getMax();
        double double3 = descriptiveStatistics0.getSumsq();
        double double4 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        double double8 = descriptiveStatistics5.getSum();
        long long9 = descriptiveStatistics5.getN();
        java.lang.String str10 = descriptiveStatistics5.toString();
        int int11 = descriptiveStatistics5.getWindowSize();
        long long12 = descriptiveStatistics5.getN();
        int int13 = descriptiveStatistics5.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        java.lang.String str16 = descriptiveStatistics14.toString();
        double double17 = descriptiveStatistics14.getSum();
        long long18 = descriptiveStatistics14.getN();
        double double19 = descriptiveStatistics14.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics14.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics14.getMeanImpl();
        descriptiveStatistics5.setMeanImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics25.getSkewnessImpl();
        descriptiveStatistics23.setSkewnessImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = null;
        descriptiveStatistics30.setMaxImpl(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double34 = descriptiveStatistics33.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics33.getMeanImpl();
        descriptiveStatistics30.setMeanImpl(univariateStatistic35);
        descriptiveStatistics23.setKurtosisImpl(univariateStatistic35);
        double double38 = descriptiveStatistics23.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        java.lang.String str41 = descriptiveStatistics39.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics42.getKurtosisImpl();
        double double44 = descriptiveStatistics42.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics42.getKurtosisImpl();
        descriptiveStatistics39.setVarianceImpl(univariateStatistic45);
        descriptiveStatistics23.setKurtosisImpl(univariateStatistic45);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        double[] doubleArray50 = descriptiveStatistics48.getSortedValues();
        descriptiveStatistics48.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics48.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = null;
        descriptiveStatistics54.setMaxImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        double double59 = descriptiveStatistics57.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics57.getKurtosisImpl();
        descriptiveStatistics54.setMaxImpl(univariateStatistic60);
        descriptiveStatistics48.setMinImpl(univariateStatistic60);
        descriptiveStatistics23.setSumImpl(univariateStatistic60);
        double double64 = descriptiveStatistics5.apply(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics5.getSkewnessImpl();
        double double66 = descriptiveStatistics0.apply(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str16, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str41, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getSkewnessImpl();
        double double4 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getSkewnessImpl();
        double double6 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        java.lang.String str12 = descriptiveStatistics7.toString();
        int int13 = descriptiveStatistics7.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics7.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics7.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        double double18 = descriptiveStatistics16.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics16.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics20.setSumsqImpl(univariateStatistic23);
        double double25 = descriptiveStatistics20.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics20.getSkewnessImpl();
        descriptiveStatistics16.setKurtosisImpl(univariateStatistic26);
        double double28 = descriptiveStatistics16.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        java.lang.String str31 = descriptiveStatistics29.toString();
        double double32 = descriptiveStatistics29.getSum();
        double double33 = descriptiveStatistics29.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        double double36 = descriptiveStatistics34.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics34.getKurtosisImpl();
        descriptiveStatistics29.setMinImpl(univariateStatistic37);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics29.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics29.getSumsqImpl();
        descriptiveStatistics16.setSumImpl(univariateStatistic40);
        descriptiveStatistics7.setMeanImpl(univariateStatistic40);
        descriptiveStatistics0.setMaxImpl(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str31, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic40);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        descriptiveStatistics0.clear();
        double[] doubleArray4 = descriptiveStatistics0.getSortedValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getSkewnessImpl();
        double double4 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getSkewnessImpl();
        double double6 = descriptiveStatistics0.getMean();
        descriptiveStatistics0.addValue((double) (-1));
        double[] doubleArray9 = descriptiveStatistics0.getSortedValues();
        double double10 = descriptiveStatistics0.getVariance();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        double double6 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getVarianceImpl();
        double double8 = descriptiveStatistics0.getSum();
        // The following exception was thrown during execution in test generation
        try {
            double double10 = descriptiveStatistics0.getElement(1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 1 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        double double5 = descriptiveStatistics2.getSum();
        double double6 = descriptiveStatistics2.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        double double9 = descriptiveStatistics7.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics7.getKurtosisImpl();
        descriptiveStatistics2.setMinImpl(univariateStatistic10);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        descriptiveStatistics2.setSumImpl(univariateStatistic18);
        double double21 = descriptiveStatistics2.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        descriptiveStatistics22.setSumsqImpl(univariateStatistic25);
        double double27 = descriptiveStatistics22.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics22.getSkewnessImpl();
        descriptiveStatistics2.setSkewnessImpl(univariateStatistic28);
        descriptiveStatistics1.setSkewnessImpl(univariateStatistic28);
        descriptiveStatistics1.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics1.getMinImpl();
        double[] doubleArray33 = descriptiveStatistics1.getValues();
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        long long25 = descriptiveStatistics21.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        double double31 = descriptiveStatistics29.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics26.setVarianceImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics26.getPercentileImpl();
        descriptiveStatistics21.setGeometricMeanImpl(univariateStatistic34);
        descriptiveStatistics0.setPercentileImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        java.lang.String str40 = descriptiveStatistics38.toString();
        double double41 = descriptiveStatistics38.getSum();
        double double42 = descriptiveStatistics38.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        double double45 = descriptiveStatistics43.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics43.getKurtosisImpl();
        descriptiveStatistics38.setMinImpl(univariateStatistic46);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        java.lang.String str50 = descriptiveStatistics48.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics51 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics51.getKurtosisImpl();
        double double53 = descriptiveStatistics51.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics51.getKurtosisImpl();
        descriptiveStatistics48.setVarianceImpl(univariateStatistic54);
        descriptiveStatistics38.setSumImpl(univariateStatistic54);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics38.getSumImpl();
        double double58 = descriptiveStatistics38.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics38.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics38.getMeanImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics62.getKurtosisImpl();
        double double64 = descriptiveStatistics62.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics62.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics66 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = descriptiveStatistics66.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics68 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics68.getKurtosisImpl();
        descriptiveStatistics66.setSumsqImpl(univariateStatistic69);
        double double71 = descriptiveStatistics66.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic72 = descriptiveStatistics66.getSkewnessImpl();
        descriptiveStatistics62.setKurtosisImpl(univariateStatistic72);
        double double74 = descriptiveStatistics62.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics75 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic76 = descriptiveStatistics75.getKurtosisImpl();
        java.lang.String str77 = descriptiveStatistics75.toString();
        double double78 = descriptiveStatistics75.getSum();
        double double79 = descriptiveStatistics75.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics80 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics80.getKurtosisImpl();
        double double82 = descriptiveStatistics80.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic83 = descriptiveStatistics80.getKurtosisImpl();
        descriptiveStatistics75.setMinImpl(univariateStatistic83);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic85 = descriptiveStatistics75.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic86 = descriptiveStatistics75.getSumsqImpl();
        descriptiveStatistics62.setSumImpl(univariateStatistic86);
        double[] doubleArray88 = descriptiveStatistics62.getSortedValues();
        double double89 = descriptiveStatistics62.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic90 = descriptiveStatistics62.getMeanImpl();
        double double91 = descriptiveStatistics62.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic92 = descriptiveStatistics62.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic93 = descriptiveStatistics62.getVarianceImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic93);
        double double95 = descriptiveStatistics0.getSum();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str40, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str50, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic67);
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(univariateStatistic72);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(univariateStatistic76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str77, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(univariateStatistic81);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(univariateStatistic83);
        org.junit.Assert.assertNotNull(univariateStatistic85);
        org.junit.Assert.assertNotNull(univariateStatistic86);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(univariateStatistic90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertNotNull(univariateStatistic92);
        org.junit.Assert.assertNotNull(univariateStatistic93);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getStandardDeviation();
        double double11 = descriptiveStatistics0.getMin();
        double double12 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics13.setSumsqImpl(univariateStatistic16);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        java.lang.String str21 = descriptiveStatistics19.toString();
        double double22 = descriptiveStatistics19.getSum();
        long long23 = descriptiveStatistics19.getN();
        java.lang.String str24 = descriptiveStatistics19.toString();
        double[] doubleArray25 = descriptiveStatistics19.getValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        double double29 = descriptiveStatistics26.getSum();
        long long30 = descriptiveStatistics26.getN();
        double double31 = descriptiveStatistics26.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics26.getMaxImpl();
        descriptiveStatistics19.setSumImpl(univariateStatistic32);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        java.lang.String str38 = descriptiveStatistics36.toString();
        double double39 = descriptiveStatistics36.getSum();
        double double40 = descriptiveStatistics36.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        double double43 = descriptiveStatistics41.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics41.getKurtosisImpl();
        descriptiveStatistics36.setMinImpl(univariateStatistic44);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics36.getMaxImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic46);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        java.lang.String str51 = descriptiveStatistics49.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        double double54 = descriptiveStatistics52.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics52.getKurtosisImpl();
        descriptiveStatistics49.setVarianceImpl(univariateStatistic55);
        descriptiveStatistics49.addValue((double) 1);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics59 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics59.getKurtosisImpl();
        java.lang.String str61 = descriptiveStatistics59.toString();
        double double62 = descriptiveStatistics59.getSum();
        double double63 = descriptiveStatistics59.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics64 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics64.getKurtosisImpl();
        double double66 = descriptiveStatistics64.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = descriptiveStatistics64.getKurtosisImpl();
        descriptiveStatistics59.setMinImpl(univariateStatistic67);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics69 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics69.getKurtosisImpl();
        java.lang.String str71 = descriptiveStatistics69.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics72 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics72.getKurtosisImpl();
        double double74 = descriptiveStatistics72.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics72.getKurtosisImpl();
        descriptiveStatistics69.setVarianceImpl(univariateStatistic75);
        descriptiveStatistics59.setSumImpl(univariateStatistic75);
        double double78 = descriptiveStatistics59.getSum();
        descriptiveStatistics59.clear();
        double double80 = descriptiveStatistics59.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics59.getGeometricMeanImpl();
        descriptiveStatistics49.setVarianceImpl(univariateStatistic81);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic81);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str21, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str24, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str38, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str51, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str61, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(univariateStatistic67);
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str71, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(univariateStatistic81);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        java.lang.String str3 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        double double6 = descriptiveStatistics4.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        descriptiveStatistics8.setSumsqImpl(univariateStatistic11);
        double double13 = descriptiveStatistics8.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics8.getSkewnessImpl();
        descriptiveStatistics4.setKurtosisImpl(univariateStatistic14);
        double double16 = descriptiveStatistics4.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        java.lang.String str19 = descriptiveStatistics17.toString();
        double double20 = descriptiveStatistics17.getSum();
        double double21 = descriptiveStatistics17.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        double double24 = descriptiveStatistics22.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics17.setMinImpl(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics17.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics17.getSumsqImpl();
        descriptiveStatistics4.setSumImpl(univariateStatistic28);
        double double30 = descriptiveStatistics4.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics4.getMaxImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic31);
        double[] doubleArray33 = descriptiveStatistics0.getValues();
        descriptiveStatistics0.clear();
        double double35 = descriptiveStatistics0.getSumsq();
        double double36 = descriptiveStatistics0.getKurtosis();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str3, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str19, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getSumImpl();
        double double11 = descriptiveStatistics0.getSum();
        double[] doubleArray12 = descriptiveStatistics0.getSortedValues();
        double double14 = descriptiveStatistics0.getPercentile(Double.NaN);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        double double5 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics0.getGeometricMeanImpl();
        double double8 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getMaxImpl();
        java.lang.String str10 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        java.lang.String str15 = descriptiveStatistics13.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getSkewnessImpl();
        descriptiveStatistics11.setSkewnessImpl(univariateStatistic16);
        double double18 = descriptiveStatistics11.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics11.getMinImpl();
        double double21 = descriptiveStatistics11.getPercentile((double) 100L);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        descriptiveStatistics22.setSumsqImpl(univariateStatistic25);
        double double27 = descriptiveStatistics22.getMean();
        long long28 = descriptiveStatistics22.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics22.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics22.getVarianceImpl();
        descriptiveStatistics11.setSumImpl(univariateStatistic30);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics32 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics32.getKurtosisImpl();
        java.lang.String str34 = descriptiveStatistics32.toString();
        double double35 = descriptiveStatistics32.getSum();
        long long36 = descriptiveStatistics32.getN();
        java.lang.String str37 = descriptiveStatistics32.toString();
        int int38 = descriptiveStatistics32.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        java.lang.String str41 = descriptiveStatistics39.toString();
        double double42 = descriptiveStatistics39.getSum();
        long long43 = descriptiveStatistics39.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        java.lang.String str46 = descriptiveStatistics44.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics47 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics47.getKurtosisImpl();
        double double49 = descriptiveStatistics47.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics47.getKurtosisImpl();
        descriptiveStatistics44.setVarianceImpl(univariateStatistic50);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics44.getPercentileImpl();
        descriptiveStatistics39.setGeometricMeanImpl(univariateStatistic52);
        double double54 = descriptiveStatistics32.apply(univariateStatistic52);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics32.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics56 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics56.getKurtosisImpl();
        double double58 = descriptiveStatistics56.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics56.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics56.getSumImpl();
        descriptiveStatistics32.setMaxImpl(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics62.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = null;
        descriptiveStatistics62.setMinImpl(univariateStatistic64);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics62.getMinImpl();
        double double67 = descriptiveStatistics62.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics62.getSkewnessImpl();
        descriptiveStatistics32.setSumsqImpl(univariateStatistic68);
        descriptiveStatistics11.setSkewnessImpl(univariateStatistic68);
        descriptiveStatistics0.setMeanImpl(univariateStatistic68);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics72 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics72.getKurtosisImpl();
        java.lang.String str74 = descriptiveStatistics72.toString();
        double double75 = descriptiveStatistics72.getSum();
        double double76 = descriptiveStatistics72.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics77 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic78 = descriptiveStatistics77.getKurtosisImpl();
        double double79 = descriptiveStatistics77.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic80 = descriptiveStatistics77.getKurtosisImpl();
        descriptiveStatistics72.setMinImpl(univariateStatistic80);
        double double82 = descriptiveStatistics72.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic83 = descriptiveStatistics72.getSkewnessImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic83);
        java.lang.Class<?> wildcardClass85 = univariateStatistic83.getClass();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str15, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str34, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str37, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str41, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str46, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNull(univariateStatistic66);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str74, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(univariateStatistic78);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(univariateStatistic80);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(univariateStatistic83);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        double double10 = descriptiveStatistics0.getPercentile((double) 100L);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics11.setSumsqImpl(univariateStatistic14);
        double double16 = descriptiveStatistics11.getMean();
        long long17 = descriptiveStatistics11.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics11.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics11.getVarianceImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic19);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        long long25 = descriptiveStatistics21.getN();
        java.lang.String str26 = descriptiveStatistics21.toString();
        int int27 = descriptiveStatistics21.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        java.lang.String str30 = descriptiveStatistics28.toString();
        double double31 = descriptiveStatistics28.getSum();
        long long32 = descriptiveStatistics28.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics33 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics33.getKurtosisImpl();
        java.lang.String str35 = descriptiveStatistics33.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        double double38 = descriptiveStatistics36.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics36.getKurtosisImpl();
        descriptiveStatistics33.setVarianceImpl(univariateStatistic39);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics33.getPercentileImpl();
        descriptiveStatistics28.setGeometricMeanImpl(univariateStatistic41);
        double double43 = descriptiveStatistics21.apply(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics21.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        double double47 = descriptiveStatistics45.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics45.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics45.getSumImpl();
        descriptiveStatistics21.setMaxImpl(univariateStatistic49);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics51 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics51.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = null;
        descriptiveStatistics51.setMinImpl(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics51.getMinImpl();
        double double56 = descriptiveStatistics51.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics51.getSkewnessImpl();
        descriptiveStatistics21.setSumsqImpl(univariateStatistic57);
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic57);
        long long60 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics0.getGeometricMeanImpl();
        double double62 = descriptiveStatistics0.getMin();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str26, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str30, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str35, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        java.lang.Class<?> wildcardClass10 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass10);
        double double12 = descriptiveStatistics11.getKurtosis();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics13.setSumsqImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics13.setVarianceImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics25.getSkewnessImpl();
        descriptiveStatistics23.setSkewnessImpl(univariateStatistic28);
        double double30 = descriptiveStatistics23.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double32 = descriptiveStatistics31.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics31.getMeanImpl();
        descriptiveStatistics23.setGeometricMeanImpl(univariateStatistic33);
        descriptiveStatistics13.setMaxImpl(univariateStatistic33);
        descriptiveStatistics11.setKurtosisImpl(univariateStatistic33);
        double double37 = descriptiveStatistics11.getMean();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getGeometricMean();
        double double3 = descriptiveStatistics0.getStandardDeviation();
        descriptiveStatistics0.clear();
        descriptiveStatistics0.clear();
        int int6 = descriptiveStatistics0.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        double double11 = descriptiveStatistics7.getMin();
        descriptiveStatistics7.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        java.lang.String str15 = descriptiveStatistics13.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        double double18 = descriptiveStatistics16.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics16.getKurtosisImpl();
        descriptiveStatistics13.setVarianceImpl(univariateStatistic19);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics13.getMeanImpl();
        double double22 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics13.getSumImpl();
        double double24 = descriptiveStatistics7.apply(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics7.getSumImpl();
        double double26 = descriptiveStatistics7.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics27.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics27.setSumsqImpl(univariateStatistic30);
        double double32 = descriptiveStatistics27.getMean();
        long long33 = descriptiveStatistics27.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics27.getMaxImpl();
        descriptiveStatistics7.setSumsqImpl(univariateStatistic34);
        double double36 = descriptiveStatistics7.getMin();
        descriptiveStatistics7.addValue((double) (short) 10);
        double double39 = descriptiveStatistics7.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics7.getSumImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str15, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertNotNull(univariateStatistic40);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getGeometricMeanImpl();
        descriptiveStatistics0.setWindowSize((int) (byte) 1);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getVarianceImpl();
        double double10 = descriptiveStatistics8.getMax();
        double double11 = descriptiveStatistics8.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics8.getMeanImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic12);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        double double18 = descriptiveStatistics15.getSum();
        long long19 = descriptiveStatistics15.getN();
        java.lang.String str20 = descriptiveStatistics15.toString();
        int int21 = descriptiveStatistics15.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        java.lang.String str24 = descriptiveStatistics22.toString();
        double double25 = descriptiveStatistics22.getSum();
        long long26 = descriptiveStatistics22.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics27.getKurtosisImpl();
        java.lang.String str29 = descriptiveStatistics27.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        double double32 = descriptiveStatistics30.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics30.getKurtosisImpl();
        descriptiveStatistics27.setVarianceImpl(univariateStatistic33);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics27.getPercentileImpl();
        descriptiveStatistics22.setGeometricMeanImpl(univariateStatistic35);
        double double37 = descriptiveStatistics15.apply(univariateStatistic35);
        int int38 = descriptiveStatistics15.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics15.getSkewnessImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic39);
        double double42 = descriptiveStatistics0.getPercentile((double) 100);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(descriptiveStatistics8);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str20, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str24, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str29, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double1 = descriptiveStatistics0.getStandardDeviation();
        double double2 = descriptiveStatistics0.getKurtosis();
        descriptiveStatistics0.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        double double8 = descriptiveStatistics5.getSum();
        double double9 = descriptiveStatistics5.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        double double12 = descriptiveStatistics10.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics10.getKurtosisImpl();
        descriptiveStatistics5.setMinImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics15.setVarianceImpl(univariateStatistic21);
        descriptiveStatistics5.setSumImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics5.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics5.getMeanImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic25);
        java.lang.String str27 = descriptiveStatistics0.toString();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 1\nmin: 32.0\nmax: 32.0\nmean: 32.0\nstd dev: 0.0\nmedian: 32.0\nskewness: 32.0\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 1\nmin: 32.0\nmax: 32.0\nmean: 32.0\nstd dev: 0.0\nmedian: 32.0\nskewness: 32.0\nkurtosis: NaN\n");
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double21 = descriptiveStatistics0.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getPercentileImpl();
        double double23 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        java.lang.String str26 = descriptiveStatistics24.toString();
        double double27 = descriptiveStatistics24.getSum();
        double double28 = descriptiveStatistics24.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        double double31 = descriptiveStatistics29.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics24.setMinImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        double double39 = descriptiveStatistics37.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics37.getKurtosisImpl();
        descriptiveStatistics34.setVarianceImpl(univariateStatistic40);
        descriptiveStatistics24.setSumImpl(univariateStatistic40);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics24.getSumImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic43);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        double double47 = descriptiveStatistics45.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics45.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics45.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics45.getPercentileImpl();
        double double51 = descriptiveStatistics45.getVariance();
        double double52 = descriptiveStatistics45.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics45.getSkewnessImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic53);
        double double55 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str26, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        java.lang.String str9 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getVarianceImpl();
        double double12 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics17.setSumsqImpl(univariateStatistic20);
        double double22 = descriptiveStatistics17.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics17.getSkewnessImpl();
        descriptiveStatistics13.setKurtosisImpl(univariateStatistic23);
        double double25 = descriptiveStatistics13.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        double[] doubleArray28 = descriptiveStatistics26.getSortedValues();
        descriptiveStatistics26.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics26.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics32 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = null;
        descriptiveStatistics32.setMaxImpl(univariateStatistic33);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        double double37 = descriptiveStatistics35.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics35.getKurtosisImpl();
        descriptiveStatistics32.setMaxImpl(univariateStatistic38);
        descriptiveStatistics26.setMinImpl(univariateStatistic38);
        descriptiveStatistics13.setVarianceImpl(univariateStatistic38);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic38);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics0.getSumsqImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic43);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getMeanImpl();
        double double21 = descriptiveStatistics12.getStandardDeviation();
        double double22 = descriptiveStatistics12.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        java.lang.String str25 = descriptiveStatistics23.toString();
        double double26 = descriptiveStatistics23.getSum();
        long long27 = descriptiveStatistics23.getN();
        java.lang.String str28 = descriptiveStatistics23.toString();
        int int29 = descriptiveStatistics23.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        java.lang.String str32 = descriptiveStatistics30.toString();
        double double33 = descriptiveStatistics30.getSum();
        long long34 = descriptiveStatistics30.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        java.lang.String str37 = descriptiveStatistics35.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        double double40 = descriptiveStatistics38.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics38.getKurtosisImpl();
        descriptiveStatistics35.setVarianceImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics35.getPercentileImpl();
        descriptiveStatistics30.setGeometricMeanImpl(univariateStatistic43);
        double double45 = descriptiveStatistics23.apply(univariateStatistic43);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics23.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics47 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics47.getKurtosisImpl();
        double double49 = descriptiveStatistics47.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics47.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics47.getSumImpl();
        descriptiveStatistics23.setMaxImpl(univariateStatistic51);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics23.getMinImpl();
        descriptiveStatistics12.setMaxImpl(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics55 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics55.getKurtosisImpl();
        java.lang.String str57 = descriptiveStatistics55.toString();
        double double58 = descriptiveStatistics55.getSum();
        double double59 = descriptiveStatistics55.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics60.getKurtosisImpl();
        double double62 = descriptiveStatistics60.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics60.getKurtosisImpl();
        descriptiveStatistics55.setMinImpl(univariateStatistic63);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics65 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics65.getKurtosisImpl();
        java.lang.String str67 = descriptiveStatistics65.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics68 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics68.getKurtosisImpl();
        double double70 = descriptiveStatistics68.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics68.getKurtosisImpl();
        descriptiveStatistics65.setVarianceImpl(univariateStatistic71);
        descriptiveStatistics55.setSumImpl(univariateStatistic71);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic74 = descriptiveStatistics55.getSumImpl();
        double double76 = descriptiveStatistics55.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics55.getPercentileImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic77);
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic77);
        double double80 = descriptiveStatistics0.getMean();
        double double82 = descriptiveStatistics0.getPercentile(Double.NaN);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic83 = descriptiveStatistics0.getVarianceImpl();
        double double84 = descriptiveStatistics0.getMean();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str25, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str32, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str37, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str57, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str67, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertNotNull(univariateStatistic74);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(univariateStatistic83);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.clear();
        double double21 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        double[] doubleArray25 = descriptiveStatistics23.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics23.getSumsqImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic26);
        double double28 = descriptiveStatistics0.getSkewness();
        double double29 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray31 = descriptiveStatistics0.getValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        double double17 = descriptiveStatistics15.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic18);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics12.getMeanImpl();
        double double21 = descriptiveStatistics12.getStandardDeviation();
        double double22 = descriptiveStatistics12.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        java.lang.String str25 = descriptiveStatistics23.toString();
        double double26 = descriptiveStatistics23.getSum();
        long long27 = descriptiveStatistics23.getN();
        java.lang.String str28 = descriptiveStatistics23.toString();
        int int29 = descriptiveStatistics23.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        java.lang.String str32 = descriptiveStatistics30.toString();
        double double33 = descriptiveStatistics30.getSum();
        long long34 = descriptiveStatistics30.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        java.lang.String str37 = descriptiveStatistics35.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        double double40 = descriptiveStatistics38.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics38.getKurtosisImpl();
        descriptiveStatistics35.setVarianceImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics35.getPercentileImpl();
        descriptiveStatistics30.setGeometricMeanImpl(univariateStatistic43);
        double double45 = descriptiveStatistics23.apply(univariateStatistic43);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics23.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics47 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics47.getKurtosisImpl();
        double double49 = descriptiveStatistics47.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics47.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics47.getSumImpl();
        descriptiveStatistics23.setMaxImpl(univariateStatistic51);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics23.getMinImpl();
        descriptiveStatistics12.setMaxImpl(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics55 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics55.getKurtosisImpl();
        java.lang.String str57 = descriptiveStatistics55.toString();
        double double58 = descriptiveStatistics55.getSum();
        double double59 = descriptiveStatistics55.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics60.getKurtosisImpl();
        double double62 = descriptiveStatistics60.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics60.getKurtosisImpl();
        descriptiveStatistics55.setMinImpl(univariateStatistic63);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics65 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics65.getKurtosisImpl();
        java.lang.String str67 = descriptiveStatistics65.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics68 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics68.getKurtosisImpl();
        double double70 = descriptiveStatistics68.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics68.getKurtosisImpl();
        descriptiveStatistics65.setVarianceImpl(univariateStatistic71);
        descriptiveStatistics55.setSumImpl(univariateStatistic71);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic74 = descriptiveStatistics55.getSumImpl();
        double double76 = descriptiveStatistics55.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics55.getPercentileImpl();
        descriptiveStatistics12.setVarianceImpl(univariateStatistic77);
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic77);
        double double80 = descriptiveStatistics0.getMean();
        double double81 = descriptiveStatistics0.getGeometricMean();
        descriptiveStatistics0.addValue((double) 52);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str25, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str32, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str37, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str57, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str67, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertNotNull(univariateStatistic74);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getStandardDeviation();
        double double20 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        double[] doubleArray24 = descriptiveStatistics22.getSortedValues();
        double double25 = descriptiveStatistics22.getGeometricMean();
        double double26 = descriptiveStatistics22.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics27.getKurtosisImpl();
        java.lang.String str29 = descriptiveStatistics27.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        double double32 = descriptiveStatistics30.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics30.getKurtosisImpl();
        descriptiveStatistics27.setVarianceImpl(univariateStatistic33);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics27.getMeanImpl();
        descriptiveStatistics22.setMeanImpl(univariateStatistic35);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics22.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics22.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics22.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics22.getVarianceImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic40);
        double double42 = descriptiveStatistics0.getStandardDeviation();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str29, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics20.setSumsqImpl(univariateStatistic23);
        double double25 = descriptiveStatistics20.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics20.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic26);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        descriptiveStatistics28.setSumsqImpl(univariateStatistic31);
        double double33 = descriptiveStatistics28.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics28.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic34);
        double double36 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        java.lang.String str39 = descriptiveStatistics37.toString();
        double double40 = descriptiveStatistics37.getSum();
        double double41 = descriptiveStatistics37.getMin();
        descriptiveStatistics37.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        java.lang.String str45 = descriptiveStatistics43.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        double double48 = descriptiveStatistics46.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics46.getKurtosisImpl();
        descriptiveStatistics43.setVarianceImpl(univariateStatistic49);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics43.getMeanImpl();
        double double52 = descriptiveStatistics43.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics43.getSumImpl();
        double double54 = descriptiveStatistics37.apply(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics37.getSumImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic55);
        descriptiveStatistics0.addValue((double) '4');
        double double59 = descriptiveStatistics0.getSkewness();
        double double60 = descriptiveStatistics0.getMax();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str39, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str45, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double21 = descriptiveStatistics0.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getPercentileImpl();
        double double23 = descriptiveStatistics0.getSkewness();
        descriptiveStatistics0.addValue(1.0d);
        double[] doubleArray26 = descriptiveStatistics0.getValues();
        double double27 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        double double30 = descriptiveStatistics28.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics28.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics28.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics28.getPercentileImpl();
        double double34 = descriptiveStatistics28.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics28.getVarianceImpl();
        double double36 = descriptiveStatistics0.apply(univariateStatistic35);
        // The following exception was thrown during execution in test generation
        try {
            double double38 = descriptiveStatistics0.getElement((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: The index specified: 97 is larger than the current number of elements");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMeanImpl();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getGeometricMeanImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic9);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getStandardDeviation();
        double double11 = descriptiveStatistics0.getMin();
        double double12 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        descriptiveStatistics13.setSumsqImpl(univariateStatistic16);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        java.lang.String str21 = descriptiveStatistics19.toString();
        double double22 = descriptiveStatistics19.getSum();
        long long23 = descriptiveStatistics19.getN();
        java.lang.String str24 = descriptiveStatistics19.toString();
        double[] doubleArray25 = descriptiveStatistics19.getValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        double double29 = descriptiveStatistics26.getSum();
        long long30 = descriptiveStatistics26.getN();
        double double31 = descriptiveStatistics26.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics26.getMaxImpl();
        descriptiveStatistics19.setSumImpl(univariateStatistic32);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        double double37 = descriptiveStatistics36.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics36.getMaxImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic38);
        double double40 = descriptiveStatistics0.getMax();
        double double41 = descriptiveStatistics0.getSum();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str21, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str24, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getVarianceImpl();
        double double2 = descriptiveStatistics0.getMax();
        double double3 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        java.lang.String str8 = descriptiveStatistics6.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics6.getSkewnessImpl();
        descriptiveStatistics4.setSkewnessImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = null;
        descriptiveStatistics11.setMaxImpl(univariateStatistic12);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double15 = descriptiveStatistics14.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics14.getMeanImpl();
        descriptiveStatistics11.setMeanImpl(univariateStatistic16);
        descriptiveStatistics4.setKurtosisImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        java.lang.String str21 = descriptiveStatistics19.toString();
        double double22 = descriptiveStatistics19.getSum();
        double double23 = descriptiveStatistics19.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        descriptiveStatistics19.setMinImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        java.lang.String str31 = descriptiveStatistics29.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics32 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics32.getKurtosisImpl();
        double double34 = descriptiveStatistics32.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics32.getKurtosisImpl();
        descriptiveStatistics29.setVarianceImpl(univariateStatistic35);
        descriptiveStatistics19.setSumImpl(univariateStatistic35);
        double double38 = descriptiveStatistics19.getSum();
        descriptiveStatistics19.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics40 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics40.getKurtosisImpl();
        java.lang.String str42 = descriptiveStatistics40.toString();
        double double43 = descriptiveStatistics40.getSum();
        long long44 = descriptiveStatistics40.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics45 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics45.getKurtosisImpl();
        java.lang.String str47 = descriptiveStatistics45.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        double double50 = descriptiveStatistics48.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics48.getKurtosisImpl();
        descriptiveStatistics45.setVarianceImpl(univariateStatistic51);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics45.getPercentileImpl();
        descriptiveStatistics40.setGeometricMeanImpl(univariateStatistic53);
        descriptiveStatistics19.setPercentileImpl(univariateStatistic53);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics56 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics56.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics58 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics58.getKurtosisImpl();
        descriptiveStatistics56.setSumsqImpl(univariateStatistic59);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics56.getPercentileImpl();
        descriptiveStatistics19.setGeometricMeanImpl(univariateStatistic61);
        descriptiveStatistics4.setMinImpl(univariateStatistic61);
        descriptiveStatistics0.setMeanImpl(univariateStatistic61);
        descriptiveStatistics0.addValue((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = descriptiveStatistics0.getPercentileImpl();
        double double69 = descriptiveStatistics0.getPercentile(Double.NaN);
        org.junit.Assert.assertNotNull(descriptiveStatistics0);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str8, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str21, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str31, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str42, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str47, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertNotNull(univariateStatistic67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics0.getSumImpl();
        double double11 = descriptiveStatistics0.getSum();
        long long12 = descriptiveStatistics0.getN();
        double double13 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        descriptiveStatistics15.setWindowSize((int) (byte) 1);
        java.lang.String str18 = descriptiveStatistics15.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        java.lang.String str21 = descriptiveStatistics19.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        double double24 = descriptiveStatistics22.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics19.setVarianceImpl(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics19.getPercentileImpl();
        double double28 = descriptiveStatistics19.getGeometricMean();
        descriptiveStatistics19.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        double[] doubleArray33 = descriptiveStatistics31.getSortedValues();
        descriptiveStatistics31.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics31.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = null;
        descriptiveStatistics37.setMaxImpl(univariateStatistic38);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics40 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics40.getKurtosisImpl();
        double double42 = descriptiveStatistics40.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics40.getKurtosisImpl();
        descriptiveStatistics37.setMaxImpl(univariateStatistic43);
        descriptiveStatistics31.setMinImpl(univariateStatistic43);
        descriptiveStatistics19.setKurtosisImpl(univariateStatistic43);
        double double47 = descriptiveStatistics19.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        java.lang.String str50 = descriptiveStatistics48.toString();
        double double51 = descriptiveStatistics48.getSum();
        long long52 = descriptiveStatistics48.getN();
        double double53 = descriptiveStatistics48.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics48.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics48.getGeometricMeanImpl();
        double double56 = descriptiveStatistics48.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics58 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics59 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics59.getKurtosisImpl();
        java.lang.String str61 = descriptiveStatistics59.toString();
        double double62 = descriptiveStatistics59.getSum();
        double double63 = descriptiveStatistics59.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics64 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics64.getKurtosisImpl();
        double double66 = descriptiveStatistics64.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = descriptiveStatistics64.getKurtosisImpl();
        descriptiveStatistics59.setMinImpl(univariateStatistic67);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics69 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics69.getKurtosisImpl();
        java.lang.String str71 = descriptiveStatistics69.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics72 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics72.getKurtosisImpl();
        double double74 = descriptiveStatistics72.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics72.getKurtosisImpl();
        descriptiveStatistics69.setVarianceImpl(univariateStatistic75);
        descriptiveStatistics59.setSumImpl(univariateStatistic75);
        double double78 = descriptiveStatistics59.getSum();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics79 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic80 = descriptiveStatistics79.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics81 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic82 = descriptiveStatistics81.getKurtosisImpl();
        descriptiveStatistics79.setSumsqImpl(univariateStatistic82);
        double double84 = descriptiveStatistics79.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic85 = descriptiveStatistics79.getSkewnessImpl();
        descriptiveStatistics59.setSkewnessImpl(univariateStatistic85);
        descriptiveStatistics58.setSkewnessImpl(univariateStatistic85);
        descriptiveStatistics48.setMaxImpl(univariateStatistic85);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic89 = descriptiveStatistics48.getMaxImpl();
        descriptiveStatistics19.setSumImpl(univariateStatistic89);
        descriptiveStatistics15.setVarianceImpl(univariateStatistic89);
        descriptiveStatistics0.setSumsqImpl(univariateStatistic89);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str21, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str50, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str61, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(univariateStatistic67);
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str71, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(univariateStatistic80);
        org.junit.Assert.assertNotNull(univariateStatistic82);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(univariateStatistic85);
        org.junit.Assert.assertNotNull(univariateStatistic89);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getVarianceImpl();
        double double2 = descriptiveStatistics0.getMax();
        double double3 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getSkewnessImpl();
        double[] doubleArray7 = descriptiveStatistics0.getValues();
        int int8 = descriptiveStatistics0.getWindowSize();
        org.junit.Assert.assertNotNull(descriptiveStatistics0);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        java.lang.Class<?> wildcardClass10 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass10);
        double double12 = descriptiveStatistics11.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        double double14 = descriptiveStatistics11.getGeometricMean();
        double double15 = descriptiveStatistics11.getSum();
        descriptiveStatistics11.clear();
        double double18 = descriptiveStatistics11.getPercentile((double) 10.0f);
        double double19 = descriptiveStatistics11.getStandardDeviation();
        descriptiveStatistics11.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = null;
        descriptiveStatistics11.setMinImpl(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = null;
        descriptiveStatistics0.setMaxImpl(univariateStatistic1);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic6);
        long long8 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics9 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics9.getKurtosisImpl();
        java.lang.String str11 = descriptiveStatistics9.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        double double14 = descriptiveStatistics12.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics12.getKurtosisImpl();
        descriptiveStatistics9.setVarianceImpl(univariateStatistic15);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics9.getMeanImpl();
        java.lang.String str18 = descriptiveStatistics9.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics9.getSkewnessImpl();
        double double20 = descriptiveStatistics9.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        double double25 = descriptiveStatistics21.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        double double28 = descriptiveStatistics26.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics21.setMinImpl(univariateStatistic29);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        double double36 = descriptiveStatistics34.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics34.getKurtosisImpl();
        descriptiveStatistics31.setVarianceImpl(univariateStatistic37);
        descriptiveStatistics21.setSumImpl(univariateStatistic37);
        double double40 = descriptiveStatistics21.getSum();
        descriptiveStatistics21.clear();
        double double42 = descriptiveStatistics21.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics21.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        double[] doubleArray46 = descriptiveStatistics44.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics44.getSumsqImpl();
        descriptiveStatistics21.setSkewnessImpl(univariateStatistic47);
        descriptiveStatistics9.setMeanImpl(univariateStatistic47);
        descriptiveStatistics0.setSumsqImpl(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics54.getKurtosisImpl();
        java.lang.String str56 = descriptiveStatistics54.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics54.getSkewnessImpl();
        descriptiveStatistics52.setSkewnessImpl(univariateStatistic57);
        double double59 = descriptiveStatistics52.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics52.getMinImpl();
        double double62 = descriptiveStatistics52.getPercentile((double) 100L);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics63 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics63.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics65 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics65.getKurtosisImpl();
        descriptiveStatistics63.setSumsqImpl(univariateStatistic66);
        double double68 = descriptiveStatistics63.getMean();
        long long69 = descriptiveStatistics63.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics63.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics63.getVarianceImpl();
        descriptiveStatistics52.setSumImpl(univariateStatistic71);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics52.getMinImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic73);
        org.junit.Assert.assertNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str11, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str56, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertNotNull(univariateStatistic73);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double20 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        double double26 = descriptiveStatistics24.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics24.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics24.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics24.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        java.lang.String str32 = descriptiveStatistics30.toString();
        double double33 = descriptiveStatistics30.getSum();
        double double34 = descriptiveStatistics30.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        double double37 = descriptiveStatistics35.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics35.getKurtosisImpl();
        descriptiveStatistics30.setMinImpl(univariateStatistic38);
        double double40 = descriptiveStatistics30.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics30.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics30.getPercentileImpl();
        descriptiveStatistics24.setMaxImpl(univariateStatistic42);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str32, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic42);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        double double8 = descriptiveStatistics5.getSum();
        long long9 = descriptiveStatistics5.getN();
        java.lang.String str10 = descriptiveStatistics5.toString();
        int int11 = descriptiveStatistics5.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        java.lang.String str14 = descriptiveStatistics12.toString();
        double double15 = descriptiveStatistics12.getSum();
        long long16 = descriptiveStatistics12.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics17 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics17.getKurtosisImpl();
        java.lang.String str19 = descriptiveStatistics17.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        double double22 = descriptiveStatistics20.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics20.getKurtosisImpl();
        descriptiveStatistics17.setVarianceImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics17.getPercentileImpl();
        descriptiveStatistics12.setGeometricMeanImpl(univariateStatistic25);
        double double27 = descriptiveStatistics5.apply(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics5.getSumsqImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        double double36 = descriptiveStatistics34.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics34.getKurtosisImpl();
        descriptiveStatistics31.setVarianceImpl(univariateStatistic37);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics31.getPercentileImpl();
        double double40 = descriptiveStatistics31.getGeometricMean();
        descriptiveStatistics31.setWindowSize((int) '4');
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        double[] doubleArray45 = descriptiveStatistics43.getSortedValues();
        descriptiveStatistics43.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics43.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = null;
        descriptiveStatistics49.setMaxImpl(univariateStatistic50);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        double double54 = descriptiveStatistics52.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics52.getKurtosisImpl();
        descriptiveStatistics49.setMaxImpl(univariateStatistic55);
        descriptiveStatistics43.setMinImpl(univariateStatistic55);
        descriptiveStatistics31.setKurtosisImpl(univariateStatistic55);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics59 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics59.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics61 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics61.getKurtosisImpl();
        java.lang.String str63 = descriptiveStatistics61.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics61.getSkewnessImpl();
        descriptiveStatistics59.setSkewnessImpl(univariateStatistic64);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics66 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic67 = null;
        descriptiveStatistics66.setMaxImpl(univariateStatistic67);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics69 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double70 = descriptiveStatistics69.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics69.getMeanImpl();
        descriptiveStatistics66.setMeanImpl(univariateStatistic71);
        descriptiveStatistics59.setKurtosisImpl(univariateStatistic71);
        double double74 = descriptiveStatistics59.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics75 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic76 = descriptiveStatistics75.getKurtosisImpl();
        java.lang.String str77 = descriptiveStatistics75.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics78 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics78.getKurtosisImpl();
        double double80 = descriptiveStatistics78.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic81 = descriptiveStatistics78.getKurtosisImpl();
        descriptiveStatistics75.setVarianceImpl(univariateStatistic81);
        descriptiveStatistics59.setKurtosisImpl(univariateStatistic81);
        descriptiveStatistics31.setMinImpl(univariateStatistic81);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics85 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics86 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic87 = descriptiveStatistics86.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics88 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic89 = descriptiveStatistics88.getKurtosisImpl();
        descriptiveStatistics86.setSumsqImpl(univariateStatistic89);
        descriptiveStatistics85.setVarianceImpl(univariateStatistic89);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic92 = descriptiveStatistics85.getPercentileImpl();
        descriptiveStatistics31.setMinImpl(univariateStatistic92);
        descriptiveStatistics0.setMinImpl(univariateStatistic92);
        long long95 = descriptiveStatistics0.getN();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic97 = descriptiveStatistics0.getKurtosisImpl();
        double double98 = descriptiveStatistics0.getMean();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str14, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str19, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str63, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(univariateStatistic76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str77, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(univariateStatistic81);
        org.junit.Assert.assertNotNull(univariateStatistic87);
        org.junit.Assert.assertNotNull(univariateStatistic89);
        org.junit.Assert.assertNotNull(univariateStatistic92);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic97);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getMinImpl();
        double double5 = descriptiveStatistics0.getKurtosis();
        double double6 = descriptiveStatistics0.getMax();
        double double7 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        double[] doubleArray4 = descriptiveStatistics0.getValues();
        double double6 = descriptiveStatistics0.getPercentile((double) 1);
        double double7 = descriptiveStatistics0.getStandardDeviation();
        long long8 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getGeometricMeanImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic9);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = descriptiveStatistics1.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics1.setSumsqImpl(univariateStatistic4);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic4);
        double double7 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        int int9 = descriptiveStatistics0.getWindowSize();
        org.junit.Assert.assertNotNull(univariateStatistic2);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics((int) (byte) 10);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = descriptiveStatistics1.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics3.setSumsqImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics3.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics3.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics11.setSumsqImpl(univariateStatistic14);
        descriptiveStatistics10.setVarianceImpl(univariateStatistic14);
        double double17 = descriptiveStatistics10.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        java.lang.String str20 = descriptiveStatistics18.toString();
        double double21 = descriptiveStatistics18.getSum();
        double double22 = descriptiveStatistics18.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        double double25 = descriptiveStatistics23.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics23.getKurtosisImpl();
        descriptiveStatistics18.setMinImpl(univariateStatistic26);
        double double28 = descriptiveStatistics18.getStandardDeviation();
        double double29 = descriptiveStatistics18.getMin();
        double double30 = descriptiveStatistics18.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics18.getSumImpl();
        descriptiveStatistics10.setKurtosisImpl(univariateStatistic31);
        descriptiveStatistics3.setKurtosisImpl(univariateStatistic31);
        descriptiveStatistics1.setGeometricMeanImpl(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        java.lang.String str37 = descriptiveStatistics35.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics38 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics38.getKurtosisImpl();
        double double40 = descriptiveStatistics38.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics38.getKurtosisImpl();
        descriptiveStatistics35.setVarianceImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics35.getPercentileImpl();
        double double44 = descriptiveStatistics35.getGeometricMean();
        descriptiveStatistics35.setWindowSize((int) '4');
        double[] doubleArray47 = descriptiveStatistics35.getSortedValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics35.getSkewnessImpl();
        descriptiveStatistics1.setMeanImpl(univariateStatistic48);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics1.getPercentileImpl();
        org.junit.Assert.assertNotNull(univariateStatistic2);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str20, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str37, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertNotNull(univariateStatistic50);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        descriptiveStatistics4.setSumsqImpl(univariateStatistic7);
        double double9 = descriptiveStatistics4.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics4.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic10);
        double double12 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        java.lang.String str15 = descriptiveStatistics13.toString();
        double double16 = descriptiveStatistics13.getSum();
        double double17 = descriptiveStatistics13.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics13.setMinImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics13.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics13.getSumsqImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic24);
        double[] doubleArray26 = descriptiveStatistics0.getSortedValues();
        double double28 = descriptiveStatistics0.getPercentile(1.0d);
        double double29 = descriptiveStatistics0.getMax();
        descriptiveStatistics0.addValue((double) (short) -1);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics32 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double33 = descriptiveStatistics32.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        double double37 = descriptiveStatistics34.getSum();
        double double38 = descriptiveStatistics34.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics34.setMinImpl(univariateStatistic42);
        descriptiveStatistics32.setMaxImpl(univariateStatistic42);
        descriptiveStatistics0.setMaxImpl(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str15, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        descriptiveStatistics4.setSumsqImpl(univariateStatistic7);
        double double9 = descriptiveStatistics4.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics4.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic10);
        double double12 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        java.lang.String str15 = descriptiveStatistics13.toString();
        double double16 = descriptiveStatistics13.getSum();
        double double17 = descriptiveStatistics13.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics13.setMinImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics13.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics13.getSumsqImpl();
        descriptiveStatistics0.setSumImpl(univariateStatistic24);
        double[] doubleArray26 = descriptiveStatistics0.getSortedValues();
        double[] doubleArray27 = descriptiveStatistics0.getSortedValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = null;
        descriptiveStatistics28.setMaxImpl(univariateStatistic29);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        double double33 = descriptiveStatistics31.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics31.getKurtosisImpl();
        descriptiveStatistics28.setMaxImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics28.getSumImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic36);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics0.getGeometricMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        java.lang.String str41 = descriptiveStatistics39.toString();
        double double42 = descriptiveStatistics39.getSum();
        long long43 = descriptiveStatistics39.getN();
        double double44 = descriptiveStatistics39.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics39.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        double double48 = descriptiveStatistics46.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics46.getKurtosisImpl();
        double double50 = descriptiveStatistics39.apply(univariateStatistic49);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics51 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = null;
        descriptiveStatistics51.setMaxImpl(univariateStatistic52);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics54 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double55 = descriptiveStatistics54.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics54.getMeanImpl();
        descriptiveStatistics51.setMeanImpl(univariateStatistic56);
        descriptiveStatistics39.setKurtosisImpl(univariateStatistic56);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics39.getGeometricMeanImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic59);
        double[] doubleArray61 = descriptiveStatistics0.getSortedValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str15, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str41, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics0.getSumsqImpl();
        double double21 = descriptiveStatistics0.getGeometricMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getKurtosisImpl();
        descriptiveStatistics0.setWindowSize(52);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = null;
        descriptiveStatistics8.setMaxImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double12 = descriptiveStatistics11.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        descriptiveStatistics8.setMeanImpl(univariateStatistic13);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic13);
        double double16 = descriptiveStatistics0.getStandardDeviation();
        descriptiveStatistics0.clear();
        double double18 = descriptiveStatistics0.getKurtosis();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray2 = descriptiveStatistics0.getSortedValues();
        double double3 = descriptiveStatistics0.getGeometricMean();
        double double4 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        double double10 = descriptiveStatistics8.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getKurtosisImpl();
        descriptiveStatistics5.setVarianceImpl(univariateStatistic11);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics5.getMeanImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics0.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics0.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        double double21 = descriptiveStatistics19.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics19.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics19.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics19.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics19.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics19.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics19.getSumImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic27);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics0.getKurtosisImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertNotNull(univariateStatistic29);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = null;
        descriptiveStatistics0.setMinImpl(univariateStatistic2);
        descriptiveStatistics0.addValue((-1.0d));
        double double6 = descriptiveStatistics0.getKurtosis();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic2 = descriptiveStatistics1.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics1.setSumsqImpl(univariateStatistic4);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic4);
        double double7 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMinImpl();
        double double9 = descriptiveStatistics0.getGeometricMean();
        double[] doubleArray10 = descriptiveStatistics0.getSortedValues();
        double double11 = descriptiveStatistics0.getSumsq();
        org.junit.Assert.assertNotNull(univariateStatistic2);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getGeometricMean();
        double double3 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = null;
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic4);
        double double6 = descriptiveStatistics0.getKurtosis();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        double double9 = descriptiveStatistics7.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics7.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics7.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics7.getSumsqImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic12);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics0.getMaxImpl();
        double double15 = descriptiveStatistics0.getMin();
        descriptiveStatistics0.clear();
        double[] doubleArray17 = descriptiveStatistics0.getValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double[] doubleArray2 = descriptiveStatistics0.getSortedValues();
        descriptiveStatistics0.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        long long11 = descriptiveStatistics7.getN();
        java.lang.String str12 = descriptiveStatistics7.toString();
        int int13 = descriptiveStatistics7.getWindowSize();
        long long14 = descriptiveStatistics7.getN();
        int int15 = descriptiveStatistics7.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        double double19 = descriptiveStatistics16.getSum();
        long long20 = descriptiveStatistics16.getN();
        double double21 = descriptiveStatistics16.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics16.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics16.getMeanImpl();
        descriptiveStatistics7.setMeanImpl(univariateStatistic23);
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics27 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics27.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics27.setSumsqImpl(univariateStatistic30);
        descriptiveStatistics26.setVarianceImpl(univariateStatistic30);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics26.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        double double37 = descriptiveStatistics34.getSum();
        double double38 = descriptiveStatistics34.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics34.setMinImpl(univariateStatistic42);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        java.lang.String str46 = descriptiveStatistics44.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics47 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic48 = descriptiveStatistics47.getKurtosisImpl();
        double double49 = descriptiveStatistics47.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics47.getKurtosisImpl();
        descriptiveStatistics44.setVarianceImpl(univariateStatistic50);
        descriptiveStatistics34.setSumImpl(univariateStatistic50);
        double double53 = descriptiveStatistics34.getSum();
        descriptiveStatistics34.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics55 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = descriptiveStatistics55.getKurtosisImpl();
        java.lang.String str57 = descriptiveStatistics55.toString();
        double double58 = descriptiveStatistics55.getSum();
        long long59 = descriptiveStatistics55.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics60 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics60.getKurtosisImpl();
        java.lang.String str62 = descriptiveStatistics60.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics63 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics63.getKurtosisImpl();
        double double65 = descriptiveStatistics63.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic66 = descriptiveStatistics63.getKurtosisImpl();
        descriptiveStatistics60.setVarianceImpl(univariateStatistic66);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics60.getPercentileImpl();
        descriptiveStatistics55.setGeometricMeanImpl(univariateStatistic68);
        descriptiveStatistics34.setPercentileImpl(univariateStatistic68);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic71 = descriptiveStatistics34.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics73 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        int int74 = descriptiveStatistics73.getWindowSize();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics73.getMeanImpl();
        descriptiveStatistics34.setVarianceImpl(univariateStatistic75);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics34.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic78 = descriptiveStatistics34.getKurtosisImpl();
        descriptiveStatistics26.setMeanImpl(univariateStatistic78);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic78);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str46, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str57, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str62, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(univariateStatistic66);
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertNotNull(univariateStatistic71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertNotNull(univariateStatistic78);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics1 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(1);
        descriptiveStatistics1.clear();
        double[] doubleArray3 = descriptiveStatistics1.getSortedValues();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        descriptiveStatistics5.setSumsqImpl(univariateStatistic8);
        descriptiveStatistics4.setVarianceImpl(univariateStatistic8);
        double double11 = descriptiveStatistics4.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics4.getMinImpl();
        double double13 = descriptiveStatistics4.getGeometricMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics4.getSumImpl();
        descriptiveStatistics1.setMaxImpl(univariateStatistic14);
        int int16 = descriptiveStatistics1.getWindowSize();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        double double21 = descriptiveStatistics0.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getPercentileImpl();
        double double23 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics24.getKurtosisImpl();
        java.lang.String str26 = descriptiveStatistics24.toString();
        double double27 = descriptiveStatistics24.getSum();
        double double28 = descriptiveStatistics24.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        double double31 = descriptiveStatistics29.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics24.setMinImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        java.lang.String str36 = descriptiveStatistics34.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        double double39 = descriptiveStatistics37.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics37.getKurtosisImpl();
        descriptiveStatistics34.setVarianceImpl(univariateStatistic40);
        descriptiveStatistics24.setSumImpl(univariateStatistic40);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics24.getSumImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic43);
        descriptiveStatistics0.addValue((double) (byte) 100);
        double double47 = descriptiveStatistics0.getMin();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str26, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str36, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics8.getKurtosisImpl();
        java.lang.String str10 = descriptiveStatistics8.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics8.getSkewnessImpl();
        descriptiveStatistics0.setMeanImpl(univariateStatistic11);
        double[] doubleArray13 = descriptiveStatistics0.getSortedValues();
        double double14 = descriptiveStatistics0.getMean();
        double double15 = descriptiveStatistics0.getStandardDeviation();
        double double16 = descriptiveStatistics0.getVariance();
        descriptiveStatistics0.setWindowSize((int) 'a');
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str10, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        java.lang.String str7 = descriptiveStatistics5.toString();
        double double8 = descriptiveStatistics5.getSum();
        double double9 = descriptiveStatistics5.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        double double12 = descriptiveStatistics10.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics10.getKurtosisImpl();
        descriptiveStatistics5.setMinImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        double double20 = descriptiveStatistics18.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics18.getKurtosisImpl();
        descriptiveStatistics15.setVarianceImpl(univariateStatistic21);
        descriptiveStatistics5.setSumImpl(univariateStatistic21);
        double double24 = descriptiveStatistics5.getSum();
        descriptiveStatistics5.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        double double29 = descriptiveStatistics26.getSum();
        long long30 = descriptiveStatistics26.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics34 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics34.getKurtosisImpl();
        double double36 = descriptiveStatistics34.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics34.getKurtosisImpl();
        descriptiveStatistics31.setVarianceImpl(univariateStatistic37);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics31.getPercentileImpl();
        descriptiveStatistics26.setGeometricMeanImpl(univariateStatistic39);
        descriptiveStatistics5.setPercentileImpl(univariateStatistic39);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics42.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        descriptiveStatistics42.setSumsqImpl(univariateStatistic45);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics42.getPercentileImpl();
        descriptiveStatistics5.setGeometricMeanImpl(univariateStatistic47);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic47);
        int int50 = descriptiveStatistics0.getWindowSize();
        double double51 = descriptiveStatistics0.getMean();
        double[] doubleArray52 = descriptiveStatistics0.getValues();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str7, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        java.lang.Class<?> wildcardClass10 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass10);
        double double12 = descriptiveStatistics11.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getVarianceImpl();
        descriptiveStatistics11.setKurtosisImpl(univariateStatistic15);
        double double17 = descriptiveStatistics11.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics11.getKurtosisImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(descriptiveStatistics14);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(univariateStatistic18);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        double double6 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getKurtosisImpl();
        java.lang.String str9 = descriptiveStatistics7.toString();
        double double10 = descriptiveStatistics7.getSum();
        double double11 = descriptiveStatistics7.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics7.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics7.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        descriptiveStatistics14.setSumsqImpl(univariateStatistic17);
        double double20 = descriptiveStatistics14.getPercentile(Double.NaN);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        long long25 = descriptiveStatistics21.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        double double31 = descriptiveStatistics29.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics26.setVarianceImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics26.getPercentileImpl();
        descriptiveStatistics21.setGeometricMeanImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getVarianceImpl();
        double double38 = descriptiveStatistics21.apply(univariateStatistic37);
        double double39 = descriptiveStatistics14.apply(univariateStatistic37);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics40 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics40.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics42 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics42.getKurtosisImpl();
        java.lang.String str44 = descriptiveStatistics42.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics42.getSkewnessImpl();
        descriptiveStatistics40.setSkewnessImpl(univariateStatistic45);
        double double47 = descriptiveStatistics40.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        java.lang.String str50 = descriptiveStatistics48.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics48.getSkewnessImpl();
        descriptiveStatistics40.setMeanImpl(univariateStatistic51);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics53 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics53.getKurtosisImpl();
        double double55 = descriptiveStatistics53.getGeometricMean();
        double double56 = descriptiveStatistics53.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        java.lang.String str59 = descriptiveStatistics57.toString();
        double double60 = descriptiveStatistics57.getSum();
        long long61 = descriptiveStatistics57.getN();
        double double62 = descriptiveStatistics57.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics57.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics57.getGeometricMeanImpl();
        descriptiveStatistics53.setSkewnessImpl(univariateStatistic64);
        descriptiveStatistics40.setSumsqImpl(univariateStatistic64);
        descriptiveStatistics14.setVarianceImpl(univariateStatistic64);
        double double68 = descriptiveStatistics7.apply(univariateStatistic64);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic69 = descriptiveStatistics7.getMinImpl();
        double double70 = descriptiveStatistics0.apply(univariateStatistic69);
        double double71 = descriptiveStatistics0.getKurtosis();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str9, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(descriptiveStatistics36);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str44, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str50, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str59, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(univariateStatistic69);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics0.getSumImpl();
        descriptiveStatistics0.setWindowSize((int) (byte) -1);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics7.getVarianceImpl();
        double double9 = descriptiveStatistics7.getMax();
        java.lang.Class<?> wildcardClass10 = descriptiveStatistics7.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass10);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getMeanImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getVarianceImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertNotNull(descriptiveStatistics7);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertNotNull(univariateStatistic13);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics7 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = null;
        descriptiveStatistics7.setMaxImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double11 = descriptiveStatistics10.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics10.getMeanImpl();
        descriptiveStatistics7.setMeanImpl(univariateStatistic12);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic12);
        double double15 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics19.getKurtosisImpl();
        double double21 = descriptiveStatistics19.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics19.getKurtosisImpl();
        descriptiveStatistics16.setVarianceImpl(univariateStatistic22);
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics0.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics0.getKurtosisImpl();
        descriptiveStatistics0.addValue(0.0d);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics31 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics31.getKurtosisImpl();
        java.lang.String str33 = descriptiveStatistics31.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics31.getSkewnessImpl();
        descriptiveStatistics29.setSkewnessImpl(univariateStatistic34);
        double double36 = descriptiveStatistics29.getSumsq();
        long long37 = descriptiveStatistics29.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics29.getMeanImpl();
        double double39 = descriptiveStatistics29.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics29.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        java.lang.String str45 = descriptiveStatistics43.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics43.getSkewnessImpl();
        descriptiveStatistics41.setSkewnessImpl(univariateStatistic46);
        double double48 = descriptiveStatistics41.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = null;
        descriptiveStatistics49.setMaxImpl(univariateStatistic50);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double53 = descriptiveStatistics52.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics52.getMeanImpl();
        descriptiveStatistics49.setMeanImpl(univariateStatistic54);
        descriptiveStatistics41.setVarianceImpl(univariateStatistic54);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics41.getMinImpl();
        descriptiveStatistics29.setMinImpl(univariateStatistic57);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics59 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = null;
        descriptiveStatistics59.setMaxImpl(univariateStatistic60);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics59.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics59.getVarianceImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic64 = descriptiveStatistics59.getKurtosisImpl();
        descriptiveStatistics29.setMeanImpl(univariateStatistic64);
        double double66 = descriptiveStatistics0.apply(univariateStatistic64);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str33, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str45, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertNull(univariateStatistic62);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic64);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics3 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic4 = descriptiveStatistics3.getKurtosisImpl();
        double double5 = descriptiveStatistics3.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics3.getKurtosisImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic6);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics0.getMeanImpl();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        double double10 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic12 = descriptiveStatistics11.getKurtosisImpl();
        java.lang.String str13 = descriptiveStatistics11.toString();
        double double14 = descriptiveStatistics11.getSum();
        long long15 = descriptiveStatistics11.getN();
        java.lang.String str16 = descriptiveStatistics11.toString();
        int int17 = descriptiveStatistics11.getWindowSize();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics18 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics18.getKurtosisImpl();
        java.lang.String str20 = descriptiveStatistics18.toString();
        double double21 = descriptiveStatistics18.getSum();
        long long22 = descriptiveStatistics18.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic24 = descriptiveStatistics23.getKurtosisImpl();
        java.lang.String str25 = descriptiveStatistics23.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        double double28 = descriptiveStatistics26.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics26.getKurtosisImpl();
        descriptiveStatistics23.setVarianceImpl(univariateStatistic29);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics23.getPercentileImpl();
        descriptiveStatistics18.setGeometricMeanImpl(univariateStatistic31);
        double double33 = descriptiveStatistics11.apply(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics11.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics35 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = descriptiveStatistics35.getKurtosisImpl();
        double double37 = descriptiveStatistics35.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics35.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics35.getSumImpl();
        descriptiveStatistics11.setMaxImpl(univariateStatistic39);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics11.getMinImpl();
        descriptiveStatistics0.setMaxImpl(univariateStatistic41);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics43 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics43.getKurtosisImpl();
        java.lang.String str45 = descriptiveStatistics43.toString();
        double double46 = descriptiveStatistics43.getSum();
        double double47 = descriptiveStatistics43.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics48 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic49 = descriptiveStatistics48.getKurtosisImpl();
        double double50 = descriptiveStatistics48.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic51 = descriptiveStatistics48.getKurtosisImpl();
        descriptiveStatistics43.setMinImpl(univariateStatistic51);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics53 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic54 = descriptiveStatistics53.getKurtosisImpl();
        java.lang.String str55 = descriptiveStatistics53.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics56 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic57 = descriptiveStatistics56.getKurtosisImpl();
        double double58 = descriptiveStatistics56.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = descriptiveStatistics56.getKurtosisImpl();
        descriptiveStatistics53.setVarianceImpl(univariateStatistic59);
        descriptiveStatistics43.setSumImpl(univariateStatistic59);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic62 = descriptiveStatistics43.getSumImpl();
        double double64 = descriptiveStatistics43.getPercentile((double) 10.0f);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics43.getPercentileImpl();
        descriptiveStatistics0.setVarianceImpl(univariateStatistic65);
        descriptiveStatistics0.clear();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic4);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str13, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str16, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str20, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str25, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str45, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(univariateStatistic49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(univariateStatistic51);
        org.junit.Assert.assertNotNull(univariateStatistic54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str55, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(univariateStatistic59);
        org.junit.Assert.assertNotNull(univariateStatistic62);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(univariateStatistic65);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics8 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = null;
        descriptiveStatistics8.setMaxImpl(univariateStatistic9);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double12 = descriptiveStatistics11.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        descriptiveStatistics8.setMeanImpl(univariateStatistic13);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic13);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics0.getMinImpl();
        double double17 = descriptiveStatistics0.getVariance();
        double double18 = descriptiveStatistics0.getMax();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics0.getVarianceImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(univariateStatistic20);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        long long4 = descriptiveStatistics0.getN();
        double double5 = descriptiveStatistics0.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics0.getMaxImpl();
        descriptiveStatistics0.clear();
        double[] doubleArray8 = descriptiveStatistics0.getValues();
        double double9 = descriptiveStatistics0.getStandardDeviation();
        double double10 = descriptiveStatistics0.getMin();
        double double11 = descriptiveStatistics0.getKurtosis();
        double[] doubleArray12 = descriptiveStatistics0.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics0.getGeometricMeanImpl();
        double double15 = descriptiveStatistics0.getSkewness();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics0.getSumsqImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getKurtosis();
        double double11 = descriptiveStatistics0.getMean();
        descriptiveStatistics0.setWindowSize(1);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics16 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics16.getKurtosisImpl();
        java.lang.String str18 = descriptiveStatistics16.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics16.getSkewnessImpl();
        descriptiveStatistics14.setSkewnessImpl(univariateStatistic19);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = null;
        descriptiveStatistics21.setMaxImpl(univariateStatistic22);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics24 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double25 = descriptiveStatistics24.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics24.getMeanImpl();
        descriptiveStatistics21.setMeanImpl(univariateStatistic26);
        descriptiveStatistics14.setKurtosisImpl(univariateStatistic26);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics14.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics30 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics30.getKurtosisImpl();
        double[] doubleArray32 = descriptiveStatistics30.getValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics30.getSumsqImpl();
        descriptiveStatistics14.setKurtosisImpl(univariateStatistic33);
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic33);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics36 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic37 = descriptiveStatistics36.getKurtosisImpl();
        java.lang.String str38 = descriptiveStatistics36.toString();
        double double39 = descriptiveStatistics36.getSum();
        double double40 = descriptiveStatistics36.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics41 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics41.getKurtosisImpl();
        double double43 = descriptiveStatistics41.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics41.getKurtosisImpl();
        descriptiveStatistics36.setMinImpl(univariateStatistic44);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics46 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics46.getKurtosisImpl();
        java.lang.String str48 = descriptiveStatistics46.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        double double51 = descriptiveStatistics49.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics49.getKurtosisImpl();
        descriptiveStatistics46.setVarianceImpl(univariateStatistic52);
        descriptiveStatistics36.setSumImpl(univariateStatistic52);
        double double55 = descriptiveStatistics36.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic56 = null;
        descriptiveStatistics36.setMeanImpl(univariateStatistic56);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics36.getSkewnessImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic58);
        double double60 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics0.getKurtosisImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str18, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertNotNull(univariateStatistic37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str38, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str48, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(univariateStatistic61);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        double double10 = descriptiveStatistics0.getStandardDeviation();
        double double11 = descriptiveStatistics0.getMin();
        double double12 = descriptiveStatistics0.getVariance();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics0.getSkewnessImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic14);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        double double2 = descriptiveStatistics0.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics4 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics4.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics6 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic7 = descriptiveStatistics6.getKurtosisImpl();
        descriptiveStatistics4.setSumsqImpl(univariateStatistic7);
        double double9 = descriptiveStatistics4.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic10 = descriptiveStatistics4.getSkewnessImpl();
        descriptiveStatistics0.setKurtosisImpl(univariateStatistic10);
        double double12 = descriptiveStatistics0.getMax();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double[] doubleArray15 = descriptiveStatistics13.getSortedValues();
        descriptiveStatistics13.addValue((double) ' ');
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic18 = descriptiveStatistics13.getSkewnessImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics19 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = null;
        descriptiveStatistics19.setMaxImpl(univariateStatistic20);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics22 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics22.getKurtosisImpl();
        double double24 = descriptiveStatistics22.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics22.getKurtosisImpl();
        descriptiveStatistics19.setMaxImpl(univariateStatistic25);
        descriptiveStatistics13.setMinImpl(univariateStatistic25);
        descriptiveStatistics0.setVarianceImpl(univariateStatistic25);
        double double29 = descriptiveStatistics0.getSkewness();
        long long30 = descriptiveStatistics0.getN();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertNotNull(univariateStatistic7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(univariateStatistic10);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic18);
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic19 = descriptiveStatistics0.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic20 = descriptiveStatistics0.getSumsqImpl();
        double double21 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics0.getMinImpl();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertNotNull(univariateStatistic19);
        org.junit.Assert.assertNotNull(univariateStatistic20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(univariateStatistic22);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics10 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics10.getKurtosisImpl();
        java.lang.String str12 = descriptiveStatistics10.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics13 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic14 = descriptiveStatistics13.getKurtosisImpl();
        double double15 = descriptiveStatistics13.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics13.getKurtosisImpl();
        descriptiveStatistics10.setVarianceImpl(univariateStatistic16);
        descriptiveStatistics0.setSumImpl(univariateStatistic16);
        double double19 = descriptiveStatistics0.getSum();
        descriptiveStatistics0.clear();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics21 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic22 = descriptiveStatistics21.getKurtosisImpl();
        java.lang.String str23 = descriptiveStatistics21.toString();
        double double24 = descriptiveStatistics21.getSum();
        long long25 = descriptiveStatistics21.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics26 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic27 = descriptiveStatistics26.getKurtosisImpl();
        java.lang.String str28 = descriptiveStatistics26.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics29 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics29.getKurtosisImpl();
        double double31 = descriptiveStatistics29.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic32 = descriptiveStatistics29.getKurtosisImpl();
        descriptiveStatistics26.setVarianceImpl(univariateStatistic32);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic34 = descriptiveStatistics26.getPercentileImpl();
        descriptiveStatistics21.setGeometricMeanImpl(univariateStatistic34);
        descriptiveStatistics0.setPercentileImpl(univariateStatistic34);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics37 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics37.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics37.setSumsqImpl(univariateStatistic40);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics37.getPercentileImpl();
        descriptiveStatistics0.setGeometricMeanImpl(univariateStatistic42);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics0.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics0.getMinImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic46 = descriptiveStatistics0.getPercentileImpl();
        descriptiveStatistics0.clear();
        double double48 = descriptiveStatistics0.getGeometricMean();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str12, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str23, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str28, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(univariateStatistic32);
        org.junit.Assert.assertNotNull(univariateStatistic34);
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertNotNull(univariateStatistic46);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        java.lang.String str2 = descriptiveStatistics0.toString();
        double double3 = descriptiveStatistics0.getSum();
        double double4 = descriptiveStatistics0.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics5 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic6 = descriptiveStatistics5.getKurtosisImpl();
        double double7 = descriptiveStatistics5.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic8 = descriptiveStatistics5.getKurtosisImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic8);
        java.lang.Class<?> wildcardClass10 = descriptiveStatistics0.getClass();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics11 = org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance((java.lang.Class) wildcardClass10);
        double double12 = descriptiveStatistics11.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics11.getMeanImpl();
        double double14 = descriptiveStatistics11.getGeometricMean();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics15 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic16 = descriptiveStatistics15.getKurtosisImpl();
        java.lang.String str17 = descriptiveStatistics15.toString();
        double double18 = descriptiveStatistics15.getSum();
        double double19 = descriptiveStatistics15.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = descriptiveStatistics20.getKurtosisImpl();
        double double22 = descriptiveStatistics20.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic23 = descriptiveStatistics20.getKurtosisImpl();
        descriptiveStatistics15.setMinImpl(univariateStatistic23);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics25 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic26 = descriptiveStatistics25.getKurtosisImpl();
        java.lang.String str27 = descriptiveStatistics25.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics28 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic29 = descriptiveStatistics28.getKurtosisImpl();
        double double30 = descriptiveStatistics28.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic31 = descriptiveStatistics28.getKurtosisImpl();
        descriptiveStatistics25.setVarianceImpl(univariateStatistic31);
        descriptiveStatistics15.setSumImpl(univariateStatistic31);
        descriptiveStatistics11.setSkewnessImpl(univariateStatistic31);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic35 = descriptiveStatistics11.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic36 = null;
        descriptiveStatistics11.setVarianceImpl(univariateStatistic36);
        long long38 = descriptiveStatistics11.getN();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics39 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic40 = descriptiveStatistics39.getKurtosisImpl();
        double double41 = descriptiveStatistics39.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic42 = descriptiveStatistics39.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics39.getSumImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic44 = descriptiveStatistics39.getPercentileImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics39.getSkewnessImpl();
        double double46 = descriptiveStatistics39.getMax();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic47 = descriptiveStatistics39.getKurtosisImpl();
        descriptiveStatistics11.setMinImpl(univariateStatistic47);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics50 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics(100);
        double double51 = descriptiveStatistics50.getVariance();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics52 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic53 = descriptiveStatistics52.getKurtosisImpl();
        java.lang.String str54 = descriptiveStatistics52.toString();
        double double55 = descriptiveStatistics52.getSum();
        double double56 = descriptiveStatistics52.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        double double59 = descriptiveStatistics57.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic60 = descriptiveStatistics57.getKurtosisImpl();
        descriptiveStatistics52.setMinImpl(univariateStatistic60);
        double double62 = descriptiveStatistics52.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics52.getSumImpl();
        descriptiveStatistics52.clear();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic65 = descriptiveStatistics52.getKurtosisImpl();
        descriptiveStatistics50.setMaxImpl(univariateStatistic65);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics67 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics67.getKurtosisImpl();
        java.lang.String str69 = descriptiveStatistics67.toString();
        double double70 = descriptiveStatistics67.getSum();
        long long71 = descriptiveStatistics67.getN();
        java.lang.String str72 = descriptiveStatistics67.toString();
        double[] doubleArray73 = descriptiveStatistics67.getValues();
        double[] doubleArray74 = descriptiveStatistics67.getSortedValues();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic75 = descriptiveStatistics67.getMeanImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics76 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic77 = descriptiveStatistics76.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics78 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic79 = descriptiveStatistics78.getKurtosisImpl();
        descriptiveStatistics76.setSumsqImpl(univariateStatistic79);
        double double81 = descriptiveStatistics76.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic82 = descriptiveStatistics76.getSkewnessImpl();
        descriptiveStatistics67.setSumsqImpl(univariateStatistic82);
        descriptiveStatistics50.setMeanImpl(univariateStatistic82);
        descriptiveStatistics11.setMeanImpl(univariateStatistic82);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str2, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(univariateStatistic6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(univariateStatistic8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(descriptiveStatistics11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(univariateStatistic16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str17, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(univariateStatistic21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(univariateStatistic23);
        org.junit.Assert.assertNotNull(univariateStatistic26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str27, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(univariateStatistic31);
        org.junit.Assert.assertNotNull(univariateStatistic35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(univariateStatistic42);
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertNotNull(univariateStatistic44);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(univariateStatistic47);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str54, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(univariateStatistic60);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertNotNull(univariateStatistic65);
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str69, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str72, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertNotNull(univariateStatistic75);
        org.junit.Assert.assertNotNull(univariateStatistic77);
        org.junit.Assert.assertNotNull(univariateStatistic79);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(univariateStatistic82);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        descriptiveStatistics0.setSumsqImpl(univariateStatistic3);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics0.getPercentileImpl();
        descriptiveStatistics0.addValue((double) 1L);
        double double8 = descriptiveStatistics0.getStandardDeviation();
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics0 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic1 = descriptiveStatistics0.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics2 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic3 = descriptiveStatistics2.getKurtosisImpl();
        java.lang.String str4 = descriptiveStatistics2.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic5 = descriptiveStatistics2.getSkewnessImpl();
        descriptiveStatistics0.setSkewnessImpl(univariateStatistic5);
        double double7 = descriptiveStatistics0.getSumsq();
        long long8 = descriptiveStatistics0.getN();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic9 = descriptiveStatistics0.getMeanImpl();
        double double10 = descriptiveStatistics0.getMean();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic11 = descriptiveStatistics0.getSumsqImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics12 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic13 = descriptiveStatistics12.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics14 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic15 = descriptiveStatistics14.getKurtosisImpl();
        java.lang.String str16 = descriptiveStatistics14.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic17 = descriptiveStatistics14.getSkewnessImpl();
        descriptiveStatistics12.setSkewnessImpl(univariateStatistic17);
        double double19 = descriptiveStatistics12.getSumsq();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics20 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic21 = null;
        descriptiveStatistics20.setMaxImpl(univariateStatistic21);
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics23 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        double double24 = descriptiveStatistics23.getSumsq();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic25 = descriptiveStatistics23.getMeanImpl();
        descriptiveStatistics20.setMeanImpl(univariateStatistic25);
        descriptiveStatistics12.setVarianceImpl(univariateStatistic25);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic28 = descriptiveStatistics12.getMinImpl();
        descriptiveStatistics0.setMinImpl(univariateStatistic28);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic30 = descriptiveStatistics0.getMinImpl();
        java.lang.String str31 = descriptiveStatistics0.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics32 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic33 = descriptiveStatistics32.getKurtosisImpl();
        java.lang.String str34 = descriptiveStatistics32.toString();
        double double35 = descriptiveStatistics32.getSum();
        long long36 = descriptiveStatistics32.getN();
        double double37 = descriptiveStatistics32.getSum();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic38 = descriptiveStatistics32.getMaxImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic39 = descriptiveStatistics32.getGeometricMeanImpl();
        double double40 = descriptiveStatistics32.getMin();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic41 = descriptiveStatistics32.getMaxImpl();
        java.lang.String str42 = descriptiveStatistics32.toString();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic43 = descriptiveStatistics32.getMaxImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics44 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic45 = descriptiveStatistics44.getKurtosisImpl();
        java.lang.String str46 = descriptiveStatistics44.toString();
        double double47 = descriptiveStatistics44.getSum();
        double double48 = descriptiveStatistics44.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics49 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic50 = descriptiveStatistics49.getKurtosisImpl();
        double double51 = descriptiveStatistics49.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic52 = descriptiveStatistics49.getKurtosisImpl();
        descriptiveStatistics44.setMinImpl(univariateStatistic52);
        double double54 = descriptiveStatistics44.getKurtosis();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic55 = descriptiveStatistics44.getSumImpl();
        java.lang.String str56 = descriptiveStatistics44.toString();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics57 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic58 = descriptiveStatistics57.getKurtosisImpl();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic59 = null;
        descriptiveStatistics57.setMinImpl(univariateStatistic59);
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic61 = descriptiveStatistics57.getMinImpl();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics62 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic63 = descriptiveStatistics62.getKurtosisImpl();
        java.lang.String str64 = descriptiveStatistics62.toString();
        double double65 = descriptiveStatistics62.getSum();
        double double66 = descriptiveStatistics62.getMin();
        org.apache.commons.math.stat.descriptive.DescriptiveStatistics descriptiveStatistics67 = new org.apache.commons.math.stat.descriptive.DescriptiveStatistics();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic68 = descriptiveStatistics67.getKurtosisImpl();
        double double69 = descriptiveStatistics67.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic70 = descriptiveStatistics67.getKurtosisImpl();
        descriptiveStatistics62.setMinImpl(univariateStatistic70);
        double double72 = descriptiveStatistics62.getStandardDeviation();
        org.apache.commons.math.stat.descriptive.UnivariateStatistic univariateStatistic73 = descriptiveStatistics62.getVarianceImpl();
        descriptiveStatistics57.setMinImpl(univariateStatistic73);
        descriptiveStatistics44.setVarianceImpl(univariateStatistic73);
        descriptiveStatistics32.setSumsqImpl(univariateStatistic73);
        descriptiveStatistics0.setMeanImpl(univariateStatistic73);
        double double79 = descriptiveStatistics0.getPercentile(100.0d);
        org.junit.Assert.assertNotNull(univariateStatistic1);
        org.junit.Assert.assertNotNull(univariateStatistic3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str4, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(univariateStatistic9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(univariateStatistic11);
        org.junit.Assert.assertNotNull(univariateStatistic13);
        org.junit.Assert.assertNotNull(univariateStatistic15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str16, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic17);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(univariateStatistic25);
        org.junit.Assert.assertNotNull(univariateStatistic28);
        org.junit.Assert.assertNotNull(univariateStatistic30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str31, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str34, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(univariateStatistic38);
        org.junit.Assert.assertNotNull(univariateStatistic39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(univariateStatistic41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str42, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic43);
        org.junit.Assert.assertNotNull(univariateStatistic45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str46, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(univariateStatistic50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(univariateStatistic52);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(univariateStatistic55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str56, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertNotNull(univariateStatistic58);
        org.junit.Assert.assertNull(univariateStatistic61);
        org.junit.Assert.assertNotNull(univariateStatistic63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n" + "'", str64, "DescriptiveStatistics:\nn: 0\nmin: NaN\nmax: NaN\nmean: NaN\nstd dev: NaN\nmedian: NaN\nskewness: NaN\nkurtosis: NaN\n");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(univariateStatistic68);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(univariateStatistic70);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(univariateStatistic73);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }
}

